/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/[[...sign-in]]/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmihirpradhan%2FDesktop%2Ftest%2Fsrc%2Fapp%2F%5B%5B...sign-in%5D%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmihirpradhan%2FDesktop%2Ftest%2Fsrc%2Fapp%2F%5B%5B...sign-in%5D%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*********************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/[[...sign-in]]/page.tsx */ \"(app-pages-browser)/./src/app/[[...sign-in]]/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtaWhpcnByYWRoYW4lMkZEZXNrdG9wJTJGdGVzdCUyRnNyYyUyRmFwcCUyRiU1QiU1Qi4uLnNpZ24taW4lNUQlNUQlMkZwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLDRMQUFxRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzhjYTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbWloaXJwcmFkaGFuL0Rlc2t0b3AvdGVzdC9zcmMvYXBwL1tbLi4uc2lnbi1pbl1dL3BhZ2UudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmihirpradhan%2FDesktop%2Ftest%2Fsrc%2Fapp%2F%5B%5B...sign-in%5D%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/types/dist/esm/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@clerk/types/dist/esm/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OAUTH_PROVIDERS: function() { return /* binding */ OAUTH_PROVIDERS; },\n/* harmony export */   SAML_IDPS: function() { return /* binding */ SAML_IDPS; },\n/* harmony export */   WEB3_PROVIDERS: function() { return /* binding */ WEB3_PROVIDERS; },\n/* harmony export */   getOAuthProviderData: function() { return /* binding */ getOAuthProviderData; },\n/* harmony export */   getWeb3ProviderData: function() { return /* binding */ getWeb3ProviderData; },\n/* harmony export */   sortedOAuthProviders: function() { return /* binding */ sortedOAuthProviders; }\n/* harmony export */ });\n// src/oauth.ts\nvar OAUTH_PROVIDERS = [\n  {\n    provider: \"google\",\n    strategy: \"oauth_google\",\n    name: \"Google\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/google\"\n  },\n  {\n    provider: \"discord\",\n    strategy: \"oauth_discord\",\n    name: \"Discord\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/discord\"\n  },\n  {\n    provider: \"facebook\",\n    strategy: \"oauth_facebook\",\n    name: \"Facebook\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/facebook\"\n  },\n  {\n    provider: \"twitch\",\n    strategy: \"oauth_twitch\",\n    name: \"Twitch\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/twitch\"\n  },\n  {\n    provider: \"twitter\",\n    strategy: \"oauth_twitter\",\n    name: \"Twitter\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/twitter\"\n  },\n  {\n    provider: \"microsoft\",\n    strategy: \"oauth_microsoft\",\n    name: \"Microsoft\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/microsoft\"\n  },\n  {\n    provider: \"tiktok\",\n    strategy: \"oauth_tiktok\",\n    name: \"TikTok\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/tiktok\"\n  },\n  {\n    provider: \"linkedin\",\n    strategy: \"oauth_linkedin\",\n    name: \"LinkedIn\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/linkedin\"\n  },\n  {\n    provider: \"linkedin_oidc\",\n    strategy: \"oauth_linkedin_oidc\",\n    name: \"LinkedIn\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/linkedin-oidc\"\n  },\n  {\n    provider: \"github\",\n    strategy: \"oauth_github\",\n    name: \"GitHub\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/github\"\n  },\n  {\n    provider: \"gitlab\",\n    strategy: \"oauth_gitlab\",\n    name: \"GitLab\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/gitlab\"\n  },\n  {\n    provider: \"dropbox\",\n    strategy: \"oauth_dropbox\",\n    name: \"Dropbox\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/dropbox\"\n  },\n  {\n    provider: \"atlassian\",\n    strategy: \"oauth_atlassian\",\n    name: \"Atlassian\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/atlassian\"\n  },\n  {\n    provider: \"bitbucket\",\n    strategy: \"oauth_bitbucket\",\n    name: \"Bitbucket\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/bitbucket\"\n  },\n  {\n    provider: \"hubspot\",\n    strategy: \"oauth_hubspot\",\n    name: \"HubSpot\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/hubspot\"\n  },\n  {\n    provider: \"notion\",\n    strategy: \"oauth_notion\",\n    name: \"Notion\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/notion\"\n  },\n  {\n    provider: \"apple\",\n    strategy: \"oauth_apple\",\n    name: \"Apple\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/apple\"\n  },\n  {\n    provider: \"line\",\n    strategy: \"oauth_line\",\n    name: \"LINE\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/line\"\n  },\n  {\n    provider: \"instagram\",\n    strategy: \"oauth_instagram\",\n    name: \"Instagram\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/instagram\"\n  },\n  {\n    provider: \"coinbase\",\n    strategy: \"oauth_coinbase\",\n    name: \"Coinbase\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/coinbase\"\n  },\n  {\n    provider: \"spotify\",\n    strategy: \"oauth_spotify\",\n    name: \"Spotify\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/spotify\"\n  },\n  {\n    provider: \"xero\",\n    strategy: \"oauth_xero\",\n    name: \"Xero\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/xero\"\n  },\n  {\n    provider: \"box\",\n    strategy: \"oauth_box\",\n    name: \"Box\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/box\"\n  },\n  {\n    provider: \"slack\",\n    strategy: \"oauth_slack\",\n    name: \"Slack\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/slack\"\n  },\n  {\n    provider: \"linear\",\n    strategy: \"oauth_linear\",\n    name: \"Linear\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/linear\"\n  },\n  {\n    provider: \"x\",\n    strategy: \"oauth_x\",\n    name: \"X / Twitter\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/x-twitter-v2\"\n  },\n  {\n    provider: \"enstall\",\n    strategy: \"oauth_enstall\",\n    name: \"Enstall\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/enstall\"\n  },\n  {\n    provider: \"huggingface\",\n    strategy: \"oauth_huggingface\",\n    name: \"Hugging Face\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/huggingface\"\n  }\n];\nfunction getOAuthProviderData({\n  provider,\n  strategy\n}) {\n  if (provider) {\n    return OAUTH_PROVIDERS.find((oauth_provider) => oauth_provider.provider == provider);\n  }\n  return OAUTH_PROVIDERS.find((oauth_provider) => oauth_provider.strategy == strategy);\n}\nfunction sortedOAuthProviders(sortingArray) {\n  return OAUTH_PROVIDERS.slice().sort((a, b) => {\n    let aPos = sortingArray.indexOf(a.strategy);\n    if (aPos == -1) {\n      aPos = Number.MAX_SAFE_INTEGER;\n    }\n    let bPos = sortingArray.indexOf(b.strategy);\n    if (bPos == -1) {\n      bPos = Number.MAX_SAFE_INTEGER;\n    }\n    return aPos - bPos;\n  });\n}\n\n// src/saml.ts\nvar SAML_IDPS = {\n  saml_okta: {\n    name: \"Okta Workforce\",\n    logo: \"okta\"\n  },\n  saml_google: {\n    name: \"Google Workspace\",\n    logo: \"google\"\n  },\n  saml_microsoft: {\n    name: \"Microsoft Entra ID (Formerly AD)\",\n    logo: \"azure\"\n  },\n  saml_custom: {\n    name: \"SAML\",\n    logo: \"saml\"\n  }\n};\n\n// src/web3.ts\nvar WEB3_PROVIDERS = [\n  {\n    provider: \"metamask\",\n    strategy: \"web3_metamask_signature\",\n    name: \"MetaMask\"\n  },\n  {\n    provider: \"coinbase_wallet\",\n    strategy: \"web3_coinbase_wallet_signature\",\n    name: \"Coinbase Wallet\"\n  }\n];\nfunction getWeb3ProviderData({\n  provider,\n  strategy\n}) {\n  if (provider) {\n    return WEB3_PROVIDERS.find((p) => p.provider == provider);\n  }\n  return WEB3_PROVIDERS.find((p) => p.strategy == strategy);\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/types/dist/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@xstate/react/dist/xstate-react.development.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@xstate/react/dist/xstate-react.development.esm.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createActorContext: function() { return /* binding */ createActorContext; },\n/* harmony export */   shallowEqual: function() { return /* binding */ shallowEqual; },\n/* harmony export */   useActor: function() { return /* binding */ useActor; },\n/* harmony export */   useActorRef: function() { return /* binding */ useActorRef; },\n/* harmony export */   useMachine: function() { return /* binding */ useMachine; },\n/* harmony export */   useSelector: function() { return /* binding */ useSelector; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var use_isomorphic_layout_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! use-isomorphic-layout-effect */ \"(app-pages-browser)/./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-5ea71f04.development.esm.js\");\n/* harmony import */ var use_sync_external_store_shim_with_selector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-sync-external-store/shim/with-selector */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js\");\n/* harmony import */ var use_sync_external_store_shim__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-sync-external-store/shim */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n\n\n\n\n\n\n\nconst forEachActor = (actorRef, callback) => {\n  callback(actorRef);\n  const children = actorRef.getSnapshot().children;\n  if (children) {\n    Object.values(children).forEach(child => {\n      forEachActor(child, callback);\n    });\n  }\n};\nfunction stopRootWithRehydration(actorRef) {\n  // persist snapshot here in a custom way allows us to persist inline actors and to preserve actor references\n  // we do it to avoid setState in useEffect when the effect gets \"reconnected\"\n  // this currently only happens in Strict Effects but it simulates the Offscreen aka Activity API\n  // it also just allows us to end up with a somewhat more predictable behavior for the users\n  const persistedSnapshots = [];\n  forEachActor(actorRef, ref => {\n    persistedSnapshots.push([ref, ref.getSnapshot()]);\n    // muting observers allow us to avoid `useSelector` from being notified about the stopped snapshot\n    // React reconnects its subscribers (from the useSyncExternalStore) on its own\n    // and userland subscibers should basically always do the same anyway\n    // as each subscription should have its own cleanup logic and that should be called each such reconnect\n    ref.observers = new Set();\n  });\n  const systemSnapshot = actorRef.system.getSnapshot?.();\n  actorRef.stop();\n  actorRef.system._snapshot = systemSnapshot;\n  persistedSnapshots.forEach(([ref, snapshot]) => {\n    ref._processingStatus = 0;\n    ref._snapshot = snapshot;\n  });\n}\n\nfunction useIdleActorRef(logic, ...[options]) {\n  let [[currentConfig, actorRef], setCurrent] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {\n    const actorRef = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.A)(logic, options);\n    return [logic.config, actorRef];\n  });\n  if (logic.config !== currentConfig) {\n    const newActorRef = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.A)(logic, {\n      ...options,\n      snapshot: actorRef.getPersistedSnapshot({\n        __unsafeAllowInlineActors: true\n      })\n    });\n    setCurrent([logic.config, newActorRef]);\n    actorRef = newActorRef;\n  }\n\n  // TODO: consider using `useAsapEffect` that would do this in `useInsertionEffect` is that's available\n  (0,use_isomorphic_layout_effect__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(() => {\n    actorRef.logic.implementations = logic.implementations;\n  });\n  return actorRef;\n}\nfunction useActorRef(machine, ...[options, observerOrListener]) {\n  const actorRef = useIdleActorRef(machine, options);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!observerOrListener) {\n      return;\n    }\n    let sub = actorRef.subscribe((0,xstate__WEBPACK_IMPORTED_MODULE_4__.L)(observerOrListener));\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [observerOrListener]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return actorRef;\n}\n\nfunction defaultCompare(a, b) {\n  return a === b;\n}\nfunction useSelector(actor, selector, compare = defaultCompare) {\n  const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(handleStoreChange => {\n    if (!actor) {\n      return () => {};\n    }\n    const {\n      unsubscribe\n    } = actor.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actor]);\n  const boundGetSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => actor?.getSnapshot(), [actor]);\n  const selectedSnapshot = (0,use_sync_external_store_shim_with_selector__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStoreWithSelector)(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}\n\nfunction createActorContext(actorLogic, actorOptions) {\n  const ReactContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({\n    children,\n    logic: providedLogic = actorLogic,\n    machine,\n    options: providedOptions\n  }) {\n    if (machine) {\n      throw new Error(`The \"machine\" prop has been deprecated. Please use \"logic\" instead.`);\n    }\n    const actor = useActorRef(providedLogic, {\n      ...actorOptions,\n      ...providedOptions\n    });\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(OriginalProvider, {\n      value: actor,\n      children\n    });\n  }\n\n  // TODO: add properties to actor ref to make more descriptive\n  Provider.displayName = `ActorProvider`;\n  function useContext() {\n    const actor = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ReactContext);\n    if (!actor) {\n      throw new Error(`You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}> component.`);\n    }\n    return actor;\n  }\n  function useSelector$1(selector, compare) {\n    const actor = useContext();\n    return useSelector(actor, selector, compare);\n  }\n  return {\n    Provider: Provider,\n    useActorRef: useContext,\n    useSelector: useSelector$1\n  };\n}\n\n// From https://github.com/reduxjs/react-redux/blob/720f0ba79236cdc3e1115f4ef9a7760a21784b48/src/utils/shallowEqual.ts\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction useActor(logic, ...[options]) {\n  if (!!logic && 'send' in logic && typeof logic.send === 'function') {\n    throw new Error(`useActor() expects actor logic (e.g. a machine), but received an ActorRef. Use the useSelector(actorRef, ...) hook instead to read the ActorRef's snapshot.`);\n  }\n  const actorRef = useIdleActorRef(logic, options);\n  const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    return actorRef.getSnapshot();\n  }, [actorRef]);\n  const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(handleStoreChange => {\n    const {\n      unsubscribe\n    } = actorRef.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actorRef]);\n  const actorSnapshot = (0,use_sync_external_store_shim__WEBPACK_IMPORTED_MODULE_3__.useSyncExternalStore)(subscribe, getSnapshot, getSnapshot);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return [actorSnapshot, actorRef.send, actorRef];\n}\n\n/** @alias useActor */\nfunction useMachine(machine, ...[options]) {\n  return useActor(machine, options);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@xstate/react/dist/xstate-react.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/compat/router.js":
/*!********************************************!*\
  !*** ./node_modules/next/compat/router.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ../dist/client/compat/router */ \"(app-pages-browser)/./node_modules/next/dist/client/compat/router.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2NvbXBhdC9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0pBQXdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2NvbXBhdC9yb3V0ZXIuanM/MmIwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Rpc3QvY2xpZW50L2NvbXBhdC9yb3V0ZXInKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/compat/router.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/image.js":
/*!*********************************************!*\
  !*** ./node_modules/next/dist/api/image.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport default from dynamic */ _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/lib/image-external */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-external.js\");\n/* harmony import */ var _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n//# sourceMappingURL=image.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL2ltYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1RDtBQUNWOztBQUU3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9pbWFnZS5qcz8wMmJhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tIFwiLi4vc2hhcmVkL2xpYi9pbWFnZS1leHRlcm5hbFwiO1xuZXhwb3J0ICogZnJvbSBcIi4uL3NoYXJlZC9saWIvaW1hZ2UtZXh0ZXJuYWxcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/image.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9uYXZpZ2F0aW9uLmpzPzI2YTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb25cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/NjY4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/client-only/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {



/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/picomatch/index.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/picomatch/index.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n(()=>{\"use strict\";var t={170:(t,e,u)=>{const n=u(510);const isWindows=()=>{if(typeof navigator!==\"undefined\"&&navigator.platform){const t=navigator.platform.toLowerCase();return t===\"win32\"||t===\"windows\"}if(typeof process!==\"undefined\"&&process.platform){return process.platform===\"win32\"}return false};function picomatch(t,e,u=false){if(e&&(e.windows===null||e.windows===undefined)){e={...e,windows:isWindows()}}return n(t,e,u)}Object.assign(picomatch,n);t.exports=picomatch},154:t=>{const e=\"\\\\\\\\/\";const u=`[^${e}]`;const n=\"\\\\.\";const o=\"\\\\+\";const s=\"\\\\?\";const r=\"\\\\/\";const a=\"(?=.)\";const i=\"[^/]\";const c=`(?:${r}|$)`;const p=`(?:^|${r})`;const l=`${n}{1,2}${c}`;const f=`(?!${n})`;const A=`(?!${p}${l})`;const _=`(?!${n}{0,1}${c})`;const R=`(?!${l})`;const E=`[^.${r}]`;const h=`${i}*?`;const g=\"/\";const b={DOT_LITERAL:n,PLUS_LITERAL:o,QMARK_LITERAL:s,SLASH_LITERAL:r,ONE_CHAR:a,QMARK:i,END_ANCHOR:c,DOTS_SLASH:l,NO_DOT:f,NO_DOTS:A,NO_DOT_SLASH:_,NO_DOTS_SLASH:R,QMARK_NO_DOT:E,STAR:h,START_ANCHOR:p,SEP:g};const C={...b,SLASH_LITERAL:`[${e}]`,QMARK:u,STAR:`${u}*?`,DOTS_SLASH:`${n}{1,2}(?:[${e}]|$)`,NO_DOT:`(?!${n})`,NO_DOTS:`(?!(?:^|[${e}])${n}{1,2}(?:[${e}]|$))`,NO_DOT_SLASH:`(?!${n}{0,1}(?:[${e}]|$))`,NO_DOTS_SLASH:`(?!${n}{1,2}(?:[${e}]|$))`,QMARK_NO_DOT:`[^.${e}]`,START_ANCHOR:`(?:^|[${e}])`,END_ANCHOR:`(?:[${e}]|$)`,SEP:\"\\\\\"};const y={alnum:\"a-zA-Z0-9\",alpha:\"a-zA-Z\",ascii:\"\\\\x00-\\\\x7F\",blank:\" \\\\t\",cntrl:\"\\\\x00-\\\\x1F\\\\x7F\",digit:\"0-9\",graph:\"\\\\x21-\\\\x7E\",lower:\"a-z\",print:\"\\\\x20-\\\\x7E \",punct:\"\\\\-!\\\"#$%&'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~\",space:\" \\\\t\\\\r\\\\n\\\\v\\\\f\",upper:\"A-Z\",word:\"A-Za-z0-9_\",xdigit:\"A-Fa-f0-9\"};t.exports={MAX_LENGTH:1024*64,POSIX_REGEX_SOURCE:y,REGEX_BACKSLASH:/\\\\(?![*+?^${}(|)[\\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\\].,$*+?^{}()|\\\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\\\?)((\\W)(\\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,REPLACEMENTS:{\"***\":\"*\",\"**/**\":\"**\",\"**/**/**\":\"**\"},CHAR_0:48,CHAR_9:57,CHAR_UPPERCASE_A:65,CHAR_LOWERCASE_A:97,CHAR_UPPERCASE_Z:90,CHAR_LOWERCASE_Z:122,CHAR_LEFT_PARENTHESES:40,CHAR_RIGHT_PARENTHESES:41,CHAR_ASTERISK:42,CHAR_AMPERSAND:38,CHAR_AT:64,CHAR_BACKWARD_SLASH:92,CHAR_CARRIAGE_RETURN:13,CHAR_CIRCUMFLEX_ACCENT:94,CHAR_COLON:58,CHAR_COMMA:44,CHAR_DOT:46,CHAR_DOUBLE_QUOTE:34,CHAR_EQUAL:61,CHAR_EXCLAMATION_MARK:33,CHAR_FORM_FEED:12,CHAR_FORWARD_SLASH:47,CHAR_GRAVE_ACCENT:96,CHAR_HASH:35,CHAR_HYPHEN_MINUS:45,CHAR_LEFT_ANGLE_BRACKET:60,CHAR_LEFT_CURLY_BRACE:123,CHAR_LEFT_SQUARE_BRACKET:91,CHAR_LINE_FEED:10,CHAR_NO_BREAK_SPACE:160,CHAR_PERCENT:37,CHAR_PLUS:43,CHAR_QUESTION_MARK:63,CHAR_RIGHT_ANGLE_BRACKET:62,CHAR_RIGHT_CURLY_BRACE:125,CHAR_RIGHT_SQUARE_BRACKET:93,CHAR_SEMICOLON:59,CHAR_SINGLE_QUOTE:39,CHAR_SPACE:32,CHAR_TAB:9,CHAR_UNDERSCORE:95,CHAR_VERTICAL_LINE:124,CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,extglobChars(t){return{\"!\":{type:\"negate\",open:\"(?:(?!(?:\",close:`))${t.STAR})`},\"?\":{type:\"qmark\",open:\"(?:\",close:\")?\"},\"+\":{type:\"plus\",open:\"(?:\",close:\")+\"},\"*\":{type:\"star\",open:\"(?:\",close:\")*\"},\"@\":{type:\"at\",open:\"(?:\",close:\")\"}}},globChars(t){return t===true?C:b}}},697:(t,e,u)=>{const n=u(154);const o=u(96);const{MAX_LENGTH:s,POSIX_REGEX_SOURCE:r,REGEX_NON_SPECIAL_CHARS:a,REGEX_SPECIAL_CHARS_BACKREF:i,REPLACEMENTS:c}=n;const expandRange=(t,e)=>{if(typeof e.expandRange===\"function\"){return e.expandRange(...t,e)}t.sort();const u=`[${t.join(\"-\")}]`;try{new RegExp(u)}catch(e){return t.map((t=>o.escapeRegex(t))).join(\"..\")}return u};const syntaxError=(t,e)=>`Missing ${t}: \"${e}\" - use \"\\\\\\\\${e}\" to match literal characters`;const parse=(t,e)=>{if(typeof t!==\"string\"){throw new TypeError(\"Expected a string\")}t=c[t]||t;const u={...e};const p=typeof u.maxLength===\"number\"?Math.min(s,u.maxLength):s;let l=t.length;if(l>p){throw new SyntaxError(`Input length: ${l}, exceeds maximum allowed length: ${p}`)}const f={type:\"bos\",value:\"\",output:u.prepend||\"\"};const A=[f];const _=u.capture?\"\":\"?:\";const R=n.globChars(u.windows);const E=n.extglobChars(R);const{DOT_LITERAL:h,PLUS_LITERAL:g,SLASH_LITERAL:b,ONE_CHAR:C,DOTS_SLASH:y,NO_DOT:$,NO_DOT_SLASH:x,NO_DOTS_SLASH:S,QMARK:H,QMARK_NO_DOT:v,STAR:d,START_ANCHOR:L}=R;const globstar=t=>`(${_}(?:(?!${L}${t.dot?y:h}).)*?)`;const T=u.dot?\"\":$;const O=u.dot?H:v;let k=u.bash===true?globstar(u):d;if(u.capture){k=`(${k})`}if(typeof u.noext===\"boolean\"){u.noextglob=u.noext}const m={input:t,index:-1,start:0,dot:u.dot===true,consumed:\"\",output:\"\",prefix:\"\",backtrack:false,negated:false,brackets:0,braces:0,parens:0,quotes:0,globstar:false,tokens:A};t=o.removePrefix(t,m);l=t.length;const w=[];const N=[];const I=[];let B=f;let G;const eos=()=>m.index===l-1;const D=m.peek=(e=1)=>t[m.index+e];const M=m.advance=()=>t[++m.index]||\"\";const remaining=()=>t.slice(m.index+1);const consume=(t=\"\",e=0)=>{m.consumed+=t;m.index+=e};const append=t=>{m.output+=t.output!=null?t.output:t.value;consume(t.value)};const negate=()=>{let t=1;while(D()===\"!\"&&(D(2)!==\"(\"||D(3)===\"?\")){M();m.start++;t++}if(t%2===0){return false}m.negated=true;m.start++;return true};const increment=t=>{m[t]++;I.push(t)};const decrement=t=>{m[t]--;I.pop()};const push=t=>{if(B.type===\"globstar\"){const e=m.braces>0&&(t.type===\"comma\"||t.type===\"brace\");const u=t.extglob===true||w.length&&(t.type===\"pipe\"||t.type===\"paren\");if(t.type!==\"slash\"&&t.type!==\"paren\"&&!e&&!u){m.output=m.output.slice(0,-B.output.length);B.type=\"star\";B.value=\"*\";B.output=k;m.output+=B.output}}if(w.length&&t.type!==\"paren\"){w[w.length-1].inner+=t.value}if(t.value||t.output)append(t);if(B&&B.type===\"text\"&&t.type===\"text\"){B.output=(B.output||B.value)+t.value;B.value+=t.value;return}t.prev=B;A.push(t);B=t};const extglobOpen=(t,e)=>{const n={...E[e],conditions:1,inner:\"\"};n.prev=B;n.parens=m.parens;n.output=m.output;const o=(u.capture?\"(\":\"\")+n.open;increment(\"parens\");push({type:t,value:e,output:m.output?\"\":C});push({type:\"paren\",extglob:true,value:M(),output:o});w.push(n)};const extglobClose=t=>{let n=t.close+(u.capture?\")\":\"\");let o;if(t.type===\"negate\"){let s=k;if(t.inner&&t.inner.length>1&&t.inner.includes(\"/\")){s=globstar(u)}if(s!==k||eos()||/^\\)+$/.test(remaining())){n=t.close=`)$))${s}`}if(t.inner.includes(\"*\")&&(o=remaining())&&/^\\.[^\\\\/.]+$/.test(o)){const u=parse(o,{...e,fastpaths:false}).output;n=t.close=`)${u})${s})`}if(t.prev.type===\"bos\"){m.negatedExtglob=true}}push({type:\"paren\",extglob:true,value:G,output:n});decrement(\"parens\")};if(u.fastpaths!==false&&!/(^[*!]|[/()[\\]{}\"])/.test(t)){let n=false;let s=t.replace(i,((t,e,u,o,s,r)=>{if(o===\"\\\\\"){n=true;return t}if(o===\"?\"){if(e){return e+o+(s?H.repeat(s.length):\"\")}if(r===0){return O+(s?H.repeat(s.length):\"\")}return H.repeat(u.length)}if(o===\".\"){return h.repeat(u.length)}if(o===\"*\"){if(e){return e+o+(s?k:\"\")}return k}return e?t:`\\\\${t}`}));if(n===true){if(u.unescape===true){s=s.replace(/\\\\/g,\"\")}else{s=s.replace(/\\\\+/g,(t=>t.length%2===0?\"\\\\\\\\\":t?\"\\\\\":\"\"))}}if(s===t&&u.contains===true){m.output=t;return m}m.output=o.wrapOutput(s,m,e);return m}while(!eos()){G=M();if(G===\"\\0\"){continue}if(G===\"\\\\\"){const t=D();if(t===\"/\"&&u.bash!==true){continue}if(t===\".\"||t===\";\"){continue}if(!t){G+=\"\\\\\";push({type:\"text\",value:G});continue}const e=/^\\\\+/.exec(remaining());let n=0;if(e&&e[0].length>2){n=e[0].length;m.index+=n;if(n%2!==0){G+=\"\\\\\"}}if(u.unescape===true){G=M()}else{G+=M()}if(m.brackets===0){push({type:\"text\",value:G});continue}}if(m.brackets>0&&(G!==\"]\"||B.value===\"[\"||B.value===\"[^\")){if(u.posix!==false&&G===\":\"){const t=B.value.slice(1);if(t.includes(\"[\")){B.posix=true;if(t.includes(\":\")){const t=B.value.lastIndexOf(\"[\");const e=B.value.slice(0,t);const u=B.value.slice(t+2);const n=r[u];if(n){B.value=e+n;m.backtrack=true;M();if(!f.output&&A.indexOf(B)===1){f.output=C}continue}}}}if(G===\"[\"&&D()!==\":\"||G===\"-\"&&D()===\"]\"){G=`\\\\${G}`}if(G===\"]\"&&(B.value===\"[\"||B.value===\"[^\")){G=`\\\\${G}`}if(u.posix===true&&G===\"!\"&&B.value===\"[\"){G=\"^\"}B.value+=G;append({value:G});continue}if(m.quotes===1&&G!=='\"'){G=o.escapeRegex(G);B.value+=G;append({value:G});continue}if(G==='\"'){m.quotes=m.quotes===1?0:1;if(u.keepQuotes===true){push({type:\"text\",value:G})}continue}if(G===\"(\"){increment(\"parens\");push({type:\"paren\",value:G});continue}if(G===\")\"){if(m.parens===0&&u.strictBrackets===true){throw new SyntaxError(syntaxError(\"opening\",\"(\"))}const t=w[w.length-1];if(t&&m.parens===t.parens+1){extglobClose(w.pop());continue}push({type:\"paren\",value:G,output:m.parens?\")\":\"\\\\)\"});decrement(\"parens\");continue}if(G===\"[\"){if(u.nobracket===true||!remaining().includes(\"]\")){if(u.nobracket!==true&&u.strictBrackets===true){throw new SyntaxError(syntaxError(\"closing\",\"]\"))}G=`\\\\${G}`}else{increment(\"brackets\")}push({type:\"bracket\",value:G});continue}if(G===\"]\"){if(u.nobracket===true||B&&B.type===\"bracket\"&&B.value.length===1){push({type:\"text\",value:G,output:`\\\\${G}`});continue}if(m.brackets===0){if(u.strictBrackets===true){throw new SyntaxError(syntaxError(\"opening\",\"[\"))}push({type:\"text\",value:G,output:`\\\\${G}`});continue}decrement(\"brackets\");const t=B.value.slice(1);if(B.posix!==true&&t[0]===\"^\"&&!t.includes(\"/\")){G=`/${G}`}B.value+=G;append({value:G});if(u.literalBrackets===false||o.hasRegexChars(t)){continue}const e=o.escapeRegex(B.value);m.output=m.output.slice(0,-B.value.length);if(u.literalBrackets===true){m.output+=e;B.value=e;continue}B.value=`(${_}${e}|${B.value})`;m.output+=B.value;continue}if(G===\"{\"&&u.nobrace!==true){increment(\"braces\");const t={type:\"brace\",value:G,output:\"(\",outputIndex:m.output.length,tokensIndex:m.tokens.length};N.push(t);push(t);continue}if(G===\"}\"){const t=N[N.length-1];if(u.nobrace===true||!t){push({type:\"text\",value:G,output:G});continue}let e=\")\";if(t.dots===true){const t=A.slice();const n=[];for(let e=t.length-1;e>=0;e--){A.pop();if(t[e].type===\"brace\"){break}if(t[e].type!==\"dots\"){n.unshift(t[e].value)}}e=expandRange(n,u);m.backtrack=true}if(t.comma!==true&&t.dots!==true){const u=m.output.slice(0,t.outputIndex);const n=m.tokens.slice(t.tokensIndex);t.value=t.output=\"\\\\{\";G=e=\"\\\\}\";m.output=u;for(const t of n){m.output+=t.output||t.value}}push({type:\"brace\",value:G,output:e});decrement(\"braces\");N.pop();continue}if(G===\"|\"){if(w.length>0){w[w.length-1].conditions++}push({type:\"text\",value:G});continue}if(G===\",\"){let t=G;const e=N[N.length-1];if(e&&I[I.length-1]===\"braces\"){e.comma=true;t=\"|\"}push({type:\"comma\",value:G,output:t});continue}if(G===\"/\"){if(B.type===\"dot\"&&m.index===m.start+1){m.start=m.index+1;m.consumed=\"\";m.output=\"\";A.pop();B=f;continue}push({type:\"slash\",value:G,output:b});continue}if(G===\".\"){if(m.braces>0&&B.type===\"dot\"){if(B.value===\".\")B.output=h;const t=N[N.length-1];B.type=\"dots\";B.output+=G;B.value+=G;t.dots=true;continue}if(m.braces+m.parens===0&&B.type!==\"bos\"&&B.type!==\"slash\"){push({type:\"text\",value:G,output:h});continue}push({type:\"dot\",value:G,output:h});continue}if(G===\"?\"){const t=B&&B.value===\"(\";if(!t&&u.noextglob!==true&&D()===\"(\"&&D(2)!==\"?\"){extglobOpen(\"qmark\",G);continue}if(B&&B.type===\"paren\"){const t=D();let e=G;if(B.value===\"(\"&&!/[!=<:]/.test(t)||t===\"<\"&&!/<([!=]|\\w+>)/.test(remaining())){e=`\\\\${G}`}push({type:\"text\",value:G,output:e});continue}if(u.dot!==true&&(B.type===\"slash\"||B.type===\"bos\")){push({type:\"qmark\",value:G,output:v});continue}push({type:\"qmark\",value:G,output:H});continue}if(G===\"!\"){if(u.noextglob!==true&&D()===\"(\"){if(D(2)!==\"?\"||!/[!=<:]/.test(D(3))){extglobOpen(\"negate\",G);continue}}if(u.nonegate!==true&&m.index===0){negate();continue}}if(G===\"+\"){if(u.noextglob!==true&&D()===\"(\"&&D(2)!==\"?\"){extglobOpen(\"plus\",G);continue}if(B&&B.value===\"(\"||u.regex===false){push({type:\"plus\",value:G,output:g});continue}if(B&&(B.type===\"bracket\"||B.type===\"paren\"||B.type===\"brace\")||m.parens>0){push({type:\"plus\",value:G});continue}push({type:\"plus\",value:g});continue}if(G===\"@\"){if(u.noextglob!==true&&D()===\"(\"&&D(2)!==\"?\"){push({type:\"at\",extglob:true,value:G,output:\"\"});continue}push({type:\"text\",value:G});continue}if(G!==\"*\"){if(G===\"$\"||G===\"^\"){G=`\\\\${G}`}const t=a.exec(remaining());if(t){G+=t[0];m.index+=t[0].length}push({type:\"text\",value:G});continue}if(B&&(B.type===\"globstar\"||B.star===true)){B.type=\"star\";B.star=true;B.value+=G;B.output=k;m.backtrack=true;m.globstar=true;consume(G);continue}let e=remaining();if(u.noextglob!==true&&/^\\([^?]/.test(e)){extglobOpen(\"star\",G);continue}if(B.type===\"star\"){if(u.noglobstar===true){consume(G);continue}const n=B.prev;const o=n.prev;const s=n.type===\"slash\"||n.type===\"bos\";const r=o&&(o.type===\"star\"||o.type===\"globstar\");if(u.bash===true&&(!s||e[0]&&e[0]!==\"/\")){push({type:\"star\",value:G,output:\"\"});continue}const a=m.braces>0&&(n.type===\"comma\"||n.type===\"brace\");const i=w.length&&(n.type===\"pipe\"||n.type===\"paren\");if(!s&&n.type!==\"paren\"&&!a&&!i){push({type:\"star\",value:G,output:\"\"});continue}while(e.slice(0,3)===\"/**\"){const u=t[m.index+4];if(u&&u!==\"/\"){break}e=e.slice(3);consume(\"/**\",3)}if(n.type===\"bos\"&&eos()){B.type=\"globstar\";B.value+=G;B.output=globstar(u);m.output=B.output;m.globstar=true;consume(G);continue}if(n.type===\"slash\"&&n.prev.type!==\"bos\"&&!r&&eos()){m.output=m.output.slice(0,-(n.output+B.output).length);n.output=`(?:${n.output}`;B.type=\"globstar\";B.output=globstar(u)+(u.strictSlashes?\")\":\"|$)\");B.value+=G;m.globstar=true;m.output+=n.output+B.output;consume(G);continue}if(n.type===\"slash\"&&n.prev.type!==\"bos\"&&e[0]===\"/\"){const t=e[1]!==void 0?\"|$\":\"\";m.output=m.output.slice(0,-(n.output+B.output).length);n.output=`(?:${n.output}`;B.type=\"globstar\";B.output=`${globstar(u)}${b}|${b}${t})`;B.value+=G;m.output+=n.output+B.output;m.globstar=true;consume(G+M());push({type:\"slash\",value:\"/\",output:\"\"});continue}if(n.type===\"bos\"&&e[0]===\"/\"){B.type=\"globstar\";B.value+=G;B.output=`(?:^|${b}|${globstar(u)}${b})`;m.output=B.output;m.globstar=true;consume(G+M());push({type:\"slash\",value:\"/\",output:\"\"});continue}m.output=m.output.slice(0,-B.output.length);B.type=\"globstar\";B.output=globstar(u);B.value+=G;m.output+=B.output;m.globstar=true;consume(G);continue}const n={type:\"star\",value:G,output:k};if(u.bash===true){n.output=\".*?\";if(B.type===\"bos\"||B.type===\"slash\"){n.output=T+n.output}push(n);continue}if(B&&(B.type===\"bracket\"||B.type===\"paren\")&&u.regex===true){n.output=G;push(n);continue}if(m.index===m.start||B.type===\"slash\"||B.type===\"dot\"){if(B.type===\"dot\"){m.output+=x;B.output+=x}else if(u.dot===true){m.output+=S;B.output+=S}else{m.output+=T;B.output+=T}if(D()!==\"*\"){m.output+=C;B.output+=C}}push(n)}while(m.brackets>0){if(u.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\"]\"));m.output=o.escapeLast(m.output,\"[\");decrement(\"brackets\")}while(m.parens>0){if(u.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\")\"));m.output=o.escapeLast(m.output,\"(\");decrement(\"parens\")}while(m.braces>0){if(u.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\"}\"));m.output=o.escapeLast(m.output,\"{\");decrement(\"braces\")}if(u.strictSlashes!==true&&(B.type===\"star\"||B.type===\"bracket\")){push({type:\"maybe_slash\",value:\"\",output:`${b}?`})}if(m.backtrack===true){m.output=\"\";for(const t of m.tokens){m.output+=t.output!=null?t.output:t.value;if(t.suffix){m.output+=t.suffix}}}return m};parse.fastpaths=(t,e)=>{const u={...e};const r=typeof u.maxLength===\"number\"?Math.min(s,u.maxLength):s;const a=t.length;if(a>r){throw new SyntaxError(`Input length: ${a}, exceeds maximum allowed length: ${r}`)}t=c[t]||t;const{DOT_LITERAL:i,SLASH_LITERAL:p,ONE_CHAR:l,DOTS_SLASH:f,NO_DOT:A,NO_DOTS:_,NO_DOTS_SLASH:R,STAR:E,START_ANCHOR:h}=n.globChars(u.windows);const g=u.dot?_:A;const b=u.dot?R:A;const C=u.capture?\"\":\"?:\";const y={negated:false,prefix:\"\"};let $=u.bash===true?\".*?\":E;if(u.capture){$=`(${$})`}const globstar=t=>{if(t.noglobstar===true)return $;return`(${C}(?:(?!${h}${t.dot?f:i}).)*?)`};const create=t=>{switch(t){case\"*\":return`${g}${l}${$}`;case\".*\":return`${i}${l}${$}`;case\"*.*\":return`${g}${$}${i}${l}${$}`;case\"*/*\":return`${g}${$}${p}${l}${b}${$}`;case\"**\":return g+globstar(u);case\"**/*\":return`(?:${g}${globstar(u)}${p})?${b}${l}${$}`;case\"**/*.*\":return`(?:${g}${globstar(u)}${p})?${b}${$}${i}${l}${$}`;case\"**/.*\":return`(?:${g}${globstar(u)}${p})?${i}${l}${$}`;default:{const e=/^(.*?)\\.(\\w+)$/.exec(t);if(!e)return;const u=create(e[1]);if(!u)return;return u+i+e[2]}}};const x=o.removePrefix(t,y);let S=create(x);if(S&&u.strictSlashes!==true){S+=`${p}?`}return S};t.exports=parse},510:(t,e,u)=>{const n=u(716);const o=u(697);const s=u(96);const r=u(154);const isObject=t=>t&&typeof t===\"object\"&&!Array.isArray(t);const picomatch=(t,e,u=false)=>{if(Array.isArray(t)){const n=t.map((t=>picomatch(t,e,u)));const arrayMatcher=t=>{for(const e of n){const u=e(t);if(u)return u}return false};return arrayMatcher}const n=isObject(t)&&t.tokens&&t.input;if(t===\"\"||typeof t!==\"string\"&&!n){throw new TypeError(\"Expected pattern to be a non-empty string\")}const o=e||{};const s=o.windows;const r=n?picomatch.compileRe(t,e):picomatch.makeRe(t,e,false,true);const a=r.state;delete r.state;let isIgnored=()=>false;if(o.ignore){const t={...e,ignore:null,onMatch:null,onResult:null};isIgnored=picomatch(o.ignore,t,u)}const matcher=(u,n=false)=>{const{isMatch:i,match:c,output:p}=picomatch.test(u,r,e,{glob:t,posix:s});const l={glob:t,state:a,regex:r,posix:s,input:u,output:p,match:c,isMatch:i};if(typeof o.onResult===\"function\"){o.onResult(l)}if(i===false){l.isMatch=false;return n?l:false}if(isIgnored(u)){if(typeof o.onIgnore===\"function\"){o.onIgnore(l)}l.isMatch=false;return n?l:false}if(typeof o.onMatch===\"function\"){o.onMatch(l)}return n?l:true};if(u){matcher.state=a}return matcher};picomatch.test=(t,e,u,{glob:n,posix:o}={})=>{if(typeof t!==\"string\"){throw new TypeError(\"Expected input to be a string\")}if(t===\"\"){return{isMatch:false,output:\"\"}}const r=u||{};const a=r.format||(o?s.toPosixSlashes:null);let i=t===n;let c=i&&a?a(t):t;if(i===false){c=a?a(t):t;i=c===n}if(i===false||r.capture===true){if(r.matchBase===true||r.basename===true){i=picomatch.matchBase(t,e,u,o)}else{i=e.exec(c)}}return{isMatch:Boolean(i),match:i,output:c}};picomatch.matchBase=(t,e,u)=>{const n=e instanceof RegExp?e:picomatch.makeRe(e,u);return n.test(s.basename(t))};picomatch.isMatch=(t,e,u)=>picomatch(e,u)(t);picomatch.parse=(t,e)=>{if(Array.isArray(t))return t.map((t=>picomatch.parse(t,e)));return o(t,{...e,fastpaths:false})};picomatch.scan=(t,e)=>n(t,e);picomatch.compileRe=(t,e,u=false,n=false)=>{if(u===true){return t.output}const o=e||{};const s=o.contains?\"\":\"^\";const r=o.contains?\"\":\"$\";let a=`${s}(?:${t.output})${r}`;if(t&&t.negated===true){a=`^(?!${a}).*$`}const i=picomatch.toRegex(a,e);if(n===true){i.state=t}return i};picomatch.makeRe=(t,e={},u=false,n=false)=>{if(!t||typeof t!==\"string\"){throw new TypeError(\"Expected a non-empty string\")}let s={negated:false,fastpaths:true};if(e.fastpaths!==false&&(t[0]===\".\"||t[0]===\"*\")){s.output=o.fastpaths(t,e)}if(!s.output){s=o(t,e)}return picomatch.compileRe(s,e,u,n)};picomatch.toRegex=(t,e)=>{try{const u=e||{};return new RegExp(t,u.flags||(u.nocase?\"i\":\"\"))}catch(t){if(e&&e.debug===true)throw t;return/$^/}};picomatch.constants=r;t.exports=picomatch},716:(t,e,u)=>{const n=u(96);const{CHAR_ASTERISK:o,CHAR_AT:s,CHAR_BACKWARD_SLASH:r,CHAR_COMMA:a,CHAR_DOT:i,CHAR_EXCLAMATION_MARK:c,CHAR_FORWARD_SLASH:p,CHAR_LEFT_CURLY_BRACE:l,CHAR_LEFT_PARENTHESES:f,CHAR_LEFT_SQUARE_BRACKET:A,CHAR_PLUS:_,CHAR_QUESTION_MARK:R,CHAR_RIGHT_CURLY_BRACE:E,CHAR_RIGHT_PARENTHESES:h,CHAR_RIGHT_SQUARE_BRACKET:g}=u(154);const isPathSeparator=t=>t===p||t===r;const depth=t=>{if(t.isPrefix!==true){t.depth=t.isGlobstar?Infinity:1}};const scan=(t,e)=>{const u=e||{};const b=t.length-1;const C=u.parts===true||u.scanToEnd===true;const y=[];const $=[];const x=[];let S=t;let H=-1;let v=0;let d=0;let L=false;let T=false;let O=false;let k=false;let m=false;let w=false;let N=false;let I=false;let B=false;let G=false;let D=0;let M;let P;let K={value:\"\",depth:0,isGlob:false};const eos=()=>H>=b;const peek=()=>S.charCodeAt(H+1);const advance=()=>{M=P;return S.charCodeAt(++H)};while(H<b){P=advance();let t;if(P===r){N=K.backslashes=true;P=advance();if(P===l){w=true}continue}if(w===true||P===l){D++;while(eos()!==true&&(P=advance())){if(P===r){N=K.backslashes=true;advance();continue}if(P===l){D++;continue}if(w!==true&&P===i&&(P=advance())===i){L=K.isBrace=true;O=K.isGlob=true;G=true;if(C===true){continue}break}if(w!==true&&P===a){L=K.isBrace=true;O=K.isGlob=true;G=true;if(C===true){continue}break}if(P===E){D--;if(D===0){w=false;L=K.isBrace=true;G=true;break}}}if(C===true){continue}break}if(P===p){y.push(H);$.push(K);K={value:\"\",depth:0,isGlob:false};if(G===true)continue;if(M===i&&H===v+1){v+=2;continue}d=H+1;continue}if(u.noext!==true){const t=P===_||P===s||P===o||P===R||P===c;if(t===true&&peek()===f){O=K.isGlob=true;k=K.isExtglob=true;G=true;if(P===c&&H===v){B=true}if(C===true){while(eos()!==true&&(P=advance())){if(P===r){N=K.backslashes=true;P=advance();continue}if(P===h){O=K.isGlob=true;G=true;break}}continue}break}}if(P===o){if(M===o)m=K.isGlobstar=true;O=K.isGlob=true;G=true;if(C===true){continue}break}if(P===R){O=K.isGlob=true;G=true;if(C===true){continue}break}if(P===A){while(eos()!==true&&(t=advance())){if(t===r){N=K.backslashes=true;advance();continue}if(t===g){T=K.isBracket=true;O=K.isGlob=true;G=true;break}}if(C===true){continue}break}if(u.nonegate!==true&&P===c&&H===v){I=K.negated=true;v++;continue}if(u.noparen!==true&&P===f){O=K.isGlob=true;if(C===true){while(eos()!==true&&(P=advance())){if(P===f){N=K.backslashes=true;P=advance();continue}if(P===h){G=true;break}}continue}break}if(O===true){G=true;if(C===true){continue}break}}if(u.noext===true){k=false;O=false}let U=S;let X=\"\";let F=\"\";if(v>0){X=S.slice(0,v);S=S.slice(v);d-=v}if(U&&O===true&&d>0){U=S.slice(0,d);F=S.slice(d)}else if(O===true){U=\"\";F=S}else{U=S}if(U&&U!==\"\"&&U!==\"/\"&&U!==S){if(isPathSeparator(U.charCodeAt(U.length-1))){U=U.slice(0,-1)}}if(u.unescape===true){if(F)F=n.removeBackslashes(F);if(U&&N===true){U=n.removeBackslashes(U)}}const Q={prefix:X,input:t,start:v,base:U,glob:F,isBrace:L,isBracket:T,isGlob:O,isExtglob:k,isGlobstar:m,negated:I,negatedExtglob:B};if(u.tokens===true){Q.maxDepth=0;if(!isPathSeparator(P)){$.push(K)}Q.tokens=$}if(u.parts===true||u.tokens===true){let e;for(let n=0;n<y.length;n++){const o=e?e+1:v;const s=y[n];const r=t.slice(o,s);if(u.tokens){if(n===0&&v!==0){$[n].isPrefix=true;$[n].value=X}else{$[n].value=r}depth($[n]);Q.maxDepth+=$[n].depth}if(n!==0||r!==\"\"){x.push(r)}e=s}if(e&&e+1<t.length){const n=t.slice(e+1);x.push(n);if(u.tokens){$[$.length-1].value=n;depth($[$.length-1]);Q.maxDepth+=$[$.length-1].depth}}Q.slashes=y;Q.parts=x}return Q};t.exports=scan},96:(t,e,u)=>{const{REGEX_BACKSLASH:n,REGEX_REMOVE_BACKSLASH:o,REGEX_SPECIAL_CHARS:s,REGEX_SPECIAL_CHARS_GLOBAL:r}=u(154);e.isObject=t=>t!==null&&typeof t===\"object\"&&!Array.isArray(t);e.hasRegexChars=t=>s.test(t);e.isRegexChar=t=>t.length===1&&e.hasRegexChars(t);e.escapeRegex=t=>t.replace(r,\"\\\\$1\");e.toPosixSlashes=t=>t.replace(n,\"/\");e.removeBackslashes=t=>t.replace(o,(t=>t===\"\\\\\"?\"\":t));e.escapeLast=(t,u,n)=>{const o=t.lastIndexOf(u,n);if(o===-1)return t;if(t[o-1]===\"\\\\\")return e.escapeLast(t,u,o-1);return`${t.slice(0,o)}\\\\${t.slice(o)}`};e.removePrefix=(t,e={})=>{let u=t;if(u.startsWith(\"./\")){u=u.slice(2);e.prefix=\"./\"}return u};e.wrapOutput=(t,e={},u={})=>{const n=u.contains?\"\":\"^\";const o=u.contains?\"\":\"$\";let s=`${n}(?:${t})${o}`;if(e.negated===true){s=`(?:^(?!${s}).*$)`}return s};e.basename=(t,{windows:e}={})=>{const u=t.split(e?/[\\\\/]/:\"/\");const n=u[u.length-1];if(n===\"\"){return u[u.length-2]}return n}}};var e={};function __nccwpck_require__(u){var n=e[u];if(n!==undefined){return n.exports}var o=e[u]={exports:{}};var s=true;try{t[u](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete e[u]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var u=__nccwpck_require__(170);module.exports=u})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/picomatch/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz9iYzk1Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar index =  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect ;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2UtaXNvbW9ycGhpYy1sYXlvdXQtZWZmZWN0L2Rpc3QvdXNlLWlzb21vcnBoaWMtbGF5b3V0LWVmZmVjdC5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBd0M7O0FBRXhDLGFBQWEsa0RBQWU7O0FBRTVCLCtEQUFlLEtBQUssRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdXNlLWlzb21vcnBoaWMtbGF5b3V0LWVmZmVjdC9kaXN0L3VzZS1pc29tb3JwaGljLWxheW91dC1lZmZlY3QuYnJvd3Nlci5lc20uanM/YzA3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VMYXlvdXRFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbnZhciBpbmRleCA9ICB1c2VMYXlvdXRFZmZlY3QgO1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar shim = __webpack_require__(/*! use-sync-external-store/shim */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js":
/*!************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/index.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim.development.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw0TUFBOEU7QUFDaEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vaW5kZXguanM/YWI0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js":
/*!********************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/with-selector.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim/with-selector.development.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL3dpdGgtc2VsZWN0b3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLHdPQUE0RjtBQUM5RiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yLmpzP2MwZjYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltL3dpdGgtc2VsZWN0b3IucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js":
/*!**************************************************************************!*\
  !*** ./node_modules/xstate/actors/dist/xstate-actors.development.esm.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEmptyActor: function() { return /* binding */ createEmptyActor; },\n/* harmony export */   fromCallback: function() { return /* binding */ fromCallback; },\n/* harmony export */   fromEventObservable: function() { return /* binding */ fromEventObservable; },\n/* harmony export */   fromObservable: function() { return /* binding */ fromObservable; },\n/* harmony export */   fromPromise: function() { return /* binding */ fromPromise; },\n/* harmony export */   fromTransition: function() { return /* binding */ fromTransition; }\n/* harmony export */ });\n/* harmony import */ var _dist_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dist/raise-5ea71f04.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-5ea71f04.development.esm.js\");\n/* harmony import */ var _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dev/dist/xstate-dev.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\");\n\n\n\n/**\n * Represents an actor created by `fromTransition`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromTransition,\n *   createActor,\n *   type AnyActorSystem\n * } from 'xstate';\n *\n * //* The actor's stored context.\n * type Context = {\n *   // The current count.\n *   count: number;\n *   // The amount to increase `count` by.\n *   step: number;\n * };\n * // The events the actor receives.\n * type Event = { type: 'increment' };\n * // The actor's input.\n * type Input = { step?: number };\n *\n * // Actor logic that increments `count` by `step` when it receives an event of\n * // type `increment`.\n * const logic = fromTransition<Context, Event, AnyActorSystem, Input>(\n *   (state, event, actorScope) => {\n *     actorScope.self;\n *     //         ^? TransitionActorRef<Context, Event>\n *\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + state.step\n *       };\n *     }\n *     return state;\n *   },\n *   ({ input, self }) => {\n *     self;\n *     // ^? TransitionActorRef<Context, Event>\n *\n *     return {\n *       count: 0,\n *       step: input.step ?? 1\n *     };\n *   }\n * );\n *\n * const actor = createActor(logic, { input: { step: 10 } });\n * //    ^? TransitionActorRef<Context, Event>\n * ```\n *\n * @see {@link fromTransition}\n */\n\n/**\n * Returns actor logic given a transition function and its initial state.\n *\n * A “transition function” is a function that takes the current `state` and\n * received `event` object as arguments, and returns the next state, similar to\n * a reducer.\n *\n * Actors created from transition logic (“transition actors”) can:\n *\n * - Receive events\n * - Emit snapshots of its state\n *\n * The transition function’s `state` is used as its transition actor’s\n * `context`.\n *\n * Note that the \"state\" for a transition function is provided by the initial\n * state argument, and is not the same as the State object of an actor or a\n * state within a machine configuration.\n *\n * @example\n *\n * ```ts\n * const transitionLogic = fromTransition(\n *   (state, event) => {\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + 1\n *       };\n *     }\n *     return state;\n *   },\n *   { count: 0 }\n * );\n *\n * const transitionActor = createActor(transitionLogic);\n * transitionActor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n * transitionActor.start();\n * // => {\n * //   status: 'active',\n * //   context: { count: 0 },\n * //   ...\n * // }\n *\n * transitionActor.send({ type: 'increment' });\n * // => {\n * //   status: 'active',\n * //   context: { count: 1 },\n * //   ...\n * // }\n * ```\n *\n * @param transition The transition function used to describe the transition\n *   logic. It should return the next state given the current state and event.\n *   It receives the following arguments:\n *\n *   - `state` - the current state.\n *   - `event` - the received event.\n *   - `actorScope` - the actor scope object, with properties like `self` and\n *       `system`.\n *\n * @param initialContext The initial state of the transition function, either an\n *   object representing the state, or a function which returns a state object.\n *   If a function, it will receive as its only argument an object with the\n *   following properties:\n *\n *   - `input` - the `input` provided to its parent transition actor.\n *   - `self` - a reference to its parent transition actor.\n *\n * @returns Actor logic\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromTransition(transition, initialContext) {\n  return {\n    config: transition,\n    transition: (snapshot, event, actorScope) => {\n      return {\n        ...snapshot,\n        context: transition(snapshot.context, event, actorScope)\n      };\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: typeof initialContext === 'function' ? initialContext({\n          input\n        }) : initialContext\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n}\n\nconst instanceStates = /* #__PURE__ */new WeakMap();\n\n/**\n * Represents an actor created by `fromCallback`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromCallback, createActor } from 'xstate';\n *\n * // The events the actor receives.\n * type Event = { type: 'someEvent' };\n * // The actor's input.\n * type Input = { name: string };\n *\n * // Actor logic that logs whenever it receives an event of type `someEvent`.\n * const logic = fromCallback<Event, Input>(({ self, input, receive }) => {\n *   self;\n *   // ^? CallbackActorRef<Event, Input>\n *\n *   receive((event) => {\n *     if (event.type === 'someEvent') {\n *       console.log(`${input.name}: received \"someEvent\" event`);\n *       // logs 'myActor: received \"someEvent\" event'\n *     }\n *   });\n * });\n *\n * const actor = createActor(logic, { input: { name: 'myActor' } });\n * //    ^? CallbackActorRef<Event, Input>\n * ```\n *\n * @see {@link fromCallback}\n */\n\n/**\n * An actor logic creator which returns callback logic as defined by a callback\n * function.\n *\n * @remarks\n * Useful for subscription-based or other free-form logic that can send events\n * back to the parent actor.\n *\n * Actors created from callback logic (“callback actors”) can:\n *\n * - Receive events via the `receive` function\n * - Send events to the parent actor via the `sendBack` function\n *\n * Callback actors are a bit different from other actors in that they:\n *\n * - Do not work with `onDone`\n * - Do not produce a snapshot using `.getSnapshot()`\n * - Do not emit values when used with `.subscribe()`\n * - Can not be stopped with `.stop()`\n *\n * @example\n *\n * ```typescript\n * const callbackLogic = fromCallback(({ sendBack, receive }) => {\n *   let lockStatus = 'unlocked';\n *\n *   const handler = (event) => {\n *     if (lockStatus === 'locked') {\n *       return;\n *     }\n *     sendBack(event);\n *   };\n *\n *   receive((event) => {\n *     if (event.type === 'lock') {\n *       lockStatus = 'locked';\n *     } else if (event.type === 'unlock') {\n *       lockStatus = 'unlocked';\n *     }\n *   });\n *\n *   document.body.addEventListener('click', handler);\n *\n *   return () => {\n *     document.body.removeEventListener('click', handler);\n *   };\n * });\n * ```\n *\n * @param callback - The callback function used to describe the callback logic\n *   The callback function is passed an object with the following properties:\n *\n *   - `receive` - A function that can send events back to the parent actor; the\n *       listener is then called whenever events are received by the callback\n *       actor\n *   - `sendBack` - A function that can send events back to the parent actor\n *   - `input` - Data that was provided to the callback actor\n *   - `self` - The parent actor of the callback actor\n *   - `system` - The actor system to which the callback actor belongs The callback\n *       function can (optionally) return a cleanup function, which is called\n *       when the actor is stopped.\n *\n * @returns Callback logic\n * @see {@link CallbackLogicFunction} for more information about the callback function and its object argument\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromCallback(callback) {\n  const logic = {\n    config: callback,\n    start: (state, actorScope) => {\n      const {\n        self,\n        system,\n        emit\n      } = actorScope;\n      const callbackState = {\n        receivers: undefined,\n        dispose: undefined\n      };\n      instanceStates.set(self, callbackState);\n      callbackState.dispose = callback({\n        input: state.input,\n        system,\n        self,\n        sendBack: event => {\n          if (self.getSnapshot().status === 'stopped') {\n            return;\n          }\n          if (self._parent) {\n            system._relay(self, self._parent, event);\n          }\n        },\n        receive: listener => {\n          callbackState.receivers ??= new Set();\n          callbackState.receivers.add(listener);\n        },\n        emit\n      });\n    },\n    transition: (state, event, actorScope) => {\n      const callbackState = instanceStates.get(actorScope.self);\n      if (event.type === _dist_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X) {\n        state = {\n          ...state,\n          status: 'stopped',\n          error: undefined\n        };\n        callbackState.dispose?.();\n        return state;\n      }\n      callbackState.receivers?.forEach(receiver => receiver(event));\n      return state;\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n  return logic;\n}\n\nconst XSTATE_OBSERVABLE_NEXT = 'xstate.observable.next';\nconst XSTATE_OBSERVABLE_ERROR = 'xstate.observable.error';\nconst XSTATE_OBSERVABLE_COMPLETE = 'xstate.observable.complete';\n\n/**\n * Represents an actor created by `fromObservable` or `fromEventObservable`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * // The type of the value observed by the actor's logic.\n * type Context = number;\n * // The actor's input.\n * type Input = { period?: number };\n *\n * // Actor logic that observes a number incremented every `input.period`\n * // milliseconds (default: 1_000).\n * const logic = fromObservable<Context, Input>(({ input, self }) => {\n *   self;\n *   // ^? ObservableActorRef<Event, Input>\n *\n *   return interval(input.period ?? 1_000);\n * });\n *\n * const actor = createActor(logic, { input: { period: 2_000 } });\n * //    ^? ObservableActorRef<Event, Input>\n * ```\n *\n * @see {@link fromObservable}\n * @see {@link fromEventObservable}\n */\n\n/**\n * Observable actor logic is described by an observable stream of values. Actors\n * created from observable logic (“observable actors”) can:\n *\n * - Emit snapshots of the observable’s emitted value\n *\n * The observable’s emitted value is used as its observable actor’s `context`.\n *\n * Sending events to observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * const logic = fromObservable((obj) => interval(1000));\n *\n * const actor = createActor(logic);\n *\n * actor.subscribe((snapshot) => {\n *   console.log(snapshot.context);\n * });\n *\n * actor.start();\n * // At every second:\n * // Logs 0\n * // Logs 1\n * // Logs 2\n * // ...\n * ```\n *\n * @param observableCreator A function that creates an observable. It receives\n *   one argument, an object with the following properties:\n *\n *   - `input` - Data that was provided to the observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the observable actor belongs\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n * @see {@link https://rxjs.dev} for documentation on RxJS Observable and observable creators.\n * @see {@link Subscribable} interface in XState, which is based on and compatible with RxJS Observable.\n */\nfunction fromObservable(observableCreator) {\n  // TODO: add event types\n  const logic = {\n    config: observableCreator,\n    transition: (snapshot, event) => {\n      if (snapshot.status !== 'active') {\n        return snapshot;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_NEXT:\n          {\n            const newSnapshot = {\n              ...snapshot,\n              context: event.data\n            };\n            return newSnapshot;\n          }\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...snapshot,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...snapshot,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case _dist_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X:\n          snapshot._subscription.unsubscribe();\n          return {\n            ...snapshot,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return snapshot;\n      }\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = observableCreator({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_NEXT,\n            data: value\n          });\n        },\n        error: err => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...state\n    }) => state,\n    restoreSnapshot: state => ({\n      ...state,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\n/**\n * Creates event observable logic that listens to an observable that delivers\n * event objects.\n *\n * Event observable actor logic is described by an observable stream of\n * {@link https://stately.ai/docs/transitions#event-objects | event objects}.\n * Actors created from event observable logic (“event observable actors”) can:\n *\n * - Implicitly send events to its parent actor\n * - Emit snapshots of its emitted event objects\n *\n * Sending events to event observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromEventObservable,\n *   Subscribable,\n *   EventObject,\n *   createMachine,\n *   createActor\n * } from 'xstate';\n * import { fromEvent } from 'rxjs';\n *\n * const mouseClickLogic = fromEventObservable(\n *   () => fromEvent(document.body, 'click') as Subscribable<EventObject>\n * );\n *\n * const canvasMachine = createMachine({\n *   invoke: {\n *     // Will send mouse `click` events to the canvas actor\n *     src: mouseClickLogic\n *   }\n * });\n *\n * const canvasActor = createActor(canvasMachine);\n * canvasActor.start();\n * ```\n *\n * @param lazyObservable A function that creates an observable that delivers\n *   event objects. It receives one argument, an object with the following\n *   properties:\n *\n *   - `input` - Data that was provided to the event observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the event observable actor belongs.\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n */\nfunction fromEventObservable(lazyObservable) {\n  // TODO: event types\n  const logic = {\n    config: lazyObservable,\n    transition: (state, event) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...state,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case _dist_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X:\n          state._subscription.unsubscribe();\n          return {\n            ...state,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return state;\n      }\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = lazyObservable({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value => {\n          if (self._parent) {\n            system._relay(self, self._parent, value);\n          }\n        },\n        error: err => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...snapshot\n    }) => snapshot,\n    restoreSnapshot: snapshot => ({\n      ...snapshot,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\nconst XSTATE_PROMISE_RESOLVE = 'xstate.promise.resolve';\nconst XSTATE_PROMISE_REJECT = 'xstate.promise.reject';\n\n/**\n * Represents an actor created by `fromPromise`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromPromise, createActor } from 'xstate';\n *\n * // The actor's resolved output\n * type Output = string;\n * // The actor's input.\n * type Input = { message: string };\n *\n * // Actor logic that fetches the url of an image of a cat saying `input.message`.\n * const logic = fromPromise<Output, Input>(async ({ input, self }) => {\n *   self;\n *   // ^? PromiseActorRef<Output, Input>\n *\n *   const data = await fetch(\n *     `https://cataas.com/cat/says/${input.message}`\n *   );\n *   const url = await data.json();\n *   return url;\n * });\n *\n * const actor = createActor(logic, { input: { message: 'hello world' } });\n * //    ^? PromiseActorRef<Output, Input>\n * ```\n *\n * @see {@link fromPromise}\n */\n\nconst controllerMap = new WeakMap();\n\n/**\n * An actor logic creator which returns promise logic as defined by an async\n * process that resolves or rejects after some time.\n *\n * Actors created from promise actor logic (“promise actors”) can:\n *\n * - Emit the resolved value of the promise\n * - Output the resolved value of the promise\n *\n * Sending events to promise actors will have no effect.\n *\n * @example\n *\n * ```ts\n * const promiseLogic = fromPromise(async () => {\n *   const result = await fetch('https://example.com/...').then((data) =>\n *     data.json()\n *   );\n *\n *   return result;\n * });\n *\n * const promiseActor = createActor(promiseLogic);\n * promiseActor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n * promiseActor.start();\n * // => {\n * //   output: undefined,\n * //   status: 'active'\n * //   ...\n * // }\n *\n * // After promise resolves\n * // => {\n * //   output: { ... },\n * //   status: 'done',\n * //   ...\n * // }\n * ```\n *\n * @param promiseCreator A function which returns a Promise, and accepts an\n *   object with the following properties:\n *\n *   - `input` - Data that was provided to the promise actor\n *   - `self` - The parent actor of the promise actor\n *   - `system` - The actor system to which the promise actor belongs\n *\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromPromise(promiseCreator) {\n  const logic = {\n    config: promiseCreator,\n    transition: (state, event, scope) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_PROMISE_RESOLVE:\n          {\n            const resolvedValue = event.data;\n            return {\n              ...state,\n              status: 'done',\n              output: resolvedValue,\n              input: undefined\n            };\n          }\n        case XSTATE_PROMISE_REJECT:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined\n          };\n        case _dist_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X:\n          {\n            controllerMap.get(scope.self)?.abort();\n            return {\n              ...state,\n              status: 'stopped',\n              input: undefined\n            };\n          }\n        default:\n          return state;\n      }\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      // TODO: determine how to allow customizing this so that promises\n      // can be restarted if necessary\n      if (state.status !== 'active') {\n        return;\n      }\n      const controller = new AbortController();\n      controllerMap.set(self, controller);\n      const resolvedPromise = Promise.resolve(promiseCreator({\n        input: state.input,\n        system,\n        self,\n        signal: controller.signal,\n        emit\n      }));\n      resolvedPromise.then(response => {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_RESOLVE,\n          data: response\n        });\n      }, errorData => {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_REJECT,\n          data: errorData\n        });\n      });\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n  return logic;\n}\n\nconst emptyLogic = fromTransition(_ => undefined, undefined);\nfunction createEmptyActor() {\n  return (0,_dist_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(emptyLogic);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/xstate/dev/dist/xstate-dev.development.esm.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   devToolsAdapter: function() { return /* binding */ devToolsAdapter; },\n/* harmony export */   getGlobal: function() { return /* binding */ getGlobal; },\n/* harmony export */   registerService: function() { return /* binding */ registerService; }\n/* harmony export */ });\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof __webpack_require__.g !== 'undefined') {\n    return __webpack_require__.g;\n  }\n  {\n    console.warn('XState could not find a global object in this environment. Please let the maintainers know and raise an issue here: https://github.com/statelyai/xstate/issues');\n  }\n}\nfunction getDevTools() {\n  const w = getGlobal();\n  if (!!w.__xstate__) {\n    return w.__xstate__;\n  }\n  return undefined;\n}\nfunction registerService(service) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n}\nconst devToolsAdapter = service => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy94c3RhdGUvZGV2L2Rpc3QveHN0YXRlLWRldi5kZXZlbG9wbWVudC5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscUJBQU07QUFDbkIsV0FBVyxxQkFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy94c3RhdGUvZGV2L2Rpc3QveHN0YXRlLWRldi5kZXZlbG9wbWVudC5lc20uanM/YzI4YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGcm9tIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL2dsb2JhbFRoaXNcbmZ1bmN0aW9uIGdldEdsb2JhbCgpIHtcbiAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBnbG9iYWxUaGlzO1xuICB9XG4gIGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gc2VsZjtcbiAgfVxuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gd2luZG93O1xuICB9XG4gIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBnbG9iYWw7XG4gIH1cbiAge1xuICAgIGNvbnNvbGUud2FybignWFN0YXRlIGNvdWxkIG5vdCBmaW5kIGEgZ2xvYmFsIG9iamVjdCBpbiB0aGlzIGVudmlyb25tZW50LiBQbGVhc2UgbGV0IHRoZSBtYWludGFpbmVycyBrbm93IGFuZCByYWlzZSBhbiBpc3N1ZSBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vc3RhdGVseWFpL3hzdGF0ZS9pc3N1ZXMnKTtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0RGV2VG9vbHMoKSB7XG4gIGNvbnN0IHcgPSBnZXRHbG9iYWwoKTtcbiAgaWYgKCEhdy5fX3hzdGF0ZV9fKSB7XG4gICAgcmV0dXJuIHcuX194c3RhdGVfXztcbiAgfVxuICByZXR1cm4gdW5kZWZpbmVkO1xufVxuZnVuY3Rpb24gcmVnaXN0ZXJTZXJ2aWNlKHNlcnZpY2UpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IGRldlRvb2xzID0gZ2V0RGV2VG9vbHMoKTtcbiAgaWYgKGRldlRvb2xzKSB7XG4gICAgZGV2VG9vbHMucmVnaXN0ZXIoc2VydmljZSk7XG4gIH1cbn1cbmNvbnN0IGRldlRvb2xzQWRhcHRlciA9IHNlcnZpY2UgPT4ge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgZGV2VG9vbHMgPSBnZXREZXZUb29scygpO1xuICBpZiAoZGV2VG9vbHMpIHtcbiAgICBkZXZUb29scy5yZWdpc3RlcihzZXJ2aWNlKTtcbiAgfVxufTtcblxuZXhwb3J0IHsgZGV2VG9vbHNBZGFwdGVyLCBnZXRHbG9iYWwsIHJlZ2lzdGVyU2VydmljZSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dist/log-38475d87.development.esm.js":
/*!******************************************************************!*\
  !*** ./node_modules/xstate/dist/log-38475d87.development.esm.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: function() { return /* binding */ SpecialTargets; },\n/* harmony export */   a: function() { return /* binding */ assign; },\n/* harmony export */   b: function() { return /* binding */ enqueueActions; },\n/* harmony export */   c: function() { return /* binding */ sendTo; },\n/* harmony export */   e: function() { return /* binding */ emit; },\n/* harmony export */   f: function() { return /* binding */ forwardTo; },\n/* harmony export */   l: function() { return /* binding */ log; },\n/* harmony export */   s: function() { return /* binding */ sendParent; }\n/* harmony export */ });\n/* harmony import */ var _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./raise-5ea71f04.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-5ea71f04.development.esm.js\");\n\n\nfunction createSpawner(actorScope, {\n  machine,\n  context\n}, event, spawnedChildren) {\n  const spawn = (src, options = {}) => {\n    const {\n      systemId,\n      input\n    } = options;\n    if (typeof src === 'string') {\n      const logic = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.z)(machine, src);\n      if (!logic) {\n        throw new Error(`Actor logic '${src}' not implemented in machine '${machine.id}'`);\n      }\n      const actorRef = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.A)(logic, {\n        id: options.id,\n        parent: actorScope.self,\n        syncSnapshot: options.syncSnapshot,\n        input: typeof input === 'function' ? input({\n          context,\n          event,\n          self: actorScope.self\n        }) : input,\n        src,\n        systemId\n      });\n      spawnedChildren[actorRef.id] = actorRef;\n      return actorRef;\n    } else {\n      const actorRef = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.A)(src, {\n        id: options.id,\n        parent: actorScope.self,\n        syncSnapshot: options.syncSnapshot,\n        input: options.input,\n        src,\n        systemId\n      });\n      return actorRef;\n    }\n  };\n  return (src, options) => {\n    const actorRef = spawn(src, options); // TODO: fix types\n    spawnedChildren[actorRef.id] = actorRef;\n    actorScope.defer(() => {\n      if (actorRef._processingStatus === _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.T.Stopped) {\n        return;\n      }\n      actorRef.start();\n    });\n    return actorRef;\n  };\n}\n\nfunction resolveAssign(actorScope, snapshot, actionArgs, actionParams, {\n  assignment\n}) {\n  if (!snapshot.context) {\n    throw new Error('Cannot assign to undefined `context`. Ensure that `context` is defined in the machine config.');\n  }\n  const spawnedChildren = {};\n  const assignArgs = {\n    context: snapshot.context,\n    event: actionArgs.event,\n    spawn: createSpawner(actorScope, snapshot, actionArgs.event, spawnedChildren),\n    self: actorScope.self,\n    system: actorScope.system\n  };\n  let partialUpdate = {};\n  if (typeof assignment === 'function') {\n    partialUpdate = assignment(assignArgs, actionParams);\n  } else {\n    for (const key of Object.keys(assignment)) {\n      const propAssignment = assignment[key];\n      partialUpdate[key] = typeof propAssignment === 'function' ? propAssignment(assignArgs, actionParams) : propAssignment;\n    }\n  }\n  const updatedContext = Object.assign({}, snapshot.context, partialUpdate);\n  return [(0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.U)(snapshot, {\n    context: updatedContext,\n    children: Object.keys(spawnedChildren).length ? {\n      ...snapshot.children,\n      ...spawnedChildren\n    } : snapshot.children\n  })];\n}\n/**\n * Updates the current context of the machine.\n *\n * @example\n *\n * ```ts\n * import { createMachine, assign } from 'xstate';\n *\n * const countMachine = createMachine({\n *   context: {\n *     count: 0,\n *     message: ''\n *   },\n *   on: {\n *     inc: {\n *       actions: assign({\n *         count: ({ context }) => context.count + 1\n *       })\n *     },\n *     updateMessage: {\n *       actions: assign(({ context, event }) => {\n *         return {\n *           message: event.message.trim()\n *         };\n *       })\n *     }\n *   }\n * });\n * ```\n *\n * @param assignment An object that represents the partial context to update, or\n *   a function that returns an object that represents the partial context to\n *   update.\n */\nfunction assign(assignment) {\n  if (_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.V) {\n    console.warn('Custom actions should not call `assign()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function assign(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  assign.type = 'xstate.assign';\n  assign.assignment = assignment;\n  assign.resolve = resolveAssign;\n  return assign;\n}\n\nfunction resolveEmit(_, snapshot, args, actionParams, {\n  event: eventOrExpr\n}) {\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(`Only event objects may be used with emit; use emit({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  return [snapshot, {\n    event: resolvedEvent\n  }];\n}\nfunction executeEmit(actorScope, {\n  event\n}) {\n  actorScope.defer(() => actorScope.emit(event));\n}\n/**\n * Emits an event to event handlers registered on the actor via `actor.on(event,\n * handler)`.\n *\n * @example\n *\n * ```ts\n * import { emit } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     something: {\n *       actions: emit({\n *         type: 'emitted',\n *         some: 'data'\n *       })\n *     }\n *   }\n *   // ...\n * });\n *\n * const actor = createActor(machine).start();\n *\n * actor.on('emitted', (event) => {\n *   console.log(event);\n * });\n *\n * actor.send({ type: 'something' });\n * // logs:\n * // {\n * //   type: 'emitted',\n * //   some: 'data'\n * // }\n * ```\n */\nfunction emit(/** The event to emit, or an expression that returns an event to emit. */\neventOrExpr) {\n  if (_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.V) {\n    console.warn('Custom actions should not call `emit()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function emit(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  emit.type = 'xstate.emit';\n  emit.event = eventOrExpr;\n  emit.resolve = resolveEmit;\n  emit.execute = executeEmit;\n  return emit;\n}\n\n/**\n * @remarks\n * `T | unknown` reduces to `unknown` and that can be problematic when it comes\n * to contextual typing. It especially is a problem when the union has a\n * function member, like here:\n *\n * ```ts\n * declare function test(\n *   cbOrVal: ((arg: number) => unknown) | unknown\n * ): void;\n * test((arg) => {}); // oops, implicit any\n * ```\n *\n * This type can be used to avoid this problem. This union represents the same\n * value space as `unknown`.\n */\n\n// https://github.com/microsoft/TypeScript/issues/23182#issuecomment-379091887\n\n// @TODO: Replace with native `NoInfer` when TS issue gets fixed:\n// https://github.com/microsoft/TypeScript/pull/57673\n\n/** @deprecated Use the built-in `NoInfer` type instead */\n\n/** The full definition of an event, with a string `type`. */\n\n/**\n * The string or object representing the state value relative to the parent\n * state node.\n *\n * @remarks\n * - For a child atomic state node, this is a string, e.g., `\"pending\"`.\n * - For complex state nodes, this is an object, e.g., `{ success:\n *   \"someChildState\" }`.\n */\n\n// TODO: remove once TS fixes this type-widening issue\n\n/** @deprecated Use `AnyMachineSnapshot` instead */\n\n// TODO: possibly refactor this somehow, use even a simpler type, and maybe even make `machine.options` private or something\n/** @ignore */\n\nlet SpecialTargets = /*#__PURE__*/function (SpecialTargets) {\n  SpecialTargets[\"Parent\"] = \"#_parent\";\n  SpecialTargets[\"Internal\"] = \"#_internal\";\n  return SpecialTargets;\n}({});\n\n/** @deprecated Use `AnyActor` instead. */\n\n// Based on RxJS types\n\n// TODO: in v6, this should only accept AnyActorLogic, like ActorRefFromLogic\n\n/** @deprecated Use `Actor<T>` instead. */\n\n/**\n * Represents logic which can be used by an actor.\n *\n * @template TSnapshot - The type of the snapshot.\n * @template TEvent - The type of the event object.\n * @template TInput - The type of the input.\n * @template TSystem - The type of the actor system.\n */\n\n/** @deprecated */\n\nfunction resolveSendTo(actorScope, snapshot, args, actionParams, {\n  to,\n  event: eventOrExpr,\n  id,\n  delay\n}, extra) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(`Only event objects may be used with sendTo; use sendTo({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  const resolvedTarget = typeof to === 'function' ? to(args, actionParams) : to;\n  let targetActorRef;\n  if (typeof resolvedTarget === 'string') {\n    if (resolvedTarget === SpecialTargets.Parent) {\n      targetActorRef = actorScope.self._parent;\n    } else if (resolvedTarget === SpecialTargets.Internal) {\n      targetActorRef = actorScope.self;\n    } else if (resolvedTarget.startsWith('#_')) {\n      // SCXML compatibility: https://www.w3.org/TR/scxml/#SCXMLEventProcessor\n      // #_invokeid. If the target is the special term '#_invokeid', where invokeid is the invokeid of an SCXML session that the sending session has created by <invoke>, the Processor must add the event to the external queue of that session.\n      targetActorRef = snapshot.children[resolvedTarget.slice(2)];\n    } else {\n      targetActorRef = extra.deferredActorIds?.includes(resolvedTarget) ? resolvedTarget : snapshot.children[resolvedTarget];\n    }\n    if (!targetActorRef) {\n      throw new Error(`Unable to send event to actor '${resolvedTarget}' from machine '${snapshot.machine.id}'.`);\n    }\n  } else {\n    targetActorRef = resolvedTarget || actorScope.self;\n  }\n  return [snapshot, {\n    to: targetActorRef,\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }];\n}\nfunction retryResolveSendTo(_, snapshot, params) {\n  if (typeof params.to === 'string') {\n    params.to = snapshot.children[params.to];\n  }\n}\nfunction executeSendTo(actorScope, params) {\n  // this forms an outgoing events queue\n  // thanks to that the recipient actors are able to read the *updated* snapshot value of the sender\n  actorScope.defer(() => {\n    const {\n      to,\n      event,\n      delay,\n      id\n    } = params;\n    if (typeof delay === 'number') {\n      actorScope.system.scheduler.schedule(actorScope.self, to, event, delay, id);\n      return;\n    }\n    actorScope.system._relay(actorScope.self,\n    // at this point, in a deferred task, it should already be mutated by retryResolveSendTo\n    // if it initially started as a string\n    to, event.type === _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.W ? (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.Y)(actorScope.self.id, event.data) : event);\n  });\n}\n/**\n * Sends an event to an actor.\n *\n * @param actor The `ActorRef` to send the event to.\n * @param event The event to send, or an expression that evaluates to the event\n *   to send\n * @param options Send action options\n *\n *   - `id` - The unique send event identifier (used with `cancel()`).\n *   - `delay` - The number of milliseconds to delay the sending of the event.\n */\nfunction sendTo(to, eventOrExpr, options) {\n  if (_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.V) {\n    console.warn('Custom actions should not call `raise()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function sendTo(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  sendTo.type = 'xsnapshot.sendTo';\n  sendTo.to = to;\n  sendTo.event = eventOrExpr;\n  sendTo.id = options?.id;\n  sendTo.delay = options?.delay;\n  sendTo.resolve = resolveSendTo;\n  sendTo.retryResolve = retryResolveSendTo;\n  sendTo.execute = executeSendTo;\n  return sendTo;\n}\n\n/**\n * Sends an event to this machine's parent.\n *\n * @param event The event to send to the parent machine.\n * @param options Options to pass into the send event.\n */\nfunction sendParent(event, options) {\n  return sendTo(SpecialTargets.Parent, event, options);\n}\n/**\n * Forwards (sends) an event to the `target` actor.\n *\n * @param target The target actor to forward the event to.\n * @param options Options to pass into the send action creator.\n */\nfunction forwardTo(target, options) {\n  if ((!target || typeof target === 'function')) {\n    const originalTarget = target;\n    target = (...args) => {\n      const resolvedTarget = typeof originalTarget === 'function' ? originalTarget(...args) : originalTarget;\n      if (!resolvedTarget) {\n        throw new Error(`Attempted to forward event to undefined actor. This risks an infinite loop in the sender.`);\n      }\n      return resolvedTarget;\n    };\n  }\n  return sendTo(target, ({\n    event\n  }) => event, options);\n}\n\nfunction resolveEnqueueActions(actorScope, snapshot, args, actionParams, {\n  collect\n}) {\n  const actions = [];\n  const enqueue = function enqueue(action) {\n    actions.push(action);\n  };\n  enqueue.assign = (...args) => {\n    actions.push(assign(...args));\n  };\n  enqueue.cancel = (...args) => {\n    actions.push((0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.M)(...args));\n  };\n  enqueue.raise = (...args) => {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay`\n    actions.push((0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.O)(...args));\n  };\n  enqueue.sendTo = (...args) => {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay\n    actions.push(sendTo(...args));\n  };\n  enqueue.sendParent = (...args) => {\n    actions.push(sendParent(...args));\n  };\n  enqueue.spawnChild = (...args) => {\n    actions.push((0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.P)(...args));\n  };\n  enqueue.stopChild = (...args) => {\n    actions.push((0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.R)(...args));\n  };\n  enqueue.emit = (...args) => {\n    actions.push(emit(...args));\n  };\n  collect({\n    context: args.context,\n    event: args.event,\n    enqueue,\n    check: guard => (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.e)(guard, snapshot.context, args.event, snapshot),\n    self: actorScope.self,\n    system: actorScope.system\n  }, actionParams);\n  return [snapshot, undefined, actions];\n}\n/**\n * Creates an action object that will execute actions that are queued by the\n * `enqueue(action)` function.\n *\n * @example\n *\n * ```ts\n * import { createMachine, enqueueActions } from 'xstate';\n *\n * const machine = createMachine({\n *   entry: enqueueActions(({ enqueue, check }) => {\n *     enqueue.assign({ count: 0 });\n *\n *     if (check('someGuard')) {\n *       enqueue.assign({ count: 1 });\n *     }\n *\n *     enqueue('someAction');\n *   })\n * });\n * ```\n */\nfunction enqueueActions(collect) {\n  function enqueueActions(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  enqueueActions.type = 'xstate.enqueueActions';\n  enqueueActions.collect = collect;\n  enqueueActions.resolve = resolveEnqueueActions;\n  return enqueueActions;\n}\n\nfunction resolveLog(_, snapshot, actionArgs, actionParams, {\n  value,\n  label\n}) {\n  return [snapshot, {\n    value: typeof value === 'function' ? value(actionArgs, actionParams) : value,\n    label\n  }];\n}\nfunction executeLog({\n  logger\n}, {\n  value,\n  label\n}) {\n  if (label) {\n    logger(label, value);\n  } else {\n    logger(value);\n  }\n}\n/**\n * @param expr The expression function to evaluate which will be logged. Takes\n *   in 2 arguments:\n *\n *   - `ctx` - the current state context\n *   - `event` - the event that caused this action to be executed.\n *\n * @param label The label to give to the logged expression.\n */\nfunction log(value = ({\n  context,\n  event\n}) => ({\n  context,\n  event\n}), label) {\n  function log(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  log.type = 'xstate.log';\n  log.value = value;\n  log.label = label;\n  log.resolve = resolveLog;\n  log.execute = executeLog;\n  return log;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dist/log-38475d87.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dist/raise-5ea71f04.development.esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/xstate/dist/raise-5ea71f04.development.esm.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $: function() { return /* binding */ $$ACTOR_TYPE; },\n/* harmony export */   A: function() { return /* binding */ createActor; },\n/* harmony export */   B: function() { return /* binding */ Actor; },\n/* harmony export */   C: function() { return /* binding */ interpret; },\n/* harmony export */   D: function() { return /* binding */ and; },\n/* harmony export */   E: function() { return /* binding */ not; },\n/* harmony export */   F: function() { return /* binding */ or; },\n/* harmony export */   G: function() { return /* binding */ stateIn; },\n/* harmony export */   H: function() { return /* binding */ isMachineSnapshot; },\n/* harmony export */   I: function() { return /* binding */ getAllOwnEventDescriptors; },\n/* harmony export */   J: function() { return /* binding */ matchesState; },\n/* harmony export */   K: function() { return /* binding */ pathToStateValue; },\n/* harmony export */   L: function() { return /* binding */ toObserver; },\n/* harmony export */   M: function() { return /* binding */ cancel; },\n/* harmony export */   N: function() { return /* binding */ NULL_EVENT; },\n/* harmony export */   O: function() { return /* binding */ raise; },\n/* harmony export */   P: function() { return /* binding */ spawnChild; },\n/* harmony export */   Q: function() { return /* binding */ stop; },\n/* harmony export */   R: function() { return /* binding */ stopChild; },\n/* harmony export */   S: function() { return /* binding */ STATE_DELIMITER; },\n/* harmony export */   T: function() { return /* binding */ ProcessingStatus; },\n/* harmony export */   U: function() { return /* binding */ cloneMachineSnapshot; },\n/* harmony export */   V: function() { return /* binding */ executingCustomAction; },\n/* harmony export */   W: function() { return /* binding */ XSTATE_ERROR; },\n/* harmony export */   X: function() { return /* binding */ XSTATE_STOP; },\n/* harmony export */   Y: function() { return /* binding */ createErrorActorEvent; },\n/* harmony export */   a: function() { return /* binding */ toTransitionConfigArray; },\n/* harmony export */   b: function() { return /* binding */ formatTransition; },\n/* harmony export */   c: function() { return /* binding */ createInvokeId; },\n/* harmony export */   d: function() { return /* binding */ formatInitialTransition; },\n/* harmony export */   e: function() { return /* binding */ evaluateGuard; },\n/* harmony export */   f: function() { return /* binding */ formatTransitions; },\n/* harmony export */   g: function() { return /* binding */ getDelayedTransitions; },\n/* harmony export */   h: function() { return /* binding */ getCandidates; },\n/* harmony export */   i: function() { return /* binding */ getAllStateNodes; },\n/* harmony export */   j: function() { return /* binding */ getStateNodes; },\n/* harmony export */   k: function() { return /* binding */ createMachineSnapshot; },\n/* harmony export */   l: function() { return /* binding */ isInFinalState; },\n/* harmony export */   m: function() { return /* binding */ mapValues; },\n/* harmony export */   n: function() { return /* binding */ macrostep; },\n/* harmony export */   o: function() { return /* binding */ transitionNode; },\n/* harmony export */   p: function() { return /* binding */ resolveActionsAndContext; },\n/* harmony export */   q: function() { return /* binding */ createInitEvent; },\n/* harmony export */   r: function() { return /* binding */ resolveStateValue; },\n/* harmony export */   s: function() { return /* binding */ microstep; },\n/* harmony export */   t: function() { return /* binding */ toArray; },\n/* harmony export */   u: function() { return /* binding */ getInitialStateNodes; },\n/* harmony export */   v: function() { return /* binding */ toStatePath; },\n/* harmony export */   w: function() { return /* binding */ isStateId; },\n/* harmony export */   x: function() { return /* binding */ getStateNodeByPath; },\n/* harmony export */   y: function() { return /* binding */ getPersistedSnapshot; },\n/* harmony export */   z: function() { return /* binding */ resolveReferencedActor; }\n/* harmony export */ });\n/* harmony import */ var _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dev/dist/xstate-dev.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\");\n\n\nclass Mailbox {\n  constructor(_process) {\n    this._process = _process;\n    this._active = false;\n    this._current = null;\n    this._last = null;\n  }\n  start() {\n    this._active = true;\n    this.flush();\n  }\n  clear() {\n    // we can't set _current to null because we might be currently processing\n    // and enqueue following clear shouldnt start processing the enqueued item immediately\n    if (this._current) {\n      this._current.next = null;\n      this._last = this._current;\n    }\n  }\n  enqueue(event) {\n    const enqueued = {\n      value: event,\n      next: null\n    };\n    if (this._current) {\n      this._last.next = enqueued;\n      this._last = enqueued;\n      return;\n    }\n    this._current = enqueued;\n    this._last = enqueued;\n    if (this._active) {\n      this.flush();\n    }\n  }\n  flush() {\n    while (this._current) {\n      // atm the given _process is responsible for implementing proper try/catch handling\n      // we assume here that this won't throw in a way that can affect this mailbox\n      const consumed = this._current;\n      this._process(consumed.value);\n      this._current = consumed.next;\n    }\n    this._last = null;\n  }\n}\n\nconst STATE_DELIMITER = '.';\nconst TARGETLESS_KEY = '';\nconst NULL_EVENT = '';\nconst STATE_IDENTIFIER = '#';\nconst WILDCARD = '*';\nconst XSTATE_INIT = 'xstate.init';\nconst XSTATE_ERROR = 'xstate.error';\nconst XSTATE_STOP = 'xstate.stop';\n\n/**\n * Returns an event that represents an implicit event that is sent after the\n * specified `delay`.\n *\n * @param delayRef The delay in milliseconds\n * @param id The state node ID where this event is handled\n */\nfunction createAfterEvent(delayRef, id) {\n  return {\n    type: `xstate.after.${delayRef}.${id}`\n  };\n}\n\n/**\n * Returns an event that represents that a final state node has been reached in\n * the parent state node.\n *\n * @param id The final state node's parent state node `id`\n * @param output The data to pass into the event\n */\nfunction createDoneStateEvent(id, output) {\n  return {\n    type: `xstate.done.state.${id}`,\n    output\n  };\n}\n\n/**\n * Returns an event that represents that an invoked service has terminated.\n *\n * An invoked service is terminated when it has reached a top-level final state\n * node, but not when it is canceled.\n *\n * @param invokeId The invoked service ID\n * @param output The data to pass into the event\n */\nfunction createDoneActorEvent(invokeId, output) {\n  return {\n    type: `xstate.done.actor.${invokeId}`,\n    output,\n    actorId: invokeId\n  };\n}\nfunction createErrorActorEvent(id, error) {\n  return {\n    type: `xstate.error.actor.${id}`,\n    error,\n    actorId: id\n  };\n}\nfunction createInitEvent(input) {\n  return {\n    type: XSTATE_INIT,\n    input\n  };\n}\n\n/**\n * This function makes sure that unhandled errors are thrown in a separate\n * macrotask. It allows those errors to be detected by global error handlers and\n * reported to bug tracking services without interrupting our own stack of\n * execution.\n *\n * @param err Error to be thrown\n */\nfunction reportUnhandledError(err) {\n  setTimeout(() => {\n    throw err;\n  });\n}\n\nconst symbolObservable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n\nfunction matchesState(parentStateId, childStateId) {\n  const parentStateValue = toStateValue(parentStateId);\n  const childStateValue = toStateValue(childStateId);\n  if (typeof childStateValue === 'string') {\n    if (typeof parentStateValue === 'string') {\n      return childStateValue === parentStateValue;\n    }\n\n    // Parent more specific than child\n    return false;\n  }\n  if (typeof parentStateValue === 'string') {\n    return parentStateValue in childStateValue;\n  }\n  return Object.keys(parentStateValue).every(key => {\n    if (!(key in childStateValue)) {\n      return false;\n    }\n    return matchesState(parentStateValue[key], childStateValue[key]);\n  });\n}\nfunction toStatePath(stateId) {\n  if (isArray(stateId)) {\n    return stateId;\n  }\n  let result = [];\n  let segment = '';\n  for (let i = 0; i < stateId.length; i++) {\n    const char = stateId.charCodeAt(i);\n    switch (char) {\n      // \\\n      case 92:\n        // consume the next character\n        segment += stateId[i + 1];\n        // and skip over it\n        i++;\n        continue;\n      // .\n      case 46:\n        result.push(segment);\n        segment = '';\n        continue;\n    }\n    segment += stateId[i];\n  }\n  result.push(segment);\n  return result;\n}\nfunction toStateValue(stateValue) {\n  if (isMachineSnapshot(stateValue)) {\n    return stateValue.value;\n  }\n  if (typeof stateValue !== 'string') {\n    return stateValue;\n  }\n  const statePath = toStatePath(stateValue);\n  return pathToStateValue(statePath);\n}\nfunction pathToStateValue(statePath) {\n  if (statePath.length === 1) {\n    return statePath[0];\n  }\n  const value = {};\n  let marker = value;\n  for (let i = 0; i < statePath.length - 1; i++) {\n    if (i === statePath.length - 2) {\n      marker[statePath[i]] = statePath[i + 1];\n    } else {\n      const previous = marker;\n      marker = {};\n      previous[statePath[i]] = marker;\n    }\n  }\n  return value;\n}\nfunction mapValues(collection, iteratee) {\n  const result = {};\n  const collectionKeys = Object.keys(collection);\n  for (let i = 0; i < collectionKeys.length; i++) {\n    const key = collectionKeys[i];\n    result[key] = iteratee(collection[key], key, collection, i);\n  }\n  return result;\n}\nfunction toArrayStrict(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  return [value];\n}\nfunction toArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n  return toArrayStrict(value);\n}\nfunction resolveOutput(mapper, context, event, self) {\n  if (typeof mapper === 'function') {\n    return mapper({\n      context,\n      event,\n      self\n    });\n  }\n  if (!!mapper && typeof mapper === 'object' && Object.values(mapper).some(val => typeof val === 'function')) {\n    console.warn(`Dynamically mapping values to individual properties is deprecated. Use a single function that returns the mapped object instead.\\nFound object containing properties whose values are possibly mapping functions: ${Object.entries(mapper).filter(([key, value]) => typeof value === 'function').map(([key, value]) => `\\n - ${key}: ${value.toString().replace(/\\n\\s*/g, '')}`).join('')}`);\n  }\n  return mapper;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isErrorActorEvent(event) {\n  return event.type.startsWith('xstate.error.actor');\n}\nfunction toTransitionConfigArray(configLike) {\n  return toArrayStrict(configLike).map(transitionLike => {\n    if (typeof transitionLike === 'undefined' || typeof transitionLike === 'string') {\n      return {\n        target: transitionLike\n      };\n    }\n    return transitionLike;\n  });\n}\nfunction normalizeTarget(target) {\n  if (target === undefined || target === TARGETLESS_KEY) {\n    return undefined;\n  }\n  return toArray(target);\n}\nfunction toObserver(nextHandler, errorHandler, completionHandler) {\n  const isObserver = typeof nextHandler === 'object';\n  const self = isObserver ? nextHandler : undefined;\n  return {\n    next: (isObserver ? nextHandler.next : nextHandler)?.bind(self),\n    error: (isObserver ? nextHandler.error : errorHandler)?.bind(self),\n    complete: (isObserver ? nextHandler.complete : completionHandler)?.bind(self)\n  };\n}\nfunction createInvokeId(stateNodeId, index) {\n  return `${index}.${stateNodeId}`;\n}\nfunction resolveReferencedActor(machine, src) {\n  const match = src.match(/^xstate\\.invoke\\.(\\d+)\\.(.*)/);\n  if (!match) {\n    return machine.implementations.actors[src];\n  }\n  const [, indexStr, nodeId] = match;\n  const node = machine.getStateNodeById(nodeId);\n  const invokeConfig = node.config.invoke;\n  return (Array.isArray(invokeConfig) ? invokeConfig[indexStr] : invokeConfig).src;\n}\nfunction getAllOwnEventDescriptors(snapshot) {\n  return [...new Set([...snapshot._nodes.flatMap(sn => sn.ownEvents)])];\n}\n\nfunction createScheduledEventId(actorRef, id) {\n  return `${actorRef.sessionId}.${id}`;\n}\nlet idCounter = 0;\nfunction createSystem(rootActor, options) {\n  const children = new Map();\n  const keyedActors = new Map();\n  const reverseKeyedActors = new WeakMap();\n  const inspectionObservers = new Set();\n  const timerMap = {};\n  const {\n    clock,\n    logger\n  } = options;\n  const scheduler = {\n    schedule: (source, target, event, delay, id = Math.random().toString(36).slice(2)) => {\n      const scheduledEvent = {\n        source,\n        target,\n        event,\n        delay,\n        id,\n        startedAt: Date.now()\n      };\n      const scheduledEventId = createScheduledEventId(source, id);\n      system._snapshot._scheduledEvents[scheduledEventId] = scheduledEvent;\n      const timeout = clock.setTimeout(() => {\n        delete timerMap[scheduledEventId];\n        delete system._snapshot._scheduledEvents[scheduledEventId];\n        system._relay(source, target, event);\n      }, delay);\n      timerMap[scheduledEventId] = timeout;\n    },\n    cancel: (source, id) => {\n      const scheduledEventId = createScheduledEventId(source, id);\n      const timeout = timerMap[scheduledEventId];\n      delete timerMap[scheduledEventId];\n      delete system._snapshot._scheduledEvents[scheduledEventId];\n      if (timeout !== undefined) {\n        clock.clearTimeout(timeout);\n      }\n    },\n    cancelAll: actorRef => {\n      for (const scheduledEventId in system._snapshot._scheduledEvents) {\n        const scheduledEvent = system._snapshot._scheduledEvents[scheduledEventId];\n        if (scheduledEvent.source === actorRef) {\n          scheduler.cancel(actorRef, scheduledEvent.id);\n        }\n      }\n    }\n  };\n  const sendInspectionEvent = event => {\n    if (!inspectionObservers.size) {\n      return;\n    }\n    const resolvedInspectionEvent = {\n      ...event,\n      rootId: rootActor.sessionId\n    };\n    inspectionObservers.forEach(observer => observer.next?.(resolvedInspectionEvent));\n  };\n  const system = {\n    _snapshot: {\n      _scheduledEvents: (options?.snapshot && options.snapshot.scheduler) ?? {}\n    },\n    _bookId: () => `x:${idCounter++}`,\n    _register: (sessionId, actorRef) => {\n      children.set(sessionId, actorRef);\n      return sessionId;\n    },\n    _unregister: actorRef => {\n      children.delete(actorRef.sessionId);\n      const systemId = reverseKeyedActors.get(actorRef);\n      if (systemId !== undefined) {\n        keyedActors.delete(systemId);\n        reverseKeyedActors.delete(actorRef);\n      }\n    },\n    get: systemId => {\n      return keyedActors.get(systemId);\n    },\n    _set: (systemId, actorRef) => {\n      const existing = keyedActors.get(systemId);\n      if (existing && existing !== actorRef) {\n        throw new Error(`Actor with system ID '${systemId}' already exists.`);\n      }\n      keyedActors.set(systemId, actorRef);\n      reverseKeyedActors.set(actorRef, systemId);\n    },\n    inspect: observerOrFn => {\n      const observer = toObserver(observerOrFn);\n      inspectionObservers.add(observer);\n      return {\n        unsubscribe() {\n          inspectionObservers.delete(observer);\n        }\n      };\n    },\n    _sendInspectionEvent: sendInspectionEvent,\n    _relay: (source, target, event) => {\n      system._sendInspectionEvent({\n        type: '@xstate.event',\n        sourceRef: source,\n        actorRef: target,\n        event\n      });\n      target._send(event);\n    },\n    scheduler,\n    getSnapshot: () => {\n      return {\n        _scheduledEvents: {\n          ...system._snapshot._scheduledEvents\n        }\n      };\n    },\n    start: () => {\n      const scheduledEvents = system._snapshot._scheduledEvents;\n      system._snapshot._scheduledEvents = {};\n      for (const scheduledId in scheduledEvents) {\n        const {\n          source,\n          target,\n          event,\n          delay,\n          id\n        } = scheduledEvents[scheduledId];\n        scheduler.schedule(source, target, event, delay, id);\n      }\n    },\n    _clock: clock,\n    _logger: logger\n  };\n  return system;\n}\n\nconst $$ACTOR_TYPE = 1;\n\n// those values are currently used by @xstate/react directly so it's important to keep the assigned values in sync\nlet ProcessingStatus = /*#__PURE__*/function (ProcessingStatus) {\n  ProcessingStatus[ProcessingStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  ProcessingStatus[ProcessingStatus[\"Running\"] = 1] = \"Running\";\n  ProcessingStatus[ProcessingStatus[\"Stopped\"] = 2] = \"Stopped\";\n  return ProcessingStatus;\n}({});\nconst defaultOptions = {\n  clock: {\n    setTimeout: (fn, ms) => {\n      return setTimeout(fn, ms);\n    },\n    clearTimeout: id => {\n      return clearTimeout(id);\n    }\n  },\n  logger: console.log.bind(console),\n  devTools: false\n};\n\n/**\n * An Actor is a running process that can receive events, send events and change\n * its behavior based on the events it receives, which can cause effects outside\n * of the actor. When you run a state machine, it becomes an actor.\n */\nclass Actor {\n  /**\n   * Creates a new actor instance for the given logic with the provided options,\n   * if any.\n   *\n   * @param logic The logic to create an actor from\n   * @param options Actor options\n   */\n  constructor(logic, options) {\n    this.logic = logic;\n    /** The current internal state of the actor. */\n    this._snapshot = void 0;\n    /**\n     * The clock that is responsible for setting and clearing timeouts, such as\n     * delayed events and transitions.\n     */\n    this.clock = void 0;\n    this.options = void 0;\n    /** The unique identifier for this actor relative to its parent. */\n    this.id = void 0;\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this.observers = new Set();\n    this.eventListeners = new Map();\n    this.logger = void 0;\n    /** @internal */\n    this._processingStatus = ProcessingStatus.NotStarted;\n    // Actor Ref\n    this._parent = void 0;\n    /** @internal */\n    this._syncSnapshot = void 0;\n    this.ref = void 0;\n    // TODO: add typings for system\n    this._actorScope = void 0;\n    this._systemId = void 0;\n    /** The globally unique process ID for this invocation. */\n    this.sessionId = void 0;\n    /** The system to which this actor belongs. */\n    this.system = void 0;\n    this._doneEvent = void 0;\n    this.src = void 0;\n    // array of functions to defer\n    this._deferred = [];\n    const resolvedOptions = {\n      ...defaultOptions,\n      ...options\n    };\n    const {\n      clock,\n      logger,\n      parent,\n      syncSnapshot,\n      id,\n      systemId,\n      inspect\n    } = resolvedOptions;\n    this.system = parent ? parent.system : createSystem(this, {\n      clock,\n      logger\n    });\n    if (inspect && !parent) {\n      // Always inspect at the system-level\n      this.system.inspect(toObserver(inspect));\n    }\n    this.sessionId = this.system._bookId();\n    this.id = id ?? this.sessionId;\n    this.logger = options?.logger ?? this.system._logger;\n    this.clock = options?.clock ?? this.system._clock;\n    this._parent = parent;\n    this._syncSnapshot = syncSnapshot;\n    this.options = resolvedOptions;\n    this.src = resolvedOptions.src ?? logic;\n    this.ref = this;\n    this._actorScope = {\n      self: this,\n      id: this.id,\n      sessionId: this.sessionId,\n      logger: this.logger,\n      defer: fn => {\n        this._deferred.push(fn);\n      },\n      system: this.system,\n      stopChild: child => {\n        if (child._parent !== this) {\n          throw new Error(`Cannot stop child actor ${child.id} of ${this.id} because it is not a child`);\n        }\n        child._stop();\n      },\n      emit: emittedEvent => {\n        const listeners = this.eventListeners.get(emittedEvent.type);\n        const wildcardListener = this.eventListeners.get('*');\n        if (!listeners && !wildcardListener) {\n          return;\n        }\n        const allListeners = new Set([...(listeners ? listeners.values() : []), ...(wildcardListener ? wildcardListener.values() : [])]);\n        for (const handler of Array.from(allListeners)) {\n          handler(emittedEvent);\n        }\n      }\n    };\n\n    // Ensure that the send method is bound to this Actor instance\n    // if destructured\n    this.send = this.send.bind(this);\n    this.system._sendInspectionEvent({\n      type: '@xstate.actor',\n      actorRef: this\n    });\n    if (systemId) {\n      this._systemId = systemId;\n      this.system._set(systemId, this);\n    }\n    this._initState(options?.snapshot ?? options?.state);\n    if (systemId && this._snapshot.status !== 'active') {\n      this.system._unregister(this);\n    }\n  }\n  _initState(persistedState) {\n    try {\n      this._snapshot = persistedState ? this.logic.restoreSnapshot ? this.logic.restoreSnapshot(persistedState, this._actorScope) : persistedState : this.logic.getInitialSnapshot(this._actorScope, this.options?.input);\n    } catch (err) {\n      // if we get here then it means that we assign a value to this._snapshot that is not of the correct type\n      // we can't get the true `TSnapshot & { status: 'error'; }`, it's impossible\n      // so right now this is a lie of sorts\n      this._snapshot = {\n        status: 'error',\n        output: undefined,\n        error: err\n      };\n    }\n  }\n  update(snapshot, event) {\n    // Update state\n    this._snapshot = snapshot;\n\n    // Execute deferred effects\n    let deferredFn;\n    while (deferredFn = this._deferred.shift()) {\n      try {\n        deferredFn();\n      } catch (err) {\n        // this error can only be caught when executing *initial* actions\n        // it's the only time when we call actions provided by the user through those deferreds\n        // when the actor is already running we always execute them synchronously while transitioning\n        // no \"builtin deferred\" should actually throw an error since they are either safe\n        // or the control flow is passed through the mailbox and errors should be caught by the `_process` used by the mailbox\n        this._deferred.length = 0;\n        this._snapshot = {\n          ...snapshot,\n          status: 'error',\n          error: err\n        };\n      }\n    }\n    switch (this._snapshot.status) {\n      case 'active':\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        break;\n      case 'done':\n        // next observers are meant to be notified about done snapshots\n        // this can be seen as something that is different from how observable work\n        // but with observables `complete` callback is called without any arguments\n        // it's more ergonomic for XState to treat a done snapshot as a \"next\" value\n        // and the completion event as something that is separate,\n        // something that merely follows emitting that done snapshot\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        this._stopProcedure();\n        this._complete();\n        this._doneEvent = createDoneActorEvent(this.id, this._snapshot.output);\n        if (this._parent) {\n          this.system._relay(this, this._parent, this._doneEvent);\n        }\n        break;\n      case 'error':\n        this._error(this._snapshot.error);\n        break;\n    }\n    this.system._sendInspectionEvent({\n      type: '@xstate.snapshot',\n      actorRef: this,\n      event,\n      snapshot\n    });\n  }\n\n  /**\n   * Subscribe an observer to an actor’s snapshot values.\n   *\n   * @remarks\n   * The observer will receive the actor’s snapshot value when it is emitted.\n   * The observer can be:\n   *\n   * - A plain function that receives the latest snapshot, or\n   * - An observer object whose `.next(snapshot)` method receives the latest\n   *   snapshot\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as a plain function\n   * const subscription = actor.subscribe((snapshot) => {\n   *   console.log(snapshot);\n   * });\n   * ```\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as an object\n   * const subscription = actor.subscribe({\n   *   next(snapshot) {\n   *     console.log(snapshot);\n   *   },\n   *   error(err) {\n   *     // ...\n   *   },\n   *   complete() {\n   *     // ...\n   *   }\n   * });\n   * ```\n   *\n   * The return value of `actor.subscribe(observer)` is a subscription object\n   * that has an `.unsubscribe()` method. You can call\n   * `subscription.unsubscribe()` to unsubscribe the observer:\n   *\n   * @example\n   *\n   * ```ts\n   * const subscription = actor.subscribe((snapshot) => {\n   *   // ...\n   * });\n   *\n   * // Unsubscribe the observer\n   * subscription.unsubscribe();\n   * ```\n   *\n   * When the actor is stopped, all of its observers will automatically be\n   * unsubscribed.\n   *\n   * @param observer - Either a plain function that receives the latest\n   *   snapshot, or an observer object whose `.next(snapshot)` method receives\n   *   the latest snapshot\n   */\n\n  subscribe(nextListenerOrObserver, errorListener, completeListener) {\n    const observer = toObserver(nextListenerOrObserver, errorListener, completeListener);\n    if (this._processingStatus !== ProcessingStatus.Stopped) {\n      this.observers.add(observer);\n    } else {\n      switch (this._snapshot.status) {\n        case 'done':\n          try {\n            observer.complete?.();\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n          break;\n        case 'error':\n          {\n            const err = this._snapshot.error;\n            if (!observer.error) {\n              reportUnhandledError(err);\n            } else {\n              try {\n                observer.error(err);\n              } catch (err) {\n                reportUnhandledError(err);\n              }\n            }\n            break;\n          }\n      }\n    }\n    return {\n      unsubscribe: () => {\n        this.observers.delete(observer);\n      }\n    };\n  }\n  on(type, handler) {\n    let listeners = this.eventListeners.get(type);\n    if (!listeners) {\n      listeners = new Set();\n      this.eventListeners.set(type, listeners);\n    }\n    const wrappedHandler = handler.bind(undefined);\n    listeners.add(wrappedHandler);\n    return {\n      unsubscribe: () => {\n        listeners.delete(wrappedHandler);\n      }\n    };\n  }\n\n  /** Starts the Actor from the initial state */\n  start() {\n    if (this._processingStatus === ProcessingStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n    if (this._syncSnapshot) {\n      this.subscribe({\n        next: snapshot => {\n          if (snapshot.status === 'active') {\n            this.system._relay(this, this._parent, {\n              type: `xstate.snapshot.${this.id}`,\n              snapshot\n            });\n          }\n        },\n        error: () => {}\n      });\n    }\n    this.system._register(this.sessionId, this);\n    if (this._systemId) {\n      this.system._set(this._systemId, this);\n    }\n    this._processingStatus = ProcessingStatus.Running;\n\n    // TODO: this isn't correct when rehydrating\n    const initEvent = createInitEvent(this.options.input);\n    this.system._sendInspectionEvent({\n      type: '@xstate.event',\n      sourceRef: this._parent,\n      actorRef: this,\n      event: initEvent\n    });\n    const status = this._snapshot.status;\n    switch (status) {\n      case 'done':\n        // a state machine can be \"done\" upon initialization (it could reach a final state using initial microsteps)\n        // we still need to complete observers, flush deferreds etc\n        this.update(this._snapshot, initEvent);\n        // TODO: rethink cleanup of observers, mailbox, etc\n        return this;\n      case 'error':\n        this._error(this._snapshot.error);\n        return this;\n    }\n    if (!this._parent) {\n      this.system.start();\n    }\n    if (this.logic.start) {\n      try {\n        this.logic.start(this._snapshot, this._actorScope);\n      } catch (err) {\n        this._snapshot = {\n          ...this._snapshot,\n          status: 'error',\n          error: err\n        };\n        this._error(err);\n        return this;\n      }\n    }\n\n    // TODO: this notifies all subscribers but usually this is redundant\n    // there is no real change happening here\n    // we need to rethink if this needs to be refactored\n    this.update(this._snapshot, initEvent);\n    if (this.options.devTools) {\n      this.attachDevTools();\n    }\n    this.mailbox.start();\n    return this;\n  }\n  _process(event) {\n    let nextState;\n    let caughtError;\n    try {\n      nextState = this.logic.transition(this._snapshot, event, this._actorScope);\n    } catch (err) {\n      // we wrap it in a box so we can rethrow it later even if falsy value gets caught here\n      caughtError = {\n        err\n      };\n    }\n    if (caughtError) {\n      const {\n        err\n      } = caughtError;\n      this._snapshot = {\n        ...this._snapshot,\n        status: 'error',\n        error: err\n      };\n      this._error(err);\n      return;\n    }\n    this.update(nextState, event);\n    if (event.type === XSTATE_STOP) {\n      this._stopProcedure();\n      this._complete();\n    }\n  }\n  _stop() {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      return this;\n    }\n    this.mailbox.clear();\n    if (this._processingStatus === ProcessingStatus.NotStarted) {\n      this._processingStatus = ProcessingStatus.Stopped;\n      return this;\n    }\n    this.mailbox.enqueue({\n      type: XSTATE_STOP\n    });\n    return this;\n  }\n\n  /** Stops the Actor and unsubscribe all listeners. */\n  stop() {\n    if (this._parent) {\n      throw new Error('A non-root actor cannot be stopped directly.');\n    }\n    return this._stop();\n  }\n  _complete() {\n    for (const observer of this.observers) {\n      try {\n        observer.complete?.();\n      } catch (err) {\n        reportUnhandledError(err);\n      }\n    }\n    this.observers.clear();\n  }\n  _reportError(err) {\n    if (!this.observers.size) {\n      if (!this._parent) {\n        reportUnhandledError(err);\n      }\n      return;\n    }\n    let reportError = false;\n    for (const observer of this.observers) {\n      const errorListener = observer.error;\n      reportError ||= !errorListener;\n      try {\n        errorListener?.(err);\n      } catch (err2) {\n        reportUnhandledError(err2);\n      }\n    }\n    this.observers.clear();\n    if (reportError) {\n      reportUnhandledError(err);\n    }\n  }\n  _error(err) {\n    this._stopProcedure();\n    this._reportError(err);\n    if (this._parent) {\n      this.system._relay(this, this._parent, createErrorActorEvent(this.id, err));\n    }\n  }\n  // TODO: atm children don't belong entirely to the actor so\n  // in a way - it's not even super aware of them\n  // so we can't stop them from here but we really should!\n  // right now, they are being stopped within the machine's transition\n  // but that could throw and leave us with \"orphaned\" active actors\n  _stopProcedure() {\n    if (this._processingStatus !== ProcessingStatus.Running) {\n      // Actor already stopped; do nothing\n      return this;\n    }\n\n    // Cancel all delayed events\n    this.system.scheduler.cancelAll(this);\n\n    // TODO: mailbox.reset\n    this.mailbox.clear();\n    // TODO: after `stop` we must prepare ourselves for receiving events again\n    // events sent *after* stop signal must be queued\n    // it seems like this should be the common behavior for all of our consumers\n    // so perhaps this should be unified somehow for all of them\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this._processingStatus = ProcessingStatus.Stopped;\n    this.system._unregister(this);\n    return this;\n  }\n\n  /** @internal */\n  _send(event) {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      // do nothing\n      {\n        const eventString = JSON.stringify(event);\n        console.warn(`Event \"${event.type}\" was sent to stopped actor \"${this.id} (${this.sessionId})\". This actor has already reached its final state, and will not transition.\\nEvent: ${eventString}`);\n      }\n      return;\n    }\n    this.mailbox.enqueue(event);\n  }\n\n  /**\n   * Sends an event to the running Actor to trigger a transition.\n   *\n   * @param event The event to send\n   */\n  send(event) {\n    if (typeof event === 'string') {\n      throw new Error(`Only event objects may be sent to actors; use .send({ type: \"${event}\" }) instead`);\n    }\n    this.system._relay(undefined, this, event);\n  }\n  attachDevTools() {\n    const {\n      devTools\n    } = this.options;\n    if (devTools) {\n      const resolvedDevToolsAdapter = typeof devTools === 'function' ? devTools : _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.devToolsAdapter;\n      resolvedDevToolsAdapter(this);\n    }\n  }\n  toJSON() {\n    return {\n      xstate$$type: $$ACTOR_TYPE,\n      id: this.id\n    };\n  }\n\n  /**\n   * Obtain the internal state of the actor, which can be persisted.\n   *\n   * @remarks\n   * The internal state can be persisted from any actor, not only machines.\n   *\n   * Note that the persisted state is not the same as the snapshot from\n   * {@link Actor.getSnapshot}. Persisted state represents the internal state of\n   * the actor, while snapshots represent the actor's last emitted value.\n   *\n   * Can be restored with {@link ActorOptions.state}\n   * @see https://stately.ai/docs/persistence\n   */\n\n  getPersistedSnapshot(options) {\n    return this.logic.getPersistedSnapshot(this._snapshot, options);\n  }\n  [symbolObservable]() {\n    return this;\n  }\n\n  /**\n   * Read an actor’s snapshot synchronously.\n   *\n   * @remarks\n   * The snapshot represent an actor's last emitted value.\n   *\n   * When an actor receives an event, its internal state may change. An actor\n   * may emit a snapshot when a state transition occurs.\n   *\n   * Note that some actors, such as callback actors generated with\n   * `fromCallback`, will not emit snapshots.\n   * @see {@link Actor.subscribe} to subscribe to an actor’s snapshot values.\n   * @see {@link Actor.getPersistedSnapshot} to persist the internal state of an actor (which is more than just a snapshot).\n   */\n  getSnapshot() {\n    if (!this._snapshot) {\n      throw new Error(`Snapshot can't be read while the actor initializes itself`);\n    }\n    return this._snapshot;\n  }\n}\n/**\n * Creates a new actor instance for the given actor logic with the provided\n * options, if any.\n *\n * @remarks\n * When you create an actor from actor logic via `createActor(logic)`, you\n * implicitly create an actor system where the created actor is the root actor.\n * Any actors spawned from this root actor and its descendants are part of that\n * actor system.\n * @example\n *\n * ```ts\n * import { createActor } from 'xstate';\n * import { someActorLogic } from './someActorLogic.ts';\n *\n * // Creating the actor, which implicitly creates an actor system with itself as the root actor\n * const actor = createActor(someActorLogic);\n *\n * actor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n *\n * // Actors must be started by calling `actor.start()`, which will also start the actor system.\n * actor.start();\n *\n * // Actors can receive events\n * actor.send({ type: 'someEvent' });\n *\n * // You can stop root actors by calling `actor.stop()`, which will also stop the actor system and all actors in that system.\n * actor.stop();\n * ```\n *\n * @param logic - The actor logic to create an actor from. For a state machine\n *   actor logic creator, see {@link createMachine}. Other actor logic creators\n *   include {@link fromCallback}, {@link fromEventObservable},\n *   {@link fromObservable}, {@link fromPromise}, and {@link fromTransition}.\n * @param options - Actor options\n */\nfunction createActor(logic, ...[options]) {\n  return new Actor(logic, options);\n}\n\n/**\n * Creates a new Interpreter instance for the given machine with the provided\n * options, if any.\n *\n * @deprecated Use `createActor` instead\n * @alias\n */\nconst interpret = createActor;\n\n/**\n * @deprecated Use `Actor` instead.\n * @alias\n */\n\nfunction resolveCancel(_, snapshot, actionArgs, actionParams, {\n  sendId\n}) {\n  const resolvedSendId = typeof sendId === 'function' ? sendId(actionArgs, actionParams) : sendId;\n  return [snapshot, resolvedSendId];\n}\nfunction executeCancel(actorScope, resolvedSendId) {\n  actorScope.defer(() => {\n    actorScope.system.scheduler.cancel(actorScope.self, resolvedSendId);\n  });\n}\n/**\n * Cancels a delayed `sendTo(...)` action that is waiting to be executed. The\n * canceled `sendTo(...)` action will not send its event or execute, unless the\n * `delay` has already elapsed before `cancel(...)` is called.\n *\n * @example\n *\n * ```ts\n * import { createMachine, sendTo, cancel } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     sendEvent: {\n *       actions: sendTo(\n *         'some-actor',\n *         { type: 'someEvent' },\n *         {\n *           id: 'some-id',\n *           delay: 1000\n *         }\n *       )\n *     },\n *     cancelEvent: {\n *       actions: cancel('some-id')\n *     }\n *   }\n * });\n * ```\n *\n * @param sendId The `id` of the `sendTo(...)` action to cancel.\n */\nfunction cancel(sendId) {\n  function cancel(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  cancel.type = 'xstate.cancel';\n  cancel.sendId = sendId;\n  cancel.resolve = resolveCancel;\n  cancel.execute = executeCancel;\n  return cancel;\n}\n\nfunction resolveSpawn(actorScope, snapshot, actionArgs, _actionParams, {\n  id,\n  systemId,\n  src,\n  input,\n  syncSnapshot\n}) {\n  const logic = typeof src === 'string' ? resolveReferencedActor(snapshot.machine, src) : src;\n  const resolvedId = typeof id === 'function' ? id(actionArgs) : id;\n  let actorRef;\n  if (logic) {\n    actorRef = createActor(logic, {\n      id: resolvedId,\n      src,\n      parent: actorScope.self,\n      syncSnapshot,\n      systemId,\n      input: typeof input === 'function' ? input({\n        context: snapshot.context,\n        event: actionArgs.event,\n        self: actorScope.self\n      }) : input\n    });\n  }\n  if (!actorRef) {\n    console.warn(`Actor type '${src}' not found in machine '${actorScope.id}'.`);\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children: {\n      ...snapshot.children,\n      [resolvedId]: actorRef\n    }\n  }), {\n    id,\n    actorRef\n  }];\n}\nfunction executeSpawn(actorScope, {\n  id,\n  actorRef\n}) {\n  if (!actorRef) {\n    return;\n  }\n  actorScope.defer(() => {\n    if (actorRef._processingStatus === ProcessingStatus.Stopped) {\n      return;\n    }\n    actorRef.start();\n  });\n}\nfunction spawnChild(...[src, {\n  id,\n  systemId,\n  input,\n  syncSnapshot = false\n} = {}]) {\n  function spawnChild(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  spawnChild.type = 'snapshot.spawnChild';\n  spawnChild.id = id;\n  spawnChild.systemId = systemId;\n  spawnChild.src = src;\n  spawnChild.input = input;\n  spawnChild.syncSnapshot = syncSnapshot;\n  spawnChild.resolve = resolveSpawn;\n  spawnChild.execute = executeSpawn;\n  return spawnChild;\n}\n\nfunction resolveStop(_, snapshot, args, actionParams, {\n  actorRef\n}) {\n  const actorRefOrString = typeof actorRef === 'function' ? actorRef(args, actionParams) : actorRef;\n  const resolvedActorRef = typeof actorRefOrString === 'string' ? snapshot.children[actorRefOrString] : actorRefOrString;\n  let children = snapshot.children;\n  if (resolvedActorRef) {\n    children = {\n      ...children\n    };\n    delete children[resolvedActorRef.id];\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children\n  }), resolvedActorRef];\n}\nfunction executeStop(actorScope, actorRef) {\n  if (!actorRef) {\n    return;\n  }\n\n  // we need to eagerly unregister it here so a new actor with the same systemId can be registered immediately\n  // since we defer actual stopping of the actor but we don't defer actor creations (and we can't do that)\n  // this could throw on `systemId` collision, for example, when dealing with reentering transitions\n  actorScope.system._unregister(actorRef);\n\n  // this allows us to prevent an actor from being started if it gets stopped within the same macrostep\n  // this can happen, for example, when the invoking state is being exited immediately by an always transition\n  if (actorRef._processingStatus !== ProcessingStatus.Running) {\n    actorScope.stopChild(actorRef);\n    return;\n  }\n  // stopping a child enqueues a stop event in the child actor's mailbox\n  // we need for all of the already enqueued events to be processed before we stop the child\n  // the parent itself might want to send some events to a child (for example from exit actions on the invoking state)\n  // and we don't want to ignore those events\n  actorScope.defer(() => {\n    actorScope.stopChild(actorRef);\n  });\n}\n/**\n * Stops a child actor.\n *\n * @param actorRef The actor to stop.\n */\nfunction stopChild(actorRef) {\n  function stop(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  stop.type = 'xstate.stopChild';\n  stop.actorRef = actorRef;\n  stop.resolve = resolveStop;\n  stop.execute = executeStop;\n  return stop;\n}\n\n/**\n * Stops a child actor.\n *\n * @deprecated Use `stopChild(...)` instead\n * @alias\n */\nconst stop = stopChild;\n\nfunction checkStateIn(snapshot, _, {\n  stateValue\n}) {\n  if (typeof stateValue === 'string' && isStateId(stateValue)) {\n    const target = snapshot.machine.getStateNodeById(stateValue);\n    return snapshot._nodes.some(sn => sn === target);\n  }\n  return snapshot.matches(stateValue);\n}\nfunction stateIn(stateValue) {\n  function stateIn(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  stateIn.check = checkStateIn;\n  stateIn.stateValue = stateValue;\n  return stateIn;\n}\nfunction checkNot(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return !evaluateGuard(guards[0], context, event, snapshot);\n}\n\n/**\n * Higher-order guard that evaluates to `true` if the `guard` passed to it\n * evaluates to `false`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, not } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => false\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: not('someNamedGuard'),\n *       actions: () => {\n *         // will be executed if guard in `not(...)`\n *         // evaluates to `false`\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard\n */\nfunction not(guard) {\n  function not(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  not.check = checkNot;\n  not.guards = [guard];\n  return not;\n}\nfunction checkAnd(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.every(guard => evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if all `guards` passed to it\n * evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, and } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: and([({ context }) => context.value > 0, 'someNamedGuard']),\n *       actions: () => {\n *         // will be executed if all guards in `and(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction and(guards) {\n  function and(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  and.check = checkAnd;\n  and.guards = guards;\n  return and;\n}\nfunction checkOr(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.some(guard => evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if any of the `guards` passed to\n * it evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, or } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: or([({ context }) => context.value > 0, 'someNamedGuard']),\n *       actions: () => {\n *         // will be executed if any of the guards in `or(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction or(guards) {\n  function or(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  or.check = checkOr;\n  or.guards = guards;\n  return or;\n}\n\n// TODO: throw on cycles (depth check should be enough)\nfunction evaluateGuard(guard, context, event, snapshot) {\n  const {\n    machine\n  } = snapshot;\n  const isInline = typeof guard === 'function';\n  const resolved = isInline ? guard : machine.implementations.guards[typeof guard === 'string' ? guard : guard.type];\n  if (!isInline && !resolved) {\n    throw new Error(`Guard '${typeof guard === 'string' ? guard : guard.type}' is not implemented.'.`);\n  }\n  if (typeof resolved !== 'function') {\n    return evaluateGuard(resolved, context, event, snapshot);\n  }\n  const guardArgs = {\n    context,\n    event\n  };\n  const guardParams = isInline || typeof guard === 'string' ? undefined : 'params' in guard ? typeof guard.params === 'function' ? guard.params({\n    context,\n    event\n  }) : guard.params : undefined;\n  if (!('check' in resolved)) {\n    // the existing type of `.guards` assumes non-nullable `TExpressionGuard`\n    // inline guards expect `TExpressionGuard` to be set to `undefined`\n    // it's fine to cast this here, our logic makes sure that we call those 2 \"variants\" correctly\n    return resolved(guardArgs, guardParams);\n  }\n  const builtinGuard = resolved;\n  return builtinGuard.check(snapshot, guardArgs, resolved // this holds all params\n  );\n}\n\nconst isAtomicStateNode = stateNode => stateNode.type === 'atomic' || stateNode.type === 'final';\nfunction getChildren(stateNode) {\n  return Object.values(stateNode.states).filter(sn => sn.type !== 'history');\n}\nfunction getProperAncestors(stateNode, toStateNode) {\n  const ancestors = [];\n  if (toStateNode === stateNode) {\n    return ancestors;\n  }\n\n  // add all ancestors\n  let m = stateNode.parent;\n  while (m && m !== toStateNode) {\n    ancestors.push(m);\n    m = m.parent;\n  }\n  return ancestors;\n}\nfunction getAllStateNodes(stateNodes) {\n  const nodeSet = new Set(stateNodes);\n  const adjList = getAdjList(nodeSet);\n\n  // add descendants\n  for (const s of nodeSet) {\n    // if previously active, add existing child nodes\n    if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n      getInitialStateNodesWithTheirAncestors(s).forEach(sn => nodeSet.add(sn));\n    } else {\n      if (s.type === 'parallel') {\n        for (const child of getChildren(s)) {\n          if (child.type === 'history') {\n            continue;\n          }\n          if (!nodeSet.has(child)) {\n            const initialStates = getInitialStateNodesWithTheirAncestors(child);\n            for (const initialStateNode of initialStates) {\n              nodeSet.add(initialStateNode);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // add all ancestors\n  for (const s of nodeSet) {\n    let m = s.parent;\n    while (m) {\n      nodeSet.add(m);\n      m = m.parent;\n    }\n  }\n  return nodeSet;\n}\nfunction getValueFromAdj(baseNode, adjList) {\n  const childStateNodes = adjList.get(baseNode);\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n  if (baseNode.type === 'compound') {\n    const childStateNode = childStateNodes[0];\n    if (childStateNode) {\n      if (isAtomicStateNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n  const stateValue = {};\n  for (const childStateNode of childStateNodes) {\n    stateValue[childStateNode.key] = getValueFromAdj(childStateNode, adjList);\n  }\n  return stateValue;\n}\nfunction getAdjList(stateNodes) {\n  const adjList = new Map();\n  for (const s of stateNodes) {\n    if (!adjList.has(s)) {\n      adjList.set(s, []);\n    }\n    if (s.parent) {\n      if (!adjList.has(s.parent)) {\n        adjList.set(s.parent, []);\n      }\n      adjList.get(s.parent).push(s);\n    }\n  }\n  return adjList;\n}\nfunction getStateValue(rootNode, stateNodes) {\n  const config = getAllStateNodes(stateNodes);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\nfunction isInFinalState(stateNodeSet, stateNode) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(s => s.type === 'final' && stateNodeSet.has(s));\n  }\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(sn => isInFinalState(stateNodeSet, sn));\n  }\n  return stateNode.type === 'final';\n}\nconst isStateId = str => str[0] === STATE_IDENTIFIER;\nfunction getCandidates(stateNode, receivedEventType) {\n  const candidates = stateNode.transitions.get(receivedEventType) || [...stateNode.transitions.keys()].filter(eventDescriptor => {\n    // check if transition is a wildcard transition,\n    // which matches any non-transient events\n    if (eventDescriptor === WILDCARD) {\n      return true;\n    }\n    if (!eventDescriptor.endsWith('.*')) {\n      return false;\n    }\n    if (/.*\\*.+/.test(eventDescriptor)) {\n      console.warn(`Wildcards can only be the last token of an event descriptor (e.g., \"event.*\") or the entire event descriptor (\"*\"). Check the \"${eventDescriptor}\" event.`);\n    }\n    const partialEventTokens = eventDescriptor.split('.');\n    const eventTokens = receivedEventType.split('.');\n    for (let tokenIndex = 0; tokenIndex < partialEventTokens.length; tokenIndex++) {\n      const partialEventToken = partialEventTokens[tokenIndex];\n      const eventToken = eventTokens[tokenIndex];\n      if (partialEventToken === '*') {\n        const isLastToken = tokenIndex === partialEventTokens.length - 1;\n        if (!isLastToken) {\n          console.warn(`Infix wildcards in transition events are not allowed. Check the \"${eventDescriptor}\" transition.`);\n        }\n        return isLastToken;\n      }\n      if (partialEventToken !== eventToken) {\n        return false;\n      }\n    }\n    return true;\n  }).sort((a, b) => b.length - a.length).flatMap(key => stateNode.transitions.get(key));\n  return candidates;\n}\n\n/** All delayed transitions from the config. */\nfunction getDelayedTransitions(stateNode) {\n  const afterConfig = stateNode.config.after;\n  if (!afterConfig) {\n    return [];\n  }\n  const mutateEntryExit = (delay, i) => {\n    const afterEvent = createAfterEvent(delay, stateNode.id);\n    const eventType = afterEvent.type;\n    stateNode.entry.push(raise(afterEvent, {\n      id: eventType,\n      delay\n    }));\n    stateNode.exit.push(cancel(eventType));\n    return eventType;\n  };\n  const delayedTransitions = Object.keys(afterConfig).flatMap((delay, i) => {\n    const configTransition = afterConfig[delay];\n    const resolvedTransition = typeof configTransition === 'string' ? {\n      target: configTransition\n    } : configTransition;\n    const resolvedDelay = Number.isNaN(+delay) ? delay : +delay;\n    const eventType = mutateEntryExit(resolvedDelay);\n    return toArray(resolvedTransition).map(transition => ({\n      ...transition,\n      event: eventType,\n      delay: resolvedDelay\n    }));\n  });\n  return delayedTransitions.map(delayedTransition => {\n    const {\n      delay\n    } = delayedTransition;\n    return {\n      ...formatTransition(stateNode, delayedTransition.event, delayedTransition),\n      delay\n    };\n  });\n}\nfunction formatTransition(stateNode, descriptor, transitionConfig) {\n  const normalizedTarget = normalizeTarget(transitionConfig.target);\n  const reenter = transitionConfig.reenter ?? false;\n  const target = resolveTarget(stateNode, normalizedTarget);\n\n  // TODO: should this be part of a lint rule instead?\n  if (transitionConfig.cond) {\n    throw new Error(`State \"${stateNode.id}\" has declared \\`cond\\` for one of its transitions. This property has been renamed to \\`guard\\`. Please update your code.`);\n  }\n  const transition = {\n    ...transitionConfig,\n    actions: toArray(transitionConfig.actions),\n    guard: transitionConfig.guard,\n    target,\n    source: stateNode,\n    reenter,\n    eventType: descriptor,\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: target ? target.map(t => `#${t.id}`) : undefined\n    })\n  };\n  return transition;\n}\nfunction formatTransitions(stateNode) {\n  const transitions = new Map();\n  if (stateNode.config.on) {\n    for (const descriptor of Object.keys(stateNode.config.on)) {\n      if (descriptor === NULL_EVENT) {\n        throw new Error('Null events (\"\") cannot be specified as a transition key. Use `always: { ... }` instead.');\n      }\n      const transitionsConfig = stateNode.config.on[descriptor];\n      transitions.set(descriptor, toTransitionConfigArray(transitionsConfig).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  if (stateNode.config.onDone) {\n    const descriptor = `xstate.done.state.${stateNode.id}`;\n    transitions.set(descriptor, toTransitionConfigArray(stateNode.config.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n  }\n  for (const invokeDef of stateNode.invoke) {\n    if (invokeDef.onDone) {\n      const descriptor = `xstate.done.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onError) {\n      const descriptor = `xstate.error.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onError).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onSnapshot) {\n      const descriptor = `xstate.snapshot.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onSnapshot).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  for (const delayedTransition of stateNode.after) {\n    let existing = transitions.get(delayedTransition.eventType);\n    if (!existing) {\n      existing = [];\n      transitions.set(delayedTransition.eventType, existing);\n    }\n    existing.push(delayedTransition);\n  }\n  return transitions;\n}\nfunction formatInitialTransition(stateNode, _target) {\n  const resolvedTarget = typeof _target === 'string' ? stateNode.states[_target] : _target ? stateNode.states[_target.target] : undefined;\n  if (!resolvedTarget && _target) {\n    throw new Error(`Initial state node \"${_target}\" not found on parent state node #${stateNode.id}`);\n  }\n  const transition = {\n    source: stateNode,\n    actions: !_target || typeof _target === 'string' ? [] : toArray(_target.actions),\n    eventType: null,\n    reenter: false,\n    target: resolvedTarget ? [resolvedTarget] : [],\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: resolvedTarget ? [`#${resolvedTarget.id}`] : []\n    })\n  };\n  return transition;\n}\nfunction resolveTarget(stateNode, targets) {\n  if (targets === undefined) {\n    // an undefined target signals that the state node should not transition from that state when receiving that event\n    return undefined;\n  }\n  return targets.map(target => {\n    if (typeof target !== 'string') {\n      return target;\n    }\n    if (isStateId(target)) {\n      return stateNode.machine.getStateNodeById(target);\n    }\n    const isInternalTarget = target[0] === STATE_DELIMITER;\n    // If internal target is defined on machine,\n    // do not include machine key on target\n    if (isInternalTarget && !stateNode.parent) {\n      return getStateNodeByPath(stateNode, target.slice(1));\n    }\n    const resolvedTarget = isInternalTarget ? stateNode.key + target : target;\n    if (stateNode.parent) {\n      try {\n        const targetStateNode = getStateNodeByPath(stateNode.parent, resolvedTarget);\n        return targetStateNode;\n      } catch (err) {\n        throw new Error(`Invalid transition definition for state node '${stateNode.id}':\\n${err.message}`);\n      }\n    } else {\n      throw new Error(`Invalid target: \"${target}\" is not a valid target from the root node. Did you mean \".${target}\"?`);\n    }\n  });\n}\nfunction resolveHistoryDefaultTransition(stateNode) {\n  const normalizedTarget = normalizeTarget(stateNode.config.target);\n  if (!normalizedTarget) {\n    return stateNode.parent.initial;\n  }\n  return {\n    target: normalizedTarget.map(t => typeof t === 'string' ? getStateNodeByPath(stateNode.parent, t) : t)\n  };\n}\nfunction isHistoryNode(stateNode) {\n  return stateNode.type === 'history';\n}\nfunction getInitialStateNodesWithTheirAncestors(stateNode) {\n  const states = getInitialStateNodes(stateNode);\n  for (const initialState of states) {\n    for (const ancestor of getProperAncestors(initialState, stateNode)) {\n      states.add(ancestor);\n    }\n  }\n  return states;\n}\nfunction getInitialStateNodes(stateNode) {\n  const set = new Set();\n  function iter(descStateNode) {\n    if (set.has(descStateNode)) {\n      return;\n    }\n    set.add(descStateNode);\n    if (descStateNode.type === 'compound') {\n      iter(descStateNode.initial.target[0]);\n    } else if (descStateNode.type === 'parallel') {\n      for (const child of getChildren(descStateNode)) {\n        iter(child);\n      }\n    }\n  }\n  iter(stateNode);\n  return set;\n}\n/** Returns the child state node from its relative `stateKey`, or throws. */\nfunction getStateNode(stateNode, stateKey) {\n  if (isStateId(stateKey)) {\n    return stateNode.machine.getStateNodeById(stateKey);\n  }\n  if (!stateNode.states) {\n    throw new Error(`Unable to retrieve child state '${stateKey}' from '${stateNode.id}'; no child states exist.`);\n  }\n  const result = stateNode.states[stateKey];\n  if (!result) {\n    throw new Error(`Child state '${stateKey}' does not exist on '${stateNode.id}'`);\n  }\n  return result;\n}\n\n/**\n * Returns the relative state node from the given `statePath`, or throws.\n *\n * @param statePath The string or string array relative path to the state node.\n */\nfunction getStateNodeByPath(stateNode, statePath) {\n  if (typeof statePath === 'string' && isStateId(statePath)) {\n    try {\n      return stateNode.machine.getStateNodeById(statePath);\n    } catch (e) {\n      // try individual paths\n      // throw e;\n    }\n  }\n  const arrayStatePath = toStatePath(statePath).slice();\n  let currentStateNode = stateNode;\n  while (arrayStatePath.length) {\n    const key = arrayStatePath.shift();\n    if (!key.length) {\n      break;\n    }\n    currentStateNode = getStateNode(currentStateNode, key);\n  }\n  return currentStateNode;\n}\n\n/**\n * Returns the state nodes represented by the current state value.\n *\n * @param stateValue The state value or State instance\n */\nfunction getStateNodes(stateNode, stateValue) {\n  if (typeof stateValue === 'string') {\n    const childStateNode = stateNode.states[stateValue];\n    if (!childStateNode) {\n      throw new Error(`State '${stateValue}' does not exist on '${stateNode.id}'`);\n    }\n    return [stateNode, childStateNode];\n  }\n  const childStateKeys = Object.keys(stateValue);\n  const childStateNodes = childStateKeys.map(subStateKey => getStateNode(stateNode, subStateKey)).filter(Boolean);\n  return [stateNode.machine.root, stateNode].concat(childStateNodes, childStateKeys.reduce((allSubStateNodes, subStateKey) => {\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    if (!subStateNode) {\n      return allSubStateNodes;\n    }\n    const subStateNodes = getStateNodes(subStateNode, stateValue[subStateKey]);\n    return allSubStateNodes.concat(subStateNodes);\n  }, []));\n}\nfunction transitionAtomicNode(stateNode, stateValue, snapshot, event) {\n  const childStateNode = getStateNode(stateNode, stateValue);\n  const next = childStateNode.next(snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionCompoundNode(stateNode, stateValue, snapshot, event) {\n  const subStateKeys = Object.keys(stateValue);\n  const childStateNode = getStateNode(stateNode, subStateKeys[0]);\n  const next = transitionNode(childStateNode, stateValue[subStateKeys[0]], snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionParallelNode(stateNode, stateValue, snapshot, event) {\n  const allInnerTransitions = [];\n  for (const subStateKey of Object.keys(stateValue)) {\n    const subStateValue = stateValue[subStateKey];\n    if (!subStateValue) {\n      continue;\n    }\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    const innerTransitions = transitionNode(subStateNode, subStateValue, snapshot, event);\n    if (innerTransitions) {\n      allInnerTransitions.push(...innerTransitions);\n    }\n  }\n  if (!allInnerTransitions.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return allInnerTransitions;\n}\nfunction transitionNode(stateNode, stateValue, snapshot, event) {\n  // leaf node\n  if (typeof stateValue === 'string') {\n    return transitionAtomicNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // compound node\n  if (Object.keys(stateValue).length === 1) {\n    return transitionCompoundNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // parallel node\n  return transitionParallelNode(stateNode, stateValue, snapshot, event);\n}\nfunction getHistoryNodes(stateNode) {\n  return Object.keys(stateNode.states).map(key => stateNode.states[key]).filter(sn => sn.type === 'history');\n}\nfunction isDescendant(childStateNode, parentStateNode) {\n  let marker = childStateNode;\n  while (marker.parent && marker.parent !== parentStateNode) {\n    marker = marker.parent;\n  }\n  return marker.parent === parentStateNode;\n}\nfunction hasIntersection(s1, s2) {\n  const set1 = new Set(s1);\n  const set2 = new Set(s2);\n  for (const item of set1) {\n    if (set2.has(item)) {\n      return true;\n    }\n  }\n  for (const item of set2) {\n    if (set1.has(item)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction removeConflictingTransitions(enabledTransitions, stateNodeSet, historyValue) {\n  const filteredTransitions = new Set();\n  for (const t1 of enabledTransitions) {\n    let t1Preempted = false;\n    const transitionsToRemove = new Set();\n    for (const t2 of filteredTransitions) {\n      if (hasIntersection(computeExitSet([t1], stateNodeSet, historyValue), computeExitSet([t2], stateNodeSet, historyValue))) {\n        if (isDescendant(t1.source, t2.source)) {\n          transitionsToRemove.add(t2);\n        } else {\n          t1Preempted = true;\n          break;\n        }\n      }\n    }\n    if (!t1Preempted) {\n      for (const t3 of transitionsToRemove) {\n        filteredTransitions.delete(t3);\n      }\n      filteredTransitions.add(t1);\n    }\n  }\n  return Array.from(filteredTransitions);\n}\nfunction findLeastCommonAncestor(stateNodes) {\n  const [head, ...tail] = stateNodes;\n  for (const ancestor of getProperAncestors(head, undefined)) {\n    if (tail.every(sn => isDescendant(sn, ancestor))) {\n      return ancestor;\n    }\n  }\n}\nfunction getEffectiveTargetStates(transition, historyValue) {\n  if (!transition.target) {\n    return [];\n  }\n  const targets = new Set();\n  for (const targetNode of transition.target) {\n    if (isHistoryNode(targetNode)) {\n      if (historyValue[targetNode.id]) {\n        for (const node of historyValue[targetNode.id]) {\n          targets.add(node);\n        }\n      } else {\n        for (const node of getEffectiveTargetStates(resolveHistoryDefaultTransition(targetNode), historyValue)) {\n          targets.add(node);\n        }\n      }\n    } else {\n      targets.add(targetNode);\n    }\n  }\n  return [...targets];\n}\nfunction getTransitionDomain(transition, historyValue) {\n  const targetStates = getEffectiveTargetStates(transition, historyValue);\n  if (!targetStates) {\n    return;\n  }\n  if (!transition.reenter && targetStates.every(target => target === transition.source || isDescendant(target, transition.source))) {\n    return transition.source;\n  }\n  const lca = findLeastCommonAncestor(targetStates.concat(transition.source));\n  if (lca) {\n    return lca;\n  }\n\n  // at this point we know that it's a root transition since LCA couldn't be found\n  if (transition.reenter) {\n    return;\n  }\n  return transition.source.machine.root;\n}\nfunction computeExitSet(transitions, stateNodeSet, historyValue) {\n  const statesToExit = new Set();\n  for (const t of transitions) {\n    if (t.target?.length) {\n      const domain = getTransitionDomain(t, historyValue);\n      if (t.reenter && t.source === domain) {\n        statesToExit.add(domain);\n      }\n      for (const stateNode of stateNodeSet) {\n        if (isDescendant(stateNode, domain)) {\n          statesToExit.add(stateNode);\n        }\n      }\n    }\n  }\n  return [...statesToExit];\n}\nfunction areStateNodeCollectionsEqual(prevStateNodes, nextStateNodeSet) {\n  if (prevStateNodes.length !== nextStateNodeSet.size) {\n    return false;\n  }\n  for (const node of prevStateNodes) {\n    if (!nextStateNodeSet.has(node)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** https://www.w3.org/TR/scxml/#microstepProcedure */\nfunction microstep(transitions, currentSnapshot, actorScope, event, isInitial, internalQueue) {\n  if (!transitions.length) {\n    return currentSnapshot;\n  }\n  const mutStateNodeSet = new Set(currentSnapshot._nodes);\n  let historyValue = currentSnapshot.historyValue;\n  const filteredTransitions = removeConflictingTransitions(transitions, mutStateNodeSet, historyValue);\n  let nextState = currentSnapshot;\n\n  // Exit states\n  if (!isInitial) {\n    [nextState, historyValue] = exitStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, historyValue, internalQueue);\n  }\n\n  // Execute transition content\n  nextState = resolveActionsAndContext(nextState, event, actorScope, filteredTransitions.flatMap(t => t.actions), internalQueue);\n\n  // Enter states\n  nextState = enterStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial);\n  const nextStateNodes = [...mutStateNodeSet];\n  if (nextState.status === 'done') {\n    nextState = resolveActionsAndContext(nextState, event, actorScope, nextStateNodes.sort((a, b) => b.order - a.order).flatMap(state => state.exit), internalQueue);\n  }\n  try {\n    if (historyValue === currentSnapshot.historyValue && areStateNodeCollectionsEqual(currentSnapshot._nodes, mutStateNodeSet)) {\n      return nextState;\n    }\n    return cloneMachineSnapshot(nextState, {\n      _nodes: nextStateNodes,\n      historyValue\n    });\n  } catch (e) {\n    // TODO: Refactor this once proper error handling is implemented.\n    // See https://github.com/statelyai/rfcs/pull/4\n    throw e;\n  }\n}\nfunction getMachineOutput(snapshot, event, actorScope, rootNode, rootCompletionNode) {\n  if (rootNode.output === undefined) {\n    return;\n  }\n  const doneStateEvent = createDoneStateEvent(rootCompletionNode.id, rootCompletionNode.output !== undefined && rootCompletionNode.parent ? resolveOutput(rootCompletionNode.output, snapshot.context, event, actorScope.self) : undefined);\n  return resolveOutput(rootNode.output, snapshot.context, doneStateEvent, actorScope.self);\n}\nfunction enterStates(currentSnapshot, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial) {\n  let nextSnapshot = currentSnapshot;\n  const statesToEnter = new Set();\n  // those are states that were directly targeted or indirectly targeted by the explicit target\n  // in other words, those are states for which initial actions should be executed\n  // when we target `#deep_child` initial actions of its ancestors shouldn't be executed\n  const statesForDefaultEntry = new Set();\n  computeEntrySet(filteredTransitions, historyValue, statesForDefaultEntry, statesToEnter);\n\n  // In the initial state, the root state node is \"entered\".\n  if (isInitial) {\n    statesForDefaultEntry.add(currentSnapshot.machine.root);\n  }\n  const completedNodes = new Set();\n  for (const stateNodeToEnter of [...statesToEnter].sort((a, b) => a.order - b.order)) {\n    mutStateNodeSet.add(stateNodeToEnter);\n    const actions = [];\n\n    // Add entry actions\n    actions.push(...stateNodeToEnter.entry);\n    for (const invokeDef of stateNodeToEnter.invoke) {\n      actions.push(spawnChild(invokeDef.src, {\n        ...invokeDef,\n        syncSnapshot: !!invokeDef.onSnapshot\n      }));\n    }\n    if (statesForDefaultEntry.has(stateNodeToEnter)) {\n      const initialActions = stateNodeToEnter.initial.actions;\n      actions.push(...initialActions);\n    }\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, actions, internalQueue, stateNodeToEnter.invoke.map(invokeDef => invokeDef.id));\n    if (stateNodeToEnter.type === 'final') {\n      const parent = stateNodeToEnter.parent;\n      let ancestorMarker = parent?.type === 'parallel' ? parent : parent?.parent;\n      let rootCompletionNode = ancestorMarker || stateNodeToEnter;\n      if (parent?.type === 'compound') {\n        internalQueue.push(createDoneStateEvent(parent.id, stateNodeToEnter.output !== undefined ? resolveOutput(stateNodeToEnter.output, nextSnapshot.context, event, actorScope.self) : undefined));\n      }\n      while (ancestorMarker?.type === 'parallel' && !completedNodes.has(ancestorMarker) && isInFinalState(mutStateNodeSet, ancestorMarker)) {\n        completedNodes.add(ancestorMarker);\n        internalQueue.push(createDoneStateEvent(ancestorMarker.id));\n        rootCompletionNode = ancestorMarker;\n        ancestorMarker = ancestorMarker.parent;\n      }\n      if (ancestorMarker) {\n        continue;\n      }\n      nextSnapshot = cloneMachineSnapshot(nextSnapshot, {\n        status: 'done',\n        output: getMachineOutput(nextSnapshot, event, actorScope, nextSnapshot.machine.root, rootCompletionNode)\n      });\n    }\n  }\n  return nextSnapshot;\n}\nfunction computeEntrySet(transitions, historyValue, statesForDefaultEntry, statesToEnter) {\n  for (const t of transitions) {\n    const domain = getTransitionDomain(t, historyValue);\n    for (const s of t.target || []) {\n      if (!isHistoryNode(s) && (\n      // if the target is different than the source then it will *definitely* be entered\n      t.source !== s ||\n      // we know that the domain can't lie within the source\n      // if it's different than the source then it's outside of it and it means that the target has to be entered as well\n      t.source !== domain ||\n      // reentering transitions always enter the target, even if it's the source itself\n      t.reenter)) {\n        statesToEnter.add(s);\n        statesForDefaultEntry.add(s);\n      }\n      addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n    }\n    const targetStates = getEffectiveTargetStates(t, historyValue);\n    for (const s of targetStates) {\n      const ancestors = getProperAncestors(s, domain);\n      if (domain?.type === 'parallel') {\n        ancestors.push(domain);\n      }\n      addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, !t.source.parent && t.reenter ? undefined : domain);\n    }\n  }\n}\nfunction addDescendantStatesToEnter(stateNode, historyValue, statesForDefaultEntry, statesToEnter) {\n  if (isHistoryNode(stateNode)) {\n    if (historyValue[stateNode.id]) {\n      const historyStateNodes = historyValue[stateNode.id];\n      for (const s of historyStateNodes) {\n        statesToEnter.add(s);\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyStateNodes) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    } else {\n      const historyDefaultTransition = resolveHistoryDefaultTransition(stateNode);\n      for (const s of historyDefaultTransition.target) {\n        statesToEnter.add(s);\n        if (historyDefaultTransition === stateNode.parent?.initial) {\n          statesForDefaultEntry.add(stateNode.parent);\n        }\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyDefaultTransition.target) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    }\n  } else {\n    if (stateNode.type === 'compound') {\n      const [initialState] = stateNode.initial.target;\n      if (!isHistoryNode(initialState)) {\n        statesToEnter.add(initialState);\n        statesForDefaultEntry.add(initialState);\n      }\n      addDescendantStatesToEnter(initialState, historyValue, statesForDefaultEntry, statesToEnter);\n      addProperAncestorStatesToEnter(initialState, stateNode, statesToEnter, historyValue, statesForDefaultEntry);\n    } else {\n      if (stateNode.type === 'parallel') {\n        for (const child of getChildren(stateNode).filter(sn => !isHistoryNode(sn))) {\n          if (![...statesToEnter].some(s => isDescendant(s, child))) {\n            if (!isHistoryNode(child)) {\n              statesToEnter.add(child);\n              statesForDefaultEntry.add(child);\n            }\n            addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n          }\n        }\n      }\n    }\n  }\n}\nfunction addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, reentrancyDomain) {\n  for (const anc of ancestors) {\n    if (!reentrancyDomain || isDescendant(anc, reentrancyDomain)) {\n      statesToEnter.add(anc);\n    }\n    if (anc.type === 'parallel') {\n      for (const child of getChildren(anc).filter(sn => !isHistoryNode(sn))) {\n        if (![...statesToEnter].some(s => isDescendant(s, child))) {\n          statesToEnter.add(child);\n          addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n        }\n      }\n    }\n  }\n}\nfunction addProperAncestorStatesToEnter(stateNode, toStateNode, statesToEnter, historyValue, statesForDefaultEntry) {\n  addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, getProperAncestors(stateNode, toStateNode));\n}\nfunction exitStates(currentSnapshot, event, actorScope, transitions, mutStateNodeSet, historyValue, internalQueue) {\n  let nextSnapshot = currentSnapshot;\n  const statesToExit = computeExitSet(transitions, mutStateNodeSet, historyValue);\n  statesToExit.sort((a, b) => b.order - a.order);\n  let changedHistory;\n\n  // From SCXML algorithm: https://www.w3.org/TR/scxml/#exitStates\n  for (const exitStateNode of statesToExit) {\n    for (const historyNode of getHistoryNodes(exitStateNode)) {\n      let predicate;\n      if (historyNode.history === 'deep') {\n        predicate = sn => isAtomicStateNode(sn) && isDescendant(sn, exitStateNode);\n      } else {\n        predicate = sn => {\n          return sn.parent === exitStateNode;\n        };\n      }\n      changedHistory ??= {\n        ...historyValue\n      };\n      changedHistory[historyNode.id] = Array.from(mutStateNodeSet).filter(predicate);\n    }\n  }\n  for (const s of statesToExit) {\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, [...s.exit, ...s.invoke.map(def => stopChild(def.id))], internalQueue);\n    mutStateNodeSet.delete(s);\n  }\n  return [nextSnapshot, changedHistory || historyValue];\n}\nlet executingCustomAction = false;\nfunction resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, extra, retries) {\n  const {\n    machine\n  } = currentSnapshot;\n  let intermediateSnapshot = currentSnapshot;\n  for (const action of actions) {\n    const isInline = typeof action === 'function';\n    const resolvedAction = isInline ? action :\n    // the existing type of `.actions` assumes non-nullable `TExpressionAction`\n    // it's fine to cast this here to get a common type and lack of errors in the rest of the code\n    // our logic below makes sure that we call those 2 \"variants\" correctly\n    machine.implementations.actions[typeof action === 'string' ? action : action.type];\n    if (!resolvedAction) {\n      continue;\n    }\n    const actionArgs = {\n      context: intermediateSnapshot.context,\n      event,\n      self: actorScope.self,\n      system: actorScope.system\n    };\n    const actionParams = isInline || typeof action === 'string' ? undefined : 'params' in action ? typeof action.params === 'function' ? action.params({\n      context: intermediateSnapshot.context,\n      event\n    }) : action.params : undefined;\n    function executeAction() {\n      actorScope.system._sendInspectionEvent({\n        type: '@xstate.action',\n        actorRef: actorScope.self,\n        action: {\n          type: typeof action === 'string' ? action : typeof action === 'object' ? action.type : action.name || '(anonymous)',\n          params: actionParams\n        }\n      });\n      try {\n        executingCustomAction = resolvedAction;\n        resolvedAction(actionArgs, actionParams);\n      } finally {\n        executingCustomAction = false;\n      }\n    }\n    if (!('resolve' in resolvedAction)) {\n      if (actorScope.self._processingStatus === ProcessingStatus.Running) {\n        executeAction();\n      } else {\n        actorScope.defer(() => {\n          executeAction();\n        });\n      }\n      continue;\n    }\n    const builtinAction = resolvedAction;\n    const [nextState, params, actions] = builtinAction.resolve(actorScope, intermediateSnapshot, actionArgs, actionParams, resolvedAction,\n    // this holds all params\n    extra);\n    intermediateSnapshot = nextState;\n    if ('retryResolve' in builtinAction) {\n      retries?.push([builtinAction, params]);\n    }\n    if ('execute' in builtinAction) {\n      if (actorScope.self._processingStatus === ProcessingStatus.Running) {\n        builtinAction.execute(actorScope, params);\n      } else {\n        actorScope.defer(builtinAction.execute.bind(null, actorScope, params));\n      }\n    }\n    if (actions) {\n      intermediateSnapshot = resolveAndExecuteActionsWithContext(intermediateSnapshot, event, actorScope, actions, extra, retries);\n    }\n  }\n  return intermediateSnapshot;\n}\nfunction resolveActionsAndContext(currentSnapshot, event, actorScope, actions, internalQueue, deferredActorIds) {\n  const retries = deferredActorIds ? [] : undefined;\n  const nextState = resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, {\n    internalQueue,\n    deferredActorIds\n  }, retries);\n  retries?.forEach(([builtinAction, params]) => {\n    builtinAction.retryResolve(actorScope, nextState, params);\n  });\n  return nextState;\n}\nfunction macrostep(snapshot, event, actorScope, internalQueue = []) {\n  if (event.type === WILDCARD) {\n    throw new Error(`An event cannot have the wildcard type ('${WILDCARD}')`);\n  }\n  let nextSnapshot = snapshot;\n  const microstates = [];\n  function addMicrostate(microstate, event, transitions) {\n    actorScope.system._sendInspectionEvent({\n      type: '@xstate.microstep',\n      actorRef: actorScope.self,\n      event,\n      snapshot: microstate,\n      _transitions: transitions\n    });\n    microstates.push(microstate);\n  }\n\n  // Handle stop event\n  if (event.type === XSTATE_STOP) {\n    nextSnapshot = cloneMachineSnapshot(stopChildren(nextSnapshot, event, actorScope), {\n      status: 'stopped'\n    });\n    addMicrostate(nextSnapshot, event, []);\n    return {\n      snapshot: nextSnapshot,\n      microstates\n    };\n  }\n  let nextEvent = event;\n\n  // Assume the state is at rest (no raised events)\n  // Determine the next state based on the next microstep\n  if (nextEvent.type !== XSTATE_INIT) {\n    const currentEvent = nextEvent;\n    const isErr = isErrorActorEvent(currentEvent);\n    const transitions = selectTransitions(currentEvent, nextSnapshot);\n    if (isErr && !transitions.length) {\n      // TODO: we should likely only allow transitions selected by very explicit descriptors\n      // `*` shouldn't be matched, likely `xstate.error.*` shouldnt be either\n      // similarly `xstate.error.actor.*` and `xstate.error.actor.todo.*` have to be considered too\n      nextSnapshot = cloneMachineSnapshot(snapshot, {\n        status: 'error',\n        error: currentEvent.error\n      });\n      addMicrostate(nextSnapshot, currentEvent, []);\n      return {\n        snapshot: nextSnapshot,\n        microstates\n      };\n    }\n    nextSnapshot = microstep(transitions, snapshot, actorScope, nextEvent, false,\n    // isInitial\n    internalQueue);\n    addMicrostate(nextSnapshot, currentEvent, transitions);\n  }\n  let shouldSelectEventlessTransitions = true;\n  while (nextSnapshot.status === 'active') {\n    let enabledTransitions = shouldSelectEventlessTransitions ? selectEventlessTransitions(nextSnapshot, nextEvent) : [];\n\n    // eventless transitions should always be selected after selecting *regular* transitions\n    // by assigning `undefined` to `previousState` we ensure that `shouldSelectEventlessTransitions` gets always computed to true in such a case\n    const previousState = enabledTransitions.length ? nextSnapshot : undefined;\n    if (!enabledTransitions.length) {\n      if (!internalQueue.length) {\n        break;\n      }\n      nextEvent = internalQueue.shift();\n      enabledTransitions = selectTransitions(nextEvent, nextSnapshot);\n    }\n    nextSnapshot = microstep(enabledTransitions, nextSnapshot, actorScope, nextEvent, false, internalQueue);\n    shouldSelectEventlessTransitions = nextSnapshot !== previousState;\n    addMicrostate(nextSnapshot, nextEvent, enabledTransitions);\n  }\n  if (nextSnapshot.status !== 'active') {\n    stopChildren(nextSnapshot, nextEvent, actorScope);\n  }\n  return {\n    snapshot: nextSnapshot,\n    microstates\n  };\n}\nfunction stopChildren(nextState, event, actorScope) {\n  return resolveActionsAndContext(nextState, event, actorScope, Object.values(nextState.children).map(child => stopChild(child)), []);\n}\nfunction selectTransitions(event, nextState) {\n  return nextState.machine.getTransitionData(nextState, event);\n}\nfunction selectEventlessTransitions(nextState, event) {\n  const enabledTransitionSet = new Set();\n  const atomicStates = nextState._nodes.filter(isAtomicStateNode);\n  for (const stateNode of atomicStates) {\n    loop: for (const s of [stateNode].concat(getProperAncestors(stateNode, undefined))) {\n      if (!s.always) {\n        continue;\n      }\n      for (const transition of s.always) {\n        if (transition.guard === undefined || evaluateGuard(transition.guard, nextState.context, event, nextState)) {\n          enabledTransitionSet.add(transition);\n          break loop;\n        }\n      }\n    }\n  }\n  return removeConflictingTransitions(Array.from(enabledTransitionSet), new Set(nextState._nodes), nextState.historyValue);\n}\n\n/**\n * Resolves a partial state value with its full representation in the state\n * node's machine.\n *\n * @param stateValue The partial state value to resolve.\n */\nfunction resolveStateValue(rootNode, stateValue) {\n  const allStateNodes = getAllStateNodes(getStateNodes(rootNode, stateValue));\n  return getStateValue(rootNode, [...allStateNodes]);\n}\n\nfunction isMachineSnapshot(value) {\n  return !!value && typeof value === 'object' && 'machine' in value && 'value' in value;\n}\nconst machineSnapshotMatches = function matches(testValue) {\n  return matchesState(testValue, this.value);\n};\nconst machineSnapshotHasTag = function hasTag(tag) {\n  return this.tags.has(tag);\n};\nconst machineSnapshotCan = function can(event) {\n  if (!this.machine) {\n    console.warn(`state.can(...) used outside of a machine-created State object; this will always return false.`);\n  }\n  const transitionData = this.machine.getTransitionData(this, event);\n  return !!transitionData?.length &&\n  // Check that at least one transition is not forbidden\n  transitionData.some(t => t.target !== undefined || t.actions.length);\n};\nconst machineSnapshotToJSON = function toJSON() {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    getMeta,\n    toJSON,\n    can,\n    hasTag,\n    matches,\n    ...jsonValues\n  } = this;\n  return {\n    ...jsonValues,\n    tags: Array.from(tags)\n  };\n};\nconst machineSnapshotGetMeta = function getMeta() {\n  return this._nodes.reduce((acc, stateNode) => {\n    if (stateNode.meta !== undefined) {\n      acc[stateNode.id] = stateNode.meta;\n    }\n    return acc;\n  }, {});\n};\nfunction createMachineSnapshot(config, machine) {\n  return {\n    status: config.status,\n    output: config.output,\n    error: config.error,\n    machine,\n    context: config.context,\n    _nodes: config._nodes,\n    value: getStateValue(machine.root, config._nodes),\n    tags: new Set(config._nodes.flatMap(sn => sn.tags)),\n    children: config.children,\n    historyValue: config.historyValue || {},\n    matches: machineSnapshotMatches,\n    hasTag: machineSnapshotHasTag,\n    can: machineSnapshotCan,\n    getMeta: machineSnapshotGetMeta,\n    toJSON: machineSnapshotToJSON\n  };\n}\nfunction cloneMachineSnapshot(snapshot, config = {}) {\n  return createMachineSnapshot({\n    ...snapshot,\n    ...config\n  }, snapshot.machine);\n}\nfunction getPersistedSnapshot(snapshot, options) {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    children,\n    context,\n    can,\n    hasTag,\n    matches,\n    getMeta,\n    toJSON,\n    ...jsonValues\n  } = snapshot;\n  const childrenJson = {};\n  for (const id in children) {\n    const child = children[id];\n    if (typeof child.src !== 'string' && (!options || !('__unsafeAllowInlineActors' in options))) {\n      throw new Error('An inline child actor cannot be persisted.');\n    }\n    childrenJson[id] = {\n      snapshot: child.getPersistedSnapshot(options),\n      src: child.src,\n      systemId: child._systemId,\n      syncSnapshot: child._syncSnapshot\n    };\n  }\n  const persisted = {\n    ...jsonValues,\n    context: persistContext(context),\n    children: childrenJson\n  };\n  return persisted;\n}\nfunction persistContext(contextPart) {\n  let copy;\n  for (const key in contextPart) {\n    const value = contextPart[key];\n    if (value && typeof value === 'object') {\n      if ('sessionId' in value && 'send' in value && 'ref' in value) {\n        copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n          ...contextPart\n        };\n        copy[key] = {\n          xstate$$type: $$ACTOR_TYPE,\n          id: value.id\n        };\n      } else {\n        const result = persistContext(value);\n        if (result !== value) {\n          copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n            ...contextPart\n          };\n          copy[key] = result;\n        }\n      }\n    }\n  }\n  return copy ?? contextPart;\n}\n\nfunction resolveRaise(_, snapshot, args, actionParams, {\n  event: eventOrExpr,\n  id,\n  delay\n}, {\n  internalQueue\n}) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(`Only event objects may be used with raise; use raise({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  if (typeof resolvedDelay !== 'number') {\n    internalQueue.push(resolvedEvent);\n  }\n  return [snapshot, {\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }];\n}\nfunction executeRaise(actorScope, params) {\n  const {\n    event,\n    delay,\n    id\n  } = params;\n  if (typeof delay === 'number') {\n    actorScope.defer(() => {\n      const self = actorScope.self;\n      actorScope.system.scheduler.schedule(self, self, event, delay, id);\n    });\n    return;\n  }\n}\n/**\n * Raises an event. This places the event in the internal event queue, so that\n * the event is immediately consumed by the machine in the current step.\n *\n * @param eventType The event to raise.\n */\nfunction raise(eventOrExpr, options) {\n  if (executingCustomAction) {\n    console.warn('Custom actions should not call `raise()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function raise(args, params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  raise.type = 'xstate.raise';\n  raise.event = eventOrExpr;\n  raise.id = options?.id;\n  raise.delay = options?.delay;\n  raise.resolve = resolveRaise;\n  raise.execute = executeRaise;\n  return raise;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dist/raise-5ea71f04.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/xstate/dist/xstate.development.esm.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Actor: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.B; },\n/* harmony export */   SimulatedClock: function() { return /* binding */ SimulatedClock; },\n/* harmony export */   SpecialTargets: function() { return /* reexport safe */ _log_38475d87_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.S; },\n/* harmony export */   StateMachine: function() { return /* binding */ StateMachine; },\n/* harmony export */   StateNode: function() { return /* binding */ StateNode; },\n/* harmony export */   __unsafe_getAllOwnEventDescriptors: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.I; },\n/* harmony export */   and: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.D; },\n/* harmony export */   assertEvent: function() { return /* binding */ assertEvent; },\n/* harmony export */   assign: function() { return /* reexport safe */ _log_38475d87_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.a; },\n/* harmony export */   cancel: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.M; },\n/* harmony export */   createActor: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A; },\n/* harmony export */   createEmptyActor: function() { return /* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.createEmptyActor; },\n/* harmony export */   createMachine: function() { return /* binding */ createMachine; },\n/* harmony export */   emit: function() { return /* reexport safe */ _log_38475d87_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.e; },\n/* harmony export */   enqueueActions: function() { return /* reexport safe */ _log_38475d87_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.b; },\n/* harmony export */   forwardTo: function() { return /* reexport safe */ _log_38475d87_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.f; },\n/* harmony export */   fromCallback: function() { return /* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromCallback; },\n/* harmony export */   fromEventObservable: function() { return /* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromEventObservable; },\n/* harmony export */   fromObservable: function() { return /* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromObservable; },\n/* harmony export */   fromPromise: function() { return /* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromPromise; },\n/* harmony export */   fromTransition: function() { return /* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromTransition; },\n/* harmony export */   getInitialSnapshot: function() { return /* binding */ getInitialSnapshot; },\n/* harmony export */   getNextSnapshot: function() { return /* binding */ getNextSnapshot; },\n/* harmony export */   getStateNodes: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.j; },\n/* harmony export */   interpret: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.C; },\n/* harmony export */   isMachineSnapshot: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.H; },\n/* harmony export */   log: function() { return /* reexport safe */ _log_38475d87_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.l; },\n/* harmony export */   matchesState: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.J; },\n/* harmony export */   not: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.E; },\n/* harmony export */   or: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.F; },\n/* harmony export */   pathToStateValue: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.K; },\n/* harmony export */   raise: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.O; },\n/* harmony export */   sendParent: function() { return /* reexport safe */ _log_38475d87_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.s; },\n/* harmony export */   sendTo: function() { return /* reexport safe */ _log_38475d87_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.c; },\n/* harmony export */   setup: function() { return /* binding */ setup; },\n/* harmony export */   spawnChild: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.P; },\n/* harmony export */   stateIn: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.G; },\n/* harmony export */   stop: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.Q; },\n/* harmony export */   stopChild: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.R; },\n/* harmony export */   toObserver: function() { return /* reexport safe */ _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.L; },\n/* harmony export */   toPromise: function() { return /* binding */ toPromise; },\n/* harmony export */   waitFor: function() { return /* binding */ waitFor; }\n/* harmony export */ });\n/* harmony import */ var _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actors/dist/xstate-actors.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./raise-5ea71f04.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-5ea71f04.development.esm.js\");\n/* harmony import */ var _log_38475d87_development_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./log-38475d87.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/log-38475d87.development.esm.js\");\n/* harmony import */ var _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dev/dist/xstate-dev.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\");\n\n\n\n\n\n\n\n/**\n * Asserts that the given event object is of the specified type or types. Throws\n * an error if the event object is not of the specified types.\n *\n * @example\n *\n * ```ts\n * // ...\n * entry: ({ event }) => {\n *   assertEvent(event, 'doNothing');\n *   // event is { type: 'doNothing' }\n * },\n * // ...\n * exit: ({ event }) => {\n *   assertEvent(event, 'greet');\n *   // event is { type: 'greet'; message: string }\n *\n *   assertEvent(event, ['greet', 'notify']);\n *   // event is { type: 'greet'; message: string }\n *   // or { type: 'notify'; message: string; level: 'info' | 'error' }\n * },\n * ```\n */\nfunction assertEvent(event, type) {\n  const types = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(type);\n  if (!types.includes(event.type)) {\n    const typesText = types.length === 1 ? `type \"${types[0]}\"` : `one of types \"${types.join('\", \"')}\"`;\n    throw new Error(`Expected event ${JSON.stringify(event)} to have ${typesText}`);\n  }\n}\n\nconst cache = new WeakMap();\nfunction memo(object, key, fn) {\n  let memoizedData = cache.get(object);\n  if (!memoizedData) {\n    memoizedData = {\n      [key]: fn()\n    };\n    cache.set(object, memoizedData);\n  } else if (!(key in memoizedData)) {\n    memoizedData[key] = fn();\n  }\n  return memoizedData[key];\n}\n\nconst EMPTY_OBJECT = {};\nconst toSerializableAction = action => {\n  if (typeof action === 'string') {\n    return {\n      type: action\n    };\n  }\n  if (typeof action === 'function') {\n    if ('resolve' in action) {\n      return {\n        type: action.type\n      };\n    }\n    return {\n      type: action.name\n    };\n  }\n  return action;\n};\nclass StateNode {\n  constructor(/** The raw config used to create the machine. */\n  config, options) {\n    this.config = config;\n    /**\n     * The relative key of the state node, which represents its location in the\n     * overall state value.\n     */\n    this.key = void 0;\n    /** The unique ID of the state node. */\n    this.id = void 0;\n    /**\n     * The type of this state node:\n     *\n     * - `'atomic'` - no child state nodes\n     * - `'compound'` - nested child state nodes (XOR)\n     * - `'parallel'` - orthogonal nested child state nodes (AND)\n     * - `'history'` - history state node\n     * - `'final'` - final state node\n     */\n    this.type = void 0;\n    /** The string path from the root machine node to this node. */\n    this.path = void 0;\n    /** The child state nodes. */\n    this.states = void 0;\n    /**\n     * The type of history on this state node. Can be:\n     *\n     * - `'shallow'` - recalls only top-level historical state value\n     * - `'deep'` - recalls historical state value at all levels\n     */\n    this.history = void 0;\n    /** The action(s) to be executed upon entering the state node. */\n    this.entry = void 0;\n    /** The action(s) to be executed upon exiting the state node. */\n    this.exit = void 0;\n    /** The parent state node. */\n    this.parent = void 0;\n    /** The root machine node. */\n    this.machine = void 0;\n    /**\n     * The meta data associated with this state node, which will be returned in\n     * State instances.\n     */\n    this.meta = void 0;\n    /**\n     * The output data sent with the \"xstate.done.state._id_\" event if this is a\n     * final state node.\n     */\n    this.output = void 0;\n    /**\n     * The order this state node appears. Corresponds to the implicit document\n     * order.\n     */\n    this.order = -1;\n    this.description = void 0;\n    this.tags = [];\n    this.transitions = void 0;\n    this.always = void 0;\n    this.parent = options._parent;\n    this.key = options._key;\n    this.machine = options._machine;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.id = this.config.id || [this.machine.id, ...this.path].join(_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.S);\n    this.type = this.config.type || (this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.description = this.config.description;\n    this.order = this.machine.idMap.size;\n    this.machine.idMap.set(this.id, this);\n    this.states = this.config.states ? (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.m)(this.config.states, (stateConfig, key) => {\n      const stateNode = new StateNode(stateConfig, {\n        _parent: this,\n        _key: key,\n        _machine: this.machine\n      });\n      return stateNode;\n    }) : EMPTY_OBJECT;\n    if (this.type === 'compound' && !this.config.initial) {\n      throw new Error(`No initial state specified for compound state node \"#${this.id}\". Try adding { initial: \"${Object.keys(this.states)[0]}\" } to the state config.`);\n    }\n\n    // History config\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this.entry = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.config.entry).slice();\n    this.exit = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.config.exit).slice();\n    this.meta = this.config.meta;\n    this.output = this.type === 'final' || !this.parent ? this.config.output : undefined;\n    this.tags = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(config.tags).slice();\n  }\n\n  /** @internal */\n  _initialize() {\n    this.transitions = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)(this);\n    if (this.config.always) {\n      this.always = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.a)(this.config.always).map(t => (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.b)(this, _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.N, t));\n    }\n    Object.keys(this.states).forEach(key => {\n      this.states[key]._initialize();\n    });\n  }\n\n  /** The well-structured state node definition. */\n  get definition() {\n    return {\n      id: this.id,\n      key: this.key,\n      version: this.machine.version,\n      type: this.type,\n      initial: this.initial ? {\n        target: this.initial.target,\n        source: this,\n        actions: this.initial.actions.map(toSerializableAction),\n        eventType: null,\n        reenter: false,\n        toJSON: () => ({\n          target: this.initial.target.map(t => `#${t.id}`),\n          source: `#${this.id}`,\n          actions: this.initial.actions.map(toSerializableAction),\n          eventType: null\n        })\n      } : undefined,\n      history: this.history,\n      states: (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.m)(this.states, state => {\n        return state.definition;\n      }),\n      on: this.on,\n      transitions: [...this.transitions.values()].flat().map(t => ({\n        ...t,\n        actions: t.actions.map(toSerializableAction)\n      })),\n      entry: this.entry.map(toSerializableAction),\n      exit: this.exit.map(toSerializableAction),\n      meta: this.meta,\n      order: this.order || -1,\n      output: this.output,\n      invoke: this.invoke,\n      description: this.description,\n      tags: this.tags\n    };\n  }\n\n  /** @internal */\n  toJSON() {\n    return this.definition;\n  }\n\n  /** The logic invoked as actors by this state node. */\n  get invoke() {\n    return memo(this, 'invoke', () => (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.config.invoke).map((invokeConfig, i) => {\n      const {\n        src,\n        systemId\n      } = invokeConfig;\n      const resolvedId = invokeConfig.id ?? (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.c)(this.id, i);\n      const resolvedSrc = typeof src === 'string' ? src : `xstate.invoke.${(0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.c)(this.id, i)}`;\n      return {\n        ...invokeConfig,\n        src: resolvedSrc,\n        id: resolvedId,\n        systemId: systemId,\n        toJSON() {\n          const {\n            onDone,\n            onError,\n            ...invokeDefValues\n          } = invokeConfig;\n          return {\n            ...invokeDefValues,\n            type: 'xstate.invoke',\n            src: resolvedSrc,\n            id: resolvedId\n          };\n        }\n      };\n    }));\n  }\n\n  /** The mapping of events to transitions. */\n  get on() {\n    return memo(this, 'on', () => {\n      const transitions = this.transitions;\n      return [...transitions].flatMap(([descriptor, t]) => t.map(t => [descriptor, t])).reduce((map, [descriptor, transition]) => {\n        map[descriptor] = map[descriptor] || [];\n        map[descriptor].push(transition);\n        return map;\n      }, {});\n    });\n  }\n  get after() {\n    return memo(this, 'delayedTransitions', () => (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.g)(this));\n  }\n  get initial() {\n    return memo(this, 'initial', () => (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, this.config.initial));\n  }\n\n  /** @internal */\n  next(snapshot, event) {\n    const eventType = event.type;\n    const actions = [];\n    let selectedTransition;\n    const candidates = memo(this, `candidates-${eventType}`, () => (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.h)(this, eventType));\n    for (const candidate of candidates) {\n      const {\n        guard\n      } = candidate;\n      const resolvedContext = snapshot.context;\n      let guardPassed = false;\n      try {\n        guardPassed = !guard || (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.e)(guard, resolvedContext, event, snapshot);\n      } catch (err) {\n        const guardType = typeof guard === 'string' ? guard : typeof guard === 'object' ? guard.type : undefined;\n        throw new Error(`Unable to evaluate guard ${guardType ? `'${guardType}' ` : ''}in transition for event '${eventType}' in state node '${this.id}':\\n${err.message}`);\n      }\n      if (guardPassed) {\n        actions.push(...candidate.actions);\n        selectedTransition = candidate;\n        break;\n      }\n    }\n    return selectedTransition ? [selectedTransition] : undefined;\n  }\n\n  /** All the event types accepted by this state node and its descendants. */\n  get events() {\n    return memo(this, 'events', () => {\n      const {\n        states\n      } = this;\n      const events = new Set(this.ownEvents);\n      if (states) {\n        for (const stateId of Object.keys(states)) {\n          const state = states[stateId];\n          if (state.states) {\n            for (const event of state.events) {\n              events.add(`${event}`);\n            }\n          }\n        }\n      }\n      return Array.from(events);\n    });\n  }\n\n  /**\n   * All the events that have transitions directly from this state node.\n   *\n   * Excludes any inert events.\n   */\n  get ownEvents() {\n    const events = new Set([...this.transitions.keys()].filter(descriptor => {\n      return this.transitions.get(descriptor).some(transition => !(!transition.target && !transition.actions.length && !transition.reenter));\n    }));\n    return Array.from(events);\n  }\n}\n\nconst STATE_IDENTIFIER = '#';\nclass StateMachine {\n  constructor(/** The raw config used to create the machine. */\n  config, implementations) {\n    this.config = config;\n    /** The machine's own version. */\n    this.version = void 0;\n    this.schemas = void 0;\n    this.implementations = void 0;\n    /** @internal */\n    this.__xstatenode = true;\n    /** @internal */\n    this.idMap = new Map();\n    this.root = void 0;\n    this.id = void 0;\n    this.states = void 0;\n    this.events = void 0;\n    this.id = config.id || '(machine)';\n    this.implementations = {\n      actors: implementations?.actors ?? {},\n      actions: implementations?.actions ?? {},\n      delays: implementations?.delays ?? {},\n      guards: implementations?.guards ?? {}\n    };\n    this.version = this.config.version;\n    this.schemas = this.config.schemas;\n    this.transition = this.transition.bind(this);\n    this.getInitialSnapshot = this.getInitialSnapshot.bind(this);\n    this.getPersistedSnapshot = this.getPersistedSnapshot.bind(this);\n    this.restoreSnapshot = this.restoreSnapshot.bind(this);\n    this.start = this.start.bind(this);\n    this.root = new StateNode(config, {\n      _key: this.id,\n      _machine: this\n    });\n    this.root._initialize();\n    this.states = this.root.states; // TODO: remove!\n    this.events = this.root.events;\n    if (!('output' in this.root) && Object.values(this.states).some(state => state.type === 'final' && 'output' in state)) {\n      console.warn('Missing `machine.output` declaration (top-level final state with output detected)');\n    }\n  }\n\n  /**\n   * Clones this state machine with the provided implementations and merges the\n   * `context` (if provided).\n   *\n   * @param implementations Options (`actions`, `guards`, `actors`, `delays`,\n   *   `context`) to recursively merge with the existing options.\n   * @returns A new `StateMachine` instance with the provided implementations.\n   */\n  provide(implementations) {\n    const {\n      actions,\n      guards,\n      actors,\n      delays\n    } = this.implementations;\n    return new StateMachine(this.config, {\n      actions: {\n        ...actions,\n        ...implementations.actions\n      },\n      guards: {\n        ...guards,\n        ...implementations.guards\n      },\n      actors: {\n        ...actors,\n        ...implementations.actors\n      },\n      delays: {\n        ...delays,\n        ...implementations.delays\n      }\n    });\n  }\n  resolveState(config) {\n    const resolvedStateValue = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.r)(this.root, config.value);\n    const nodeSet = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.i)((0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.j)(this.root, resolvedStateValue));\n    return (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.k)({\n      _nodes: [...nodeSet],\n      context: config.context || {},\n      children: {},\n      status: (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.l)(nodeSet, this.root) ? 'done' : config.status || 'active',\n      output: config.output,\n      error: config.error,\n      historyValue: config.historyValue\n    }, this);\n  }\n\n  /**\n   * Determines the next snapshot given the current `snapshot` and received\n   * `event`. Calculates a full macrostep from all microsteps.\n   *\n   * @param snapshot The current snapshot\n   * @param event The received event\n   */\n  transition(snapshot, event, actorScope) {\n    return (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.n)(snapshot, event, actorScope).snapshot;\n  }\n\n  /**\n   * Determines the next state given the current `state` and `event`. Calculates\n   * a microstep.\n   *\n   * @param state The current state\n   * @param event The received event\n   */\n  microstep(snapshot, event, actorScope) {\n    return (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.n)(snapshot, event, actorScope).microstates;\n  }\n  getTransitionData(snapshot, event) {\n    return (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.o)(this.root, snapshot.value, snapshot, event) || [];\n  }\n\n  /**\n   * The initial state _before_ evaluating any microsteps. This \"pre-initial\"\n   * state is provided to initial actions executed in the initial state.\n   */\n  getPreInitialState(actorScope, initEvent, internalQueue) {\n    const {\n      context\n    } = this.config;\n    const preInitial = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.k)({\n      context: typeof context !== 'function' && context ? context : {},\n      _nodes: [this.root],\n      children: {},\n      status: 'active'\n    }, this);\n    if (typeof context === 'function') {\n      const assignment = ({\n        spawn,\n        event,\n        self\n      }) => context({\n        spawn,\n        input: event.input,\n        self\n      });\n      return (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.p)(preInitial, initEvent, actorScope, [(0,_log_38475d87_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.a)(assignment)], internalQueue);\n    }\n    return preInitial;\n  }\n\n  /**\n   * Returns the initial `State` instance, with reference to `self` as an\n   * `ActorRef`.\n   */\n  getInitialSnapshot(actorScope, input) {\n    const initEvent = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.q)(input); // TODO: fix;\n    const internalQueue = [];\n    const preInitialState = this.getPreInitialState(actorScope, initEvent, internalQueue);\n    const nextState = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.s)([{\n      target: [...(0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.u)(this.root)],\n      source: this.root,\n      reenter: true,\n      actions: [],\n      eventType: null,\n      toJSON: null // TODO: fix\n    }], preInitialState, actorScope, initEvent, true, internalQueue);\n    const {\n      snapshot: macroState\n    } = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.n)(nextState, initEvent, actorScope, internalQueue);\n    return macroState;\n  }\n  start(snapshot) {\n    Object.values(snapshot.children).forEach(child => {\n      if (child.getSnapshot().status === 'active') {\n        child.start();\n      }\n    });\n  }\n  getStateNodeById(stateId) {\n    const fullPath = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.v)(stateId);\n    const relativePath = fullPath.slice(1);\n    const resolvedStateId = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.w)(fullPath[0]) ? fullPath[0].slice(STATE_IDENTIFIER.length) : fullPath[0];\n    const stateNode = this.idMap.get(resolvedStateId);\n    if (!stateNode) {\n      throw new Error(`Child state node '#${resolvedStateId}' does not exist on machine '${this.id}'`);\n    }\n    return (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.x)(stateNode, relativePath);\n  }\n  get definition() {\n    return this.root.definition;\n  }\n  toJSON() {\n    return this.definition;\n  }\n  getPersistedSnapshot(snapshot, options) {\n    return (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.y)(snapshot, options);\n  }\n  restoreSnapshot(snapshot, _actorScope) {\n    const children = {};\n    const snapshotChildren = snapshot.children;\n    Object.keys(snapshotChildren).forEach(actorId => {\n      const actorData = snapshotChildren[actorId];\n      const childState = actorData.snapshot;\n      const src = actorData.src;\n      const logic = typeof src === 'string' ? (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.z)(this, src) : src;\n      if (!logic) {\n        return;\n      }\n      const actorRef = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(logic, {\n        id: actorId,\n        parent: _actorScope.self,\n        syncSnapshot: actorData.syncSnapshot,\n        snapshot: childState,\n        src,\n        systemId: actorData.systemId\n      });\n      children[actorId] = actorRef;\n    });\n    const restoredSnapshot = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.k)({\n      ...snapshot,\n      children,\n      _nodes: Array.from((0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.i)((0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.j)(this.root, snapshot.value)))\n    }, this);\n    let seen = new Set();\n    function reviveContext(contextPart, children) {\n      if (seen.has(contextPart)) {\n        return;\n      }\n      seen.add(contextPart);\n      for (let key in contextPart) {\n        const value = contextPart[key];\n        if (value && typeof value === 'object') {\n          if ('xstate$$type' in value && value.xstate$$type === _raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.$) {\n            contextPart[key] = children[value.id];\n            continue;\n          }\n          reviveContext(value, children);\n        }\n      }\n    }\n    reviveContext(restoredSnapshot.context, children);\n    return restoredSnapshot;\n  }\n}\n\n// this is not 100% accurate since we can't make parallel regions required in the result\n// `TTestValue` doesn't encode this information anyhow for us to be able to do that\n// this is fine for most practical use cases anyway though\n\n/**\n * Creates a state machine (statechart) with the given configuration.\n *\n * The state machine represents the pure logic of a state machine actor.\n *\n * @example\n *\n * ```ts\n * import { createMachine } from 'xstate';\n *\n * const lightMachine = createMachine({\n *   id: 'light',\n *   initial: 'green',\n *   states: {\n *     green: {\n *       on: {\n *         TIMER: { target: 'yellow' }\n *       }\n *     },\n *     yellow: {\n *       on: {\n *         TIMER: { target: 'red' }\n *       }\n *     },\n *     red: {\n *       on: {\n *         TIMER: { target: 'green' }\n *       }\n *     }\n *   }\n * });\n *\n * const lightActor = createActor(lightMachine);\n * lightActor.start();\n *\n * lightActor.send({ type: 'TIMER' });\n * ```\n *\n * @param config The state machine configuration.\n * @param options DEPRECATED: use `setup({ ... })` or `machine.provide({ ... })`\n *   to provide machine implementations instead.\n */\nfunction createMachine(config, implementations) {\n  return new StateMachine(config, implementations);\n}\n\n/** @internal */\nfunction createInertActorScope(actorLogic) {\n  const self = (0,_raise_5ea71f04_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(actorLogic);\n  const inertActorScope = {\n    self,\n    defer: () => {},\n    id: '',\n    logger: () => {},\n    sessionId: '',\n    stopChild: () => {},\n    system: self.system,\n    emit: () => {}\n  };\n  return inertActorScope;\n}\nfunction getInitialSnapshot(actorLogic, ...[input]) {\n  const actorScope = createInertActorScope(actorLogic);\n  return actorLogic.getInitialSnapshot(actorScope, input);\n}\n\n/**\n * Determines the next snapshot for the given `actorLogic` based on the given\n * `snapshot` and `event`.\n *\n * If the `snapshot` is `undefined`, the initial snapshot of the `actorLogic` is\n * used.\n *\n * @example\n *\n * ```ts\n * import { getNextSnapshot } from 'xstate';\n * import { trafficLightMachine } from './trafficLightMachine.ts';\n *\n * const nextSnapshot = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   undefined, // snapshot (or initial state if undefined)\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot.value);\n * // => 'yellow'\n *\n * const nextSnapshot2 = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   nextSnapshot, // snapshot\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot2.value);\n * // =>'red'\n * ```\n */\nfunction getNextSnapshot(actorLogic, snapshot, event) {\n  const inertActorScope = createInertActorScope(actorLogic);\n  inertActorScope.self._snapshot = snapshot;\n  return actorLogic.transition(snapshot, event, inertActorScope);\n}\n\n// at the moment we allow extra actors - ones that are not specified by `children`\n// this could be reconsidered in the future\n\nfunction setup({\n  schemas,\n  actors,\n  actions,\n  guards,\n  delays\n}) {\n  return {\n    createMachine: config => createMachine({\n      ...config,\n      schemas\n    }, {\n      actors,\n      actions,\n      guards,\n      delays\n    })\n  };\n}\n\nclass SimulatedClock {\n  constructor() {\n    this.timeouts = new Map();\n    this._now = 0;\n    this._id = 0;\n    this._flushing = false;\n    this._flushingInvalidated = false;\n  }\n  now() {\n    return this._now;\n  }\n  getId() {\n    return this._id++;\n  }\n  setTimeout(fn, timeout) {\n    this._flushingInvalidated = this._flushing;\n    const id = this.getId();\n    this.timeouts.set(id, {\n      start: this.now(),\n      timeout,\n      fn\n    });\n    return id;\n  }\n  clearTimeout(id) {\n    this._flushingInvalidated = this._flushing;\n    this.timeouts.delete(id);\n  }\n  set(time) {\n    if (this._now > time) {\n      throw new Error('Unable to travel back in time');\n    }\n    this._now = time;\n    this.flushTimeouts();\n  }\n  flushTimeouts() {\n    if (this._flushing) {\n      this._flushingInvalidated = true;\n      return;\n    }\n    this._flushing = true;\n    const sorted = [...this.timeouts].sort(([_idA, timeoutA], [_idB, timeoutB]) => {\n      const endA = timeoutA.start + timeoutA.timeout;\n      const endB = timeoutB.start + timeoutB.timeout;\n      return endB > endA ? -1 : 1;\n    });\n    for (const [id, timeout] of sorted) {\n      if (this._flushingInvalidated) {\n        this._flushingInvalidated = false;\n        this._flushing = false;\n        this.flushTimeouts();\n        return;\n      }\n      if (this.now() - timeout.start >= timeout.timeout) {\n        this.timeouts.delete(id);\n        timeout.fn.call(null);\n      }\n    }\n    this._flushing = false;\n  }\n  increment(ms) {\n    this._now += ms;\n    this.flushTimeouts();\n  }\n}\n\n/**\n * Returns a promise that resolves to the `output` of the actor when it is done.\n *\n * @example\n *\n * ```ts\n * const machine = createMachine({\n *   // ...\n *   output: {\n *     count: 42\n *   }\n * });\n *\n * const actor = createActor(machine);\n *\n * actor.start();\n *\n * const output = await toPromise(actor);\n *\n * console.log(output);\n * // logs { count: 42 }\n * ```\n */\nfunction toPromise(actor) {\n  return new Promise((resolve, reject) => {\n    actor.subscribe({\n      complete: () => {\n        resolve(actor.getSnapshot().output);\n      },\n      error: reject\n    });\n  });\n}\n\nconst defaultWaitForOptions = {\n  timeout: Infinity // much more than 10 seconds\n};\n\n/**\n * Subscribes to an actor ref and waits for its emitted value to satisfy a\n * predicate, and then resolves with that value. Will throw if the desired state\n * is not reached after an optional timeout. (defaults to Infinity).\n *\n * @example\n *\n * ```js\n * const state = await waitFor(someService, (state) => {\n *   return state.hasTag('loaded');\n * });\n *\n * state.hasTag('loaded'); // true\n * ```\n *\n * @param actorRef The actor ref to subscribe to\n * @param predicate Determines if a value matches the condition to wait for\n * @param options\n * @returns A promise that eventually resolves to the emitted value that matches\n *   the condition\n */\nfunction waitFor(actorRef, predicate, options) {\n  const resolvedOptions = {\n    ...defaultWaitForOptions,\n    ...options\n  };\n  return new Promise((res, rej) => {\n    const {\n      signal\n    } = resolvedOptions;\n    if (signal?.aborted) {\n      rej(signal.reason);\n      return;\n    }\n    let done = false;\n    if (resolvedOptions.timeout < 0) {\n      console.error('`timeout` passed to `waitFor` is negative and it will reject its internal promise immediately.');\n    }\n    const handle = resolvedOptions.timeout === Infinity ? undefined : setTimeout(() => {\n      dispose();\n      rej(new Error(`Timeout of ${resolvedOptions.timeout} ms exceeded`));\n    }, resolvedOptions.timeout);\n    const dispose = () => {\n      clearTimeout(handle);\n      done = true;\n      sub?.unsubscribe();\n      if (abortListener) {\n        signal.removeEventListener('abort', abortListener);\n      }\n    };\n    function checkEmitted(emitted) {\n      if (predicate(emitted)) {\n        dispose();\n        res(emitted);\n      }\n    }\n\n    /**\n     * If the `signal` option is provided, this will be the listener for its\n     * `abort` event\n     */\n    let abortListener;\n    let sub; // avoid TDZ when disposing synchronously\n\n    // See if the current snapshot already matches the predicate\n    checkEmitted(actorRef.getSnapshot());\n    if (done) {\n      return;\n    }\n\n    // only define the `abortListener` if the `signal` option is provided\n    if (signal) {\n      abortListener = () => {\n        dispose();\n        // XState does not \"own\" the signal, so we should reject with its reason (if any)\n        rej(signal.reason);\n      };\n      signal.addEventListener('abort', abortListener);\n    }\n    sub = actorRef.subscribe({\n      next: checkEmitted,\n      error: err => {\n        dispose();\n        rej(err);\n      },\n      complete: () => {\n        dispose();\n        rej(new Error(`Actor terminated without satisfying predicate`));\n      }\n    });\n    if (done) {\n      sub.unsubscribe();\n    }\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/compat/router.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/compat/router.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"useRouter\", ({\n    enumerable: true,\n    get: function() {\n        return useRouter;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nconst _routercontextsharedruntime = __webpack_require__(/*! ../../shared/lib/router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\");\nfunction useRouter() {\n    return (0, _react.useContext)(_routercontextsharedruntime.RouterContext);\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=router.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBhdC9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs2Q0FjZ0JBOzs7ZUFBQUE7OzttQ0FkVzt3REFDRztBQWF2QixTQUFTQTtJQUNkLE9BQU9DLENBQUFBLEdBQUFBLE9BQUFBLFVBQVUsRUFBQ0MsNEJBQUFBLGFBQWE7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9jbGllbnQvY29tcGF0L3JvdXRlci50cz9kMGExIl0sIm5hbWVzIjpbInVzZVJvdXRlciIsInVzZUNvbnRleHQiLCJSb3V0ZXJDb250ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/compat/router.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/image-component.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/client/image-component.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"Image\", ({\n    enumerable: true,\n    get: function() {\n        return Image;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _reactdom = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\"));\nconst _head = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../shared/lib/head */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/head.js\"));\nconst _getimgprops = __webpack_require__(/*! ../shared/lib/get-img-props */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js\");\nconst _imageconfig = __webpack_require__(/*! ../shared/lib/image-config */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\");\nconst _imageconfigcontextsharedruntime = __webpack_require__(/*! ../shared/lib/image-config-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js\");\nconst _warnonce = __webpack_require__(/*! ../shared/lib/utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nconst _routercontextsharedruntime = __webpack_require__(/*! ../shared/lib/router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\");\nconst _imageloader = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! next/dist/shared/lib/image-loader */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js\"));\n// This is replaced by webpack define plugin\nconst configEnv = {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":false,\"domains\":[],\"remotePatterns\":[{\"hostname\":\"images.pexels.com\"},{\"hostname\":\"res.cloudinary.com\"}]};\nif (typeof window === \"undefined\") {\n    globalThis.__NEXT_IMAGE_IMPORTED = true;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput) {\n    const src = img == null ? void 0 : img.src;\n    if (!img || img[\"data-loaded-src\"] === src) {\n        return;\n    }\n    img[\"data-loaded-src\"] = src;\n    const p = \"decode\" in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentElement || !img.isConnected) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder !== \"empty\") {\n            setBlurComplete(true);\n        }\n        if (onLoadRef == null ? void 0 : onLoadRef.current) {\n            // Since we don't have the SyntheticEvent here,\n            // we must create one with the same shape.\n            // See https://reactjs.org/docs/events.html\n            const event = new Event(\"load\");\n            Object.defineProperty(event, \"target\", {\n                writable: false,\n                value: img\n            });\n            let prevented = false;\n            let stopped = false;\n            onLoadRef.current({\n                ...event,\n                nativeEvent: event,\n                currentTarget: img,\n                target: img,\n                isDefaultPrevented: ()=>prevented,\n                isPropagationStopped: ()=>stopped,\n                persist: ()=>{},\n                preventDefault: ()=>{\n                    prevented = true;\n                    event.preventDefault();\n                },\n                stopPropagation: ()=>{\n                    stopped = true;\n                    event.stopPropagation();\n                }\n            });\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            onLoadingCompleteRef.current(img);\n        }\n        if (true) {\n            const origSrc = new URL(src, \"http://n\").searchParams.get(\"url\") || src;\n            if (img.getAttribute(\"data-nimg\") === \"fill\") {\n                if (!unoptimized && (!sizesInput || sizesInput === \"100vw\")) {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        if (sizesInput === \"100vw\") {\n                            (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" prop and \"sizes\" prop of \"100vw\", but image is not rendered at full viewport width. Please adjust \"sizes\" to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');\n                        } else {\n                            (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');\n                        }\n                    }\n                }\n                if (img.parentElement) {\n                    const { position } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        \"absolute\",\n                        \"fixed\",\n                        \"relative\"\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" and parent element with invalid \"position\". Provided \"' + position + '\" should be one of ' + valid.map(String).join(\",\") + \".\");\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.');\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n            const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles \\'width: \"auto\"\\' or \\'height: \"auto\"\\' to maintain the aspect ratio.');\n            }\n        }\n    });\n}\nfunction getDynamicProps(fetchPriority) {\n    if (Boolean(_react.use)) {\n        // In React 19.0.0 or newer, we must use camelCase\n        // prop to avoid \"Warning: Invalid DOM property\".\n        // See https://github.com/facebook/react/pull/25927\n        return {\n            fetchPriority\n        };\n    }\n    // In React 18.2.0 or older, we must use lowercase prop\n    // to avoid \"Warning: Invalid DOM property\".\n    return {\n        fetchpriority: fetchPriority\n    };\n}\nconst ImageElement = /*#__PURE__*/ (0, _react.forwardRef)((param, forwardedRef)=>{\n    let { src, srcSet, sizes, height, width, decoding, className, style, fetchPriority, placeholder, loading, unoptimized, fill, onLoadRef, onLoadingCompleteRef, setBlurComplete, setShowAltText, sizesInput, onLoad, onError, ...rest } = param;\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(\"img\", {\n        ...rest,\n        ...getDynamicProps(fetchPriority),\n        // It's intended to keep `loading` before `src` because React updates\n        // props in order which causes Safari/Firefox to not lazy load properly.\n        // See https://github.com/facebook/react/issues/25883\n        loading: loading,\n        width: width,\n        height: height,\n        decoding: decoding,\n        \"data-nimg\": fill ? \"fill\" : \"1\",\n        className: className,\n        style: style,\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        sizes: sizes,\n        srcSet: srcSet,\n        src: src,\n        ref: (0, _react.useCallback)((img)=>{\n            if (forwardedRef) {\n                if (typeof forwardedRef === \"function\") forwardedRef(img);\n                else if (typeof forwardedRef === \"object\") {\n                    // @ts-ignore - .current is read only it's usually assigned by react internally\n                    forwardedRef.current = img;\n                }\n            }\n            if (!img) {\n                return;\n            }\n            if (onError) {\n                // If the image has an error before react hydrates, then the error is lost.\n                // The workaround is to wait until the image is mounted which is after hydration,\n                // then we set the src again to trigger the error handler (if there was an error).\n                // eslint-disable-next-line no-self-assign\n                img.src = img.src;\n            }\n            if (true) {\n                if (!src) {\n                    console.error('Image is missing required \"src\" property:', img);\n                }\n                if (img.getAttribute(\"alt\") === null) {\n                    console.error('Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.');\n                }\n            }\n            if (img.complete) {\n                handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput);\n            }\n        }, [\n            src,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            onError,\n            unoptimized,\n            sizesInput,\n            forwardedRef\n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput);\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder !== \"empty\") {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    });\n});\nfunction ImagePreload(param) {\n    let { isAppRouter, imgAttributes } = param;\n    const opts = {\n        as: \"image\",\n        imageSrcSet: imgAttributes.srcSet,\n        imageSizes: imgAttributes.sizes,\n        crossOrigin: imgAttributes.crossOrigin,\n        referrerPolicy: imgAttributes.referrerPolicy,\n        ...getDynamicProps(imgAttributes.fetchPriority)\n    };\n    if (isAppRouter && _reactdom.default.preload) {\n        // See https://github.com/facebook/react/pull/26940\n        _reactdom.default.preload(imgAttributes.src, opts);\n        return null;\n    }\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_head.default, {\n        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(\"link\", {\n            rel: \"preload\",\n            // Note how we omit the `href` attribute, as it would only be relevant\n            // for browsers that do not support `imagesrcset`, and in those cases\n            // it would cause the incorrect image to be preloaded.\n            //\n            // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n            href: imgAttributes.srcSet ? undefined : imgAttributes.src,\n            ...opts\n        }, \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes)\n    });\n}\n_c = ImagePreload;\nconst Image = /*#__PURE__*/ (0, _react.forwardRef)((props, forwardedRef)=>{\n    const pagesRouter = (0, _react.useContext)(_routercontextsharedruntime.RouterContext);\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter;\n    const configContext = (0, _react.useContext)(_imageconfigcontextsharedruntime.ImageConfigContext);\n    const config = (0, _react.useMemo)(()=>{\n        const c = configEnv || configContext || _imageconfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return {\n            ...c,\n            allSizes,\n            deviceSizes\n        };\n    }, [\n        configContext\n    ]);\n    const { onLoad, onLoadingComplete } = props;\n    const onLoadRef = (0, _react.useRef)(onLoad);\n    (0, _react.useEffect)(()=>{\n        onLoadRef.current = onLoad;\n    }, [\n        onLoad\n    ]);\n    const onLoadingCompleteRef = (0, _react.useRef)(onLoadingComplete);\n    (0, _react.useEffect)(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const [blurComplete, setBlurComplete] = (0, _react.useState)(false);\n    const [showAltText, setShowAltText] = (0, _react.useState)(false);\n    const { props: imgAttributes, meta: imgMeta } = (0, _getimgprops.getImgProps)(props, {\n        defaultLoader: _imageloader.default,\n        imgConf: config,\n        blurComplete,\n        showAltText\n    });\n    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0, _jsxruntime.jsx)(ImageElement, {\n                ...imgAttributes,\n                unoptimized: imgMeta.unoptimized,\n                placeholder: imgMeta.placeholder,\n                fill: imgMeta.fill,\n                onLoadRef: onLoadRef,\n                onLoadingCompleteRef: onLoadingCompleteRef,\n                setBlurComplete: setBlurComplete,\n                setShowAltText: setShowAltText,\n                sizesInput: props.sizes,\n                ref: forwardedRef\n            }),\n            imgMeta.priority ? /*#__PURE__*/ (0, _jsxruntime.jsx)(ImagePreload, {\n                isAppRouter: isAppRouter,\n                imgAttributes: imgAttributes\n            }) : null\n        ]\n    });\n});\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=image-component.js.map\nvar _c;\n$RefreshReg$(_c, \"ImagePreload\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/image-component.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"AmpStateContext\", ({\n    enumerable: true,\n    get: function() {\n        return AmpStateContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst AmpStateContext = _react.default.createContext({});\nif (true) {\n    AmpStateContext.displayName = \"AmpStateContext\";\n} //# sourceMappingURL=amp-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9hbXAtY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7O21EQUVhQTs7O2VBQUFBOzs7OzRFQUZLO0FBRVgsTUFBTUEsa0JBQXNDQyxPQUFBQSxPQUFLLENBQUNDLGFBQWEsQ0FBQyxDQUFDO0FBRXhFLElBQUlDLElBQXlCLEVBQWM7SUFDekNILGdCQUFnQkksV0FBVyxHQUFHO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9hbXAtY29udGV4dC5zaGFyZWQtcnVudGltZS50cz85NjQxIl0sIm5hbWVzIjpbIkFtcFN0YXRlQ29udGV4dCIsIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInByb2Nlc3MiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-mode.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/amp-mode.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"isInAmpMode\", ({\n    enumerable: true,\n    get: function() {\n        return isInAmpMode;\n    }\n}));\nfunction isInAmpMode(param) {\n    let { ampFirst = false, hybrid = false, hasQuery = false } = param === void 0 ? {} : param;\n    return ampFirst || hybrid && hasQuery;\n} //# sourceMappingURL=amp-mode.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9hbXAtbW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7OytDQUFnQkE7OztlQUFBQTs7O0FBQVQsU0FBU0EsWUFBWUMsS0FBQTtJQUFBLE1BQzFCQyxXQUFXLEtBQUssRUFDaEJDLFNBQVMsS0FBSyxFQUNkQyxXQUFXLEtBQUssRUFDakIsR0FKMkJILFVBQUEsU0FJeEIsQ0FBQyxJQUp1QkE7SUFLMUIsT0FBT0MsWUFBYUMsVUFBVUM7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9zaGFyZWQvbGliL2FtcC1tb2RlLnRzP2NlMDQiXSwibmFtZXMiOlsiaXNJbkFtcE1vZGUiLCJwYXJhbSIsImFtcEZpcnN0IiwiaHlicmlkIiwiaGFzUXVlcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-mode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/get-img-props.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getImgProps\", ({\n    enumerable: true,\n    get: function() {\n        return getImgProps;\n    }\n}));\nconst _warnonce = __webpack_require__(/*! ./utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nconst _imageblursvg = __webpack_require__(/*! ./image-blur-svg */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-blur-svg.js\");\nconst _imageconfig = __webpack_require__(/*! ./image-config */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\");\nconst VALID_LOADING_VALUES = [\n    \"lazy\",\n    \"eager\",\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nconst allImgs = new Map();\nlet perfObserver;\nfunction getInt(x) {\n    if (typeof x === \"undefined\") {\n        return x;\n    }\n    if (typeof x === \"number\") {\n        return Number.isFinite(x) ? x : NaN;\n    }\n    if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\nfunction getWidths(param, width, sizes) {\n    let { deviceSizes, allSizes } = param;\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: \"w\"\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: \"w\"\n        };\n    }\n    if (typeof width !== \"number\") {\n        return {\n            widths: deviceSizes,\n            kind: \"w\"\n        };\n    }\n    const widths = [\n        ...new Set(// > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))\n    ];\n    return {\n        widths,\n        kind: \"x\"\n    };\n}\nfunction generateImgAttrs(param) {\n    let { config, src, unoptimized, width, quality, sizes, loader } = param;\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths, kind } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n        srcSet: widths.map((w, i)=>loader({\n                config,\n                src,\n                quality,\n                width: w\n            }) + \" \" + (kind === \"w\" ? w : i + 1) + kind).join(\", \"),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getImgProps(param, _state) {\n    let { src, sizes, unoptimized = false, priority = false, loading, className, quality, width, height, fill = false, style, overrideSrc, onLoad, onLoadingComplete, placeholder = \"empty\", blurDataURL, fetchPriority, layout, objectFit, objectPosition, lazyBoundary, lazyRoot, ...rest } = param;\n    const { imgConf, showAltText, blurComplete, defaultLoader } = _state;\n    let config;\n    let c = imgConf || _imageconfig.imageConfigDefault;\n    if (\"allSizes\" in c) {\n        config = c;\n    } else {\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        config = {\n            ...c,\n            allSizes,\n            deviceSizes\n        };\n    }\n    if (typeof defaultLoader === \"undefined\") {\n        throw new Error(\"images.loaderFile detected but the file is missing default export.\\nRead more: https://nextjs.org/docs/messages/invalid-images-config\");\n    }\n    let loader = rest.loader || defaultLoader;\n    // Remove property so it's not spread on <img> element\n    delete rest.loader;\n    delete rest.srcSet;\n    // This special value indicates that the user\n    // didn't define a \"loader\" prop or \"loader\" config.\n    const isDefaultLoader = \"__next_img_default\" in loader;\n    if (isDefaultLoader) {\n        if (config.loader === \"custom\") {\n            throw new Error('Image with src \"' + src + '\" is missing \"loader\" prop.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader\");\n        }\n    } else {\n        // The user defined a \"loader\" prop or config.\n        // Since the config object is internal only, we\n        // must not pass it to the user-defined \"loader\".\n        const customImageLoader = loader;\n        loader = (obj)=>{\n            const { config: _, ...opts } = obj;\n            return customImageLoader(opts);\n        };\n    }\n    if (layout) {\n        if (layout === \"fill\") {\n            fill = true;\n        }\n        const layoutToStyle = {\n            intrinsic: {\n                maxWidth: \"100%\",\n                height: \"auto\"\n            },\n            responsive: {\n                width: \"100%\",\n                height: \"auto\"\n            }\n        };\n        const layoutToSizes = {\n            responsive: \"100vw\",\n            fill: \"100vw\"\n        };\n        const layoutStyle = layoutToStyle[layout];\n        if (layoutStyle) {\n            style = {\n                ...style,\n                ...layoutStyle\n            };\n        }\n        const layoutSizes = layoutToSizes[layout];\n        if (layoutSizes && !sizes) {\n            sizes = layoutSizes;\n        }\n    }\n    let staticSrc = \"\";\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    let blurWidth;\n    let blurHeight;\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received \" + JSON.stringify(staticImageData));\n        }\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received \" + JSON.stringify(staticImageData));\n        }\n        blurWidth = staticImageData.blurWidth;\n        blurHeight = staticImageData.blurHeight;\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        if (!fill) {\n            if (!widthInt && !heightInt) {\n                widthInt = staticImageData.width;\n                heightInt = staticImageData.height;\n            } else if (widthInt && !heightInt) {\n                const ratio = widthInt / staticImageData.width;\n                heightInt = Math.round(staticImageData.height * ratio);\n            } else if (!widthInt && heightInt) {\n                const ratio = heightInt / staticImageData.height;\n                widthInt = Math.round(staticImageData.width * ratio);\n            }\n        }\n    }\n    src = typeof src === \"string\" ? src : staticSrc;\n    let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n    if (!src || src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n        // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (config.unoptimized) {\n        unoptimized = true;\n    }\n    if (isDefaultLoader && src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n        // Special case to make svg serve as-is to avoid proxying\n        // through the built-in Image Optimization API.\n        unoptimized = true;\n    }\n    if (priority) {\n        fetchPriority = \"high\";\n    }\n    const qualityInt = getInt(quality);\n    if (true) {\n        if (config.output === \"export\" && isDefaultLoader && !unoptimized) {\n            throw new Error(\"Image Optimization using the default loader is not compatible with `{ output: 'export' }`.\\n  Possible solutions:\\n    - Remove `{ output: 'export' }` and run \\\"next start\\\" to run server mode including the Image Optimization API.\\n    - Configure `{ images: { unoptimized: true } }` in `next.config.js` to disable the Image Optimization API.\\n  Read more: https://nextjs.org/docs/messages/export-image-api\");\n        }\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error('Image with src \"' + src + '\" has both \"width\" and \"fill\" properties. Only one should be used.');\n                }\n                if (height) {\n                    throw new Error('Image with src \"' + src + '\" has both \"height\" and \"fill\" properties. Only one should be used.');\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.');\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.');\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.');\n                }\n            } else {\n                if (typeof widthInt === \"undefined\") {\n                    throw new Error('Image with src \"' + src + '\" is missing required \"width\" property.');\n                } else if (isNaN(widthInt)) {\n                    throw new Error('Image with src \"' + src + '\" has invalid \"width\" property. Expected a numeric value in pixels but received \"' + width + '\".');\n                }\n                if (typeof heightInt === \"undefined\") {\n                    throw new Error('Image with src \"' + src + '\" is missing required \"height\" property.');\n                } else if (isNaN(heightInt)) {\n                    throw new Error('Image with src \"' + src + '\" has invalid \"height\" property. Expected a numeric value in pixels but received \"' + height + '\".');\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error('Image with src \"' + src + '\" has invalid \"loading\" property. Provided \"' + loading + '\" should be one of ' + VALID_LOADING_VALUES.map(String).join(\",\") + \".\");\n        }\n        if (priority && loading === \"lazy\") {\n            throw new Error('Image with src \"' + src + '\" has both \"priority\" and \"loading=\\'lazy\\'\" properties. Only one should be used.');\n        }\n        if (placeholder !== \"empty\" && placeholder !== \"blur\" && !placeholder.startsWith(\"data:image/\")) {\n            throw new Error('Image with src \"' + src + '\" has invalid \"placeholder\" property \"' + placeholder + '\".');\n        }\n        if (placeholder !== \"empty\") {\n            if (widthInt && heightInt && widthInt * heightInt < 1600) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is smaller than 40x40. Consider removing the \"placeholder\" property to improve performance.');\n            }\n        }\n        if (placeholder === \"blur\" && !blurDataURL) {\n            const VALID_BLUR_EXT = [\n                \"jpeg\",\n                \"png\",\n                \"webp\",\n                \"avif\"\n            ] // should match next-image-loader\n            ;\n            throw new Error('Image with src \"' + src + '\" has \"placeholder=\\'blur\\'\" property but is missing the \"blurDataURL\" property.\\n        Possible solutions:\\n          - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\\n          - Change the \"src\" property to a static import with one of the supported file types: ' + VALID_BLUR_EXT.join(\",\") + ' (animated images not supported)\\n          - Remove the \"placeholder\" property, effectively no blur effect\\n        Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url');\n        }\n        if (\"ref\" in rest) {\n            (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using unsupported \"ref\" property. Consider using the \"onLoad\" property instead.');\n        }\n        if (!unoptimized && !isDefaultLoader) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width\");\n            }\n        }\n        if (onLoadingComplete) {\n            (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using deprecated \"onLoadingComplete\" property. Please use the \"onLoad\" property instead.');\n        }\n        for (const [legacyKey, legacyValue] of Object.entries({\n            layout,\n            objectFit,\n            objectPosition,\n            lazyBoundary,\n            lazyRoot\n        })){\n            if (legacyValue) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has legacy prop \"' + legacyKey + '\". Did you forget to run the codemod?' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13\");\n            }\n        }\n        if (typeof window !== \"undefined\" && !perfObserver && window.PerformanceObserver) {\n            perfObserver = new PerformanceObserver((entryList)=>{\n                for (const entry of entryList.getEntries()){\n                    var _entry_element;\n                    // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n                    const imgSrc = (entry == null ? void 0 : (_entry_element = entry.element) == null ? void 0 : _entry_element.src) || \"\";\n                    const lcpImage = allImgs.get(imgSrc);\n                    if (lcpImage && !lcpImage.priority && lcpImage.placeholder === \"empty\" && !lcpImage.src.startsWith(\"data:\") && !lcpImage.src.startsWith(\"blob:\")) {\n                        // https://web.dev/lcp/#measure-lcp-in-javascript\n                        (0, _warnonce.warnOnce)('Image with src \"' + lcpImage.src + '\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.' + \"\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority\");\n                    }\n                }\n            });\n            try {\n                perfObserver.observe({\n                    type: \"largest-contentful-paint\",\n                    buffered: true\n                });\n            } catch (err) {\n                // Log error but don't crash the app\n                console.error(err);\n            }\n        }\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        objectFit,\n        objectPosition\n    } : {}, showAltText ? {} : {\n        color: \"transparent\"\n    }, style);\n    const backgroundImage = !blurComplete && placeholder !== \"empty\" ? placeholder === \"blur\" ? 'url(\"data:image/svg+xml;charset=utf-8,' + (0, _imageblursvg.getImageBlurSvg)({\n        widthInt,\n        heightInt,\n        blurWidth,\n        blurHeight,\n        blurDataURL: blurDataURL || \"\",\n        objectFit: imgStyle.objectFit\n    }) + '\")' : 'url(\"' + placeholder + '\")' // assume `data:image/`\n     : null;\n    let placeholderStyle = backgroundImage ? {\n        backgroundSize: imgStyle.objectFit || \"cover\",\n        backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundImage\n    } : {};\n    if (true) {\n        if (placeholderStyle.backgroundImage && placeholder === \"blur\" && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n            // During `next dev`, we don't want to generate blur placeholders with webpack\n            // because it can delay starting the dev server. Instead, `next-image-loader.js`\n            // will inline a special url to lazily generate the blur placeholder at request time.\n            placeholderStyle.backgroundImage = 'url(\"' + blurDataURL + '\")';\n        }\n    }\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    if (true) {\n        if (typeof window !== \"undefined\") {\n            let fullUrl;\n            try {\n                fullUrl = new URL(imgAttributes.src);\n            } catch (e) {\n                fullUrl = new URL(imgAttributes.src, window.location.href);\n            }\n            allImgs.set(fullUrl.href, {\n                src,\n                priority,\n                placeholder\n            });\n        }\n    }\n    const props = {\n        ...rest,\n        loading: isLazy ? \"lazy\" : loading,\n        fetchPriority,\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        className,\n        style: {\n            ...imgStyle,\n            ...placeholderStyle\n        },\n        sizes: imgAttributes.sizes,\n        srcSet: imgAttributes.srcSet,\n        src: overrideSrc || imgAttributes.src\n    };\n    const meta = {\n        unoptimized,\n        priority,\n        placeholder,\n        fill\n    };\n    return {\n        props,\n        meta\n    };\n} //# sourceMappingURL=get-img-props.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/head.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/head.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    default: function() {\n        return _default;\n    },\n    defaultHead: function() {\n        return defaultHead;\n    }\n});\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _sideeffect = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./side-effect */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/side-effect.js\"));\nconst _ampcontextsharedruntime = __webpack_require__(/*! ./amp-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js\");\nconst _headmanagercontextsharedruntime = __webpack_require__(/*! ./head-manager-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.js\");\nconst _ampmode = __webpack_require__(/*! ./amp-mode */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-mode.js\");\nconst _warnonce = __webpack_require__(/*! ./utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nfunction defaultHead(inAmpMode) {\n    if (inAmpMode === void 0) inAmpMode = false;\n    const head = [\n        /*#__PURE__*/ (0, _jsxruntime.jsx)(\"meta\", {\n            charSet: \"utf-8\"\n        })\n    ];\n    if (!inAmpMode) {\n        head.push(/*#__PURE__*/ (0, _jsxruntime.jsx)(\"meta\", {\n            name: \"viewport\",\n            content: \"width=device-width\"\n        }));\n    }\n    return head;\n}\nfunction onlyReactElement(list, child) {\n    // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n    if (typeof child === \"string\" || typeof child === \"number\") {\n        return list;\n    }\n    // Adds support for React.Fragment\n    if (child.type === _react.default.Fragment) {\n        return list.concat(_react.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild)=>{\n            if (typeof fragmentChild === \"string\" || typeof fragmentChild === \"number\") {\n                return fragmentList;\n            }\n            return fragmentList.concat(fragmentChild);\n        }, []));\n    }\n    return list.concat(child);\n}\nconst METATYPES = [\n    \"name\",\n    \"httpEquiv\",\n    \"charSet\",\n    \"itemProp\"\n];\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/ function unique() {\n    const keys = new Set();\n    const tags = new Set();\n    const metaTypes = new Set();\n    const metaCategories = {};\n    return (h)=>{\n        let isUnique = true;\n        let hasKey = false;\n        if (h.key && typeof h.key !== \"number\" && h.key.indexOf(\"$\") > 0) {\n            hasKey = true;\n            const key = h.key.slice(h.key.indexOf(\"$\") + 1);\n            if (keys.has(key)) {\n                isUnique = false;\n            } else {\n                keys.add(key);\n            }\n        }\n        // eslint-disable-next-line default-case\n        switch(h.type){\n            case \"title\":\n            case \"base\":\n                if (tags.has(h.type)) {\n                    isUnique = false;\n                } else {\n                    tags.add(h.type);\n                }\n                break;\n            case \"meta\":\n                for(let i = 0, len = METATYPES.length; i < len; i++){\n                    const metatype = METATYPES[i];\n                    if (!h.props.hasOwnProperty(metatype)) continue;\n                    if (metatype === \"charSet\") {\n                        if (metaTypes.has(metatype)) {\n                            isUnique = false;\n                        } else {\n                            metaTypes.add(metatype);\n                        }\n                    } else {\n                        const category = h.props[metatype];\n                        const categories = metaCategories[metatype] || new Set();\n                        if ((metatype !== \"name\" || !hasKey) && categories.has(category)) {\n                            isUnique = false;\n                        } else {\n                            categories.add(category);\n                            metaCategories[metatype] = categories;\n                        }\n                    }\n                }\n                break;\n        }\n        return isUnique;\n    };\n}\n/**\n *\n * @param headChildrenElements List of children of <Head>\n */ function reduceComponents(headChildrenElements, props) {\n    const { inAmpMode } = props;\n    return headChildrenElements.reduce(onlyReactElement, []).reverse().concat(defaultHead(inAmpMode).reverse()).filter(unique()).reverse().map((c, i)=>{\n        const key = c.key || i;\n        if (false) {}\n        if (true) {\n            // omit JSON-LD structured data snippets from the warning\n            if (c.type === \"script\" && c.props[\"type\"] !== \"application/ld+json\") {\n                const srcMessage = c.props[\"src\"] ? '<script> tag with src=\"' + c.props[\"src\"] + '\"' : \"inline <script>\";\n                (0, _warnonce.warnOnce)(\"Do not add <script> tags using next/head (see \" + srcMessage + \"). Use next/script instead. \\nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component\");\n            } else if (c.type === \"link\" && c.props[\"rel\"] === \"stylesheet\") {\n                (0, _warnonce.warnOnce)('Do not add stylesheets using next/head (see <link rel=\"stylesheet\"> tag with href=\"' + c.props[\"href\"] + '\"). Use Document instead. \\nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component');\n            }\n        }\n        return /*#__PURE__*/ _react.default.cloneElement(c, {\n            key\n        });\n    });\n}\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */ function Head(param) {\n    let { children } = param;\n    const ampState = (0, _react.useContext)(_ampcontextsharedruntime.AmpStateContext);\n    const headManager = (0, _react.useContext)(_headmanagercontextsharedruntime.HeadManagerContext);\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_sideeffect.default, {\n        reduceComponentsToState: reduceComponents,\n        headManager: headManager,\n        inAmpMode: (0, _ampmode.isInAmpMode)(ampState),\n        children: children\n    });\n}\n_c = Head;\nconst _default = Head;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=head.js.map\nvar _c;\n$RefreshReg$(_c, \"Head\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9oZWFkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O1FBcU1BQSxTQUFtQjs7O0lBeExIQztpQkFBQUE7Ozs7Ozs7OzJEQVRnQkMsQ0FBQSxDQUFBQyxtQkFBQUEsQ0FBQTs7eUNBRUpBLG1CQUFBQSxDQUFBOztBQU9yQixNQUFBQyxZQUFTSCxtQkFBQUEsQ0FBWUkscUdBQUFBO1NBQUFBLFlBQUFBLFNBQUFBO0lBQzFCLElBQUFBLGNBQWEsUUFBQUEsWUFBQTs7bUJBQU9DLEdBQVEsSUFBQUMsWUFBQUMsR0FBQTs7UUFBVztLQUN2QztRQUNFQyxDQUFBQSxXQUFTO2FBQU9DLElBQUFBLENBQUssa0JBQUFILFlBQUFDLEdBQUE7WUFBV0csTUFBQUE7O1FBQ2xDO0lBQ0E7SUFDRixPQUFBRjtBQUVBO1NBSUVHLGlCQUFBQyxJQUFBLEVBQUFDLEtBQUE7SUFDQSw4RkFBNEQ7UUFDMUQsT0FBT0QsVUFBQUEsWUFBQUEsT0FBQUEsVUFBQUEsVUFBQUE7UUFDVCxPQUFBQTtJQUNBO0lBQ0Esa0NBQXlCRTtRQUN2QkQsTUFBQUUsSUFBT0gsS0FBS0ksT0FDVkMsT0FBQSxDQUFBSCxRQUFBO1FBQ0FJLE9BQUFBLEtBQUFBLE1BQU1DLENBRUpDLE9BQ0VDLE9BQUFBLENBQ0FDLFFBQUFBLENBQUFBLE9BQUFBLENBQUFBLE1BQUFBLEtBQUFBLENBQUFBLFFBQUFBLEVBQUFBLE1BQUFBLGdCQUdTQTtnQkFHUCxPQUFPRCxrQkFBQUEsWUFBQUEsT0FBQUEsa0JBQUFBLFVBQUFBO2dCQUNULE9BQUFBO1lBQ0E7WUFFRixPQUFFQSxhQUFBTCxNQUFBLENBQUFNO1FBR1I7SUFDQTtJQUNGLE9BQUFWLEtBQUFJLE1BQUEsQ0FBQUg7QUFFQTtNQUFtQlUsWUFBQTtJQUFRO0lBQWE7SUFBVztJQUFXO0NBRTlEOzs7OztZQU1RQztJQUNOLE1BQU1DLE9BQU8sSUFBSUM7SUFDakIsTUFBTUMsT0FBQUEsSUFBQUE7SUFDTixNQUFNQyxZQUFBQSxJQUFBQTtJQUVOLE1BQUFBLGlCQUFRQyxDQUFBQTtXQUNOLENBQUlDO1FBQ0osSUFBSUMsV0FBUztRQUViLElBQUlGLFNBQVM7WUFDWEUsRUFBQUEsR0FBQUEsSUFBUyxPQUFBRixFQUFBRyxHQUFBLGlCQUFBSCxFQUFBRyxHQUFBLENBQUFDLE9BQUE7WUFDVEYsU0FBTUM7WUFDTixNQUFJUixNQUFRSyxFQUFDRyxHQUFBQSxDQUFBQSxLQUFNLENBQUFILEVBQUFHLEdBQUEsQ0FBQUMsT0FBQTtnQkFDakJILEtBQUFBLEdBQUFBLENBQUFBLE1BQVc7Z0JBQ2JBLFdBQU87bUJBQ0xOO2dCQUNGQSxLQUFBVSxHQUFBLENBQUFGO1lBQ0Y7UUFFQTtRQUNBLHdDQUFjO2VBQ1pILEVBQUtkLElBQUE7WUFDTCxLQUFLO2lCQUNIO29CQUNFZSxLQUFBQSxHQUFBQSxDQUFBQSxFQUFXZixJQUFBO29CQUNiZSxXQUFPO3VCQUNMTDtvQkFDRkEsS0FBQVMsR0FBQSxDQUFBTCxFQUFBZCxJQUFBO2dCQUNBO2dCQUNGO2lCQUNFO29CQUNFLElBQUFvQixJQUFNQyxHQUFBQSxNQUFXYixVQUFVWSxNQUFFLEVBQUFBLElBQUFFLEtBQUFGLElBQUE7b0JBQzdCLE1BQUtOLFdBQVFTLFNBQUFBLENBQWNILEVBQUNDO29CQUU1QixJQUFJQSxDQUFBQSxFQUFBQSxLQUFBQSxDQUFBQSxjQUFhLENBQVdBLFdBQUE7d0JBQzFCQSxhQUFJVCxXQUFjUzs0QkFDaEJOLFVBQUFBLEdBQVcsQ0FBQU0sV0FBQTs0QkFDYk4sV0FBTzsrQkFDTEg7NEJBQ0ZBLFVBQUFPLEdBQUEsQ0FBQUU7d0JBQ0Y7MkJBQ0U7d0JBQ0EsTUFBTUcsV0FBQUEsRUFBYVgsS0FBQUEsQ0FBQUEsU0FBZVE7d0JBQ2xDLE1BQUtBLGFBQWFSLGNBQVdHLENBQUFBLFNBQVdRLElBQUFBLElBQVdDOzRCQUNqRFYsQ0FBQUEsYUFBVyxXQUFBQyxNQUFBLEtBQUFRLFdBQUFDLEdBQUEsQ0FBQUMsV0FBQTs0QkFDYlgsV0FBTzsrQkFDTFM7NEJBQ0FYLFdBQUFBLEdBQWMsQ0FBQ1E7NEJBQ2pCUixjQUFBLENBQUFRLFNBQUEsR0FBQUc7d0JBQ0Y7b0JBQ0Y7Z0JBQ0E7Z0JBQ0o7UUFFQTtRQUNGLE9BQUFUO0lBQ0Y7QUFFQTs7OztJQVFFLFNBQVExQixpQkFBY3NDLG9CQUFBQSxFQUFBQSxLQUFBQTtJQUN0QixRQUFPQyxTQUFBQSxFQUFBQSxHQUFBQTtXQU9IQSxxQkFBcUJSLE1BQUFBLENBQUFBLGtCQUFBQSxFQUFBQSxFQUFBQSxPQUFBQSxHQUFBQSxNQUFBQSxDQUFBQSxZQUFBQSxXQUFBQSxPQUFBQSxJQUFBQSxNQUFBQSxDQUFBQSxVQUFBQSxPQUFBQSxHQUFBQSxHQUFBQSxDQUFBQSxDQUFBQSxHQUFBQTtRQUNyQixNQUNFUyxNQUFRQyxFQUFBQSxHQUFJQyxJQUFBQTtZQUlaRixLQUdFeEMsRUFBQSxFQWVKO1lBQ0V3QyxJQUFBO1lBQ0EseURBQStDO2dCQUM3Q0csRUFBQWhDLElBQU13QyxLQUFBQSxZQUFlYixFQUFBQSxLQUFNLFFBQ3RCLDRCQUEyQkE7Z0JBRWhDYyxNQUFBQSxhQUFBQSxFQUFBQSxLQUNHLHNDQUFBVCxFQUFBTCxLQUFBLE9BQWdEYSxHQUFBQSxNQUFBQTtnQkFFckQsSUFBT3BELFVBQVVxRCxRQUFLLHFEQUEyQ0QsYUFBQTttQkFDL0RDLElBQUFBLEVBQUFBLElBQUFBLEtBQUFBLFVBQ0dULEVBQUFMLEtBQUE7Z0JBRUwsSUFBQXZDLFVBQUFxRCxRQUFBLDBGQUFBVCxFQUFBTCxLQUFBO1lBQ0Y7UUFDQTtlQUErQlYsV0FBQUEsR0FBQUEsT0FBQUEsT0FBQUEsQ0FBQUEsWUFBQUEsQ0FBQUEsR0FBQUE7WUFBSUE7UUFDckM7SUFDSjtBQUVBOzs7O0lBSWMsU0FBRXlCLEtBQVFDLEtBQVY7SUFDWixNQUFNQyxRQUFBQSxFQUFBQSxHQUFXQztJQUNqQixNQUFNQyxXQUFBQSxDQUFBQSxHQUFjRCxPQUFBQSxVQUFBQSxFQUFBQSx5QkFBV0UsZUFBQUE7SUFDL0IsTUFBQUQsY0FBQSxDQUNFLEdBQUF6QyxPQUFBd0MsVUFBQSxFQUFDRyxpQ0FBTUQsa0JBQUE7V0FDTEUsV0FBQUEsR0FBQUEsQ0FBQUEsR0FBQUEsWUFBeUJDLEdBQUFBLEVBQUFBLFlBQUFBLE9BQUFBLEVBQUFBO1FBQ3pCSix5QkFBYUE7UUFDYnpELGFBQVc4RDttQkFFVlQsQ0FBQUEsR0FBQUEsU0FBQUEsV0FBQUEsRUFBQUE7O0lBR1A7O0tBWmdCQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvaGVhZC50c3g/MzY3MCJdLCJuYW1lcyI6WyJleHBvcnRzIiwiZGVmYXVsdEhlYWQiLCJfIiwicmVxdWlyZSIsIl93YXJub25jZSIsImluQW1wTW9kZSIsImNoYXJTZXQiLCJfanN4cnVudGltZSIsImpzeCIsImhlYWQiLCJuYW1lIiwiY29udGVudCIsIm9ubHlSZWFjdEVsZW1lbnQiLCJsaXN0IiwiY2hpbGQiLCJGcmFnbWVudCIsInR5cGUiLCJjb25jYXQiLCJkZWZhdWx0IiwiUmVhY3QiLCJDaGlsZHJlbiIsIl9yZWFjdCIsImZyYWdtZW50TGlzdCIsImZyYWdtZW50Q2hpbGQiLCJNRVRBVFlQRVMiLCJrZXlzIiwidGFncyIsIlNldCIsIm1ldGFUeXBlcyIsIm1ldGFDYXRlZ29yaWVzIiwiaCIsImlzVW5pcXVlIiwiaGFzS2V5Iiwia2V5IiwiaW5kZXhPZiIsImFkZCIsImkiLCJtZXRhdHlwZSIsImxlbiIsImhhc093blByb3BlcnR5IiwiY2F0ZWdvcmllcyIsImhhcyIsImNhdGVnb3J5IiwicHJvcHMiLCJoZWFkQ2hpbGRyZW5FbGVtZW50cyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImMiLCJfX05FWFRfT1BUSU1JWkVfRk9OVFMiLCJzb21lIiwidXJsIiwibmV3UHJvcHMiLCJzdGFydHNXaXRoIiwidW5kZWZpbmVkIiwiY2xvbmVFbGVtZW50Iiwic3JjTWVzc2FnZSIsIndhcm5PbmNlIiwiY2hpbGRyZW4iLCJwYXJhbSIsImFtcFN0YXRlIiwidXNlQ29udGV4dCIsImhlYWRNYW5hZ2VyIiwiSGVhZE1hbmFnZXJDb250ZXh0IiwiRWZmZWN0IiwicmVkdWNlQ29tcG9uZW50c1RvU3RhdGUiLCJyZWR1Y2VDb21wb25lbnRzIiwiaXNJbkFtcE1vZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/head.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-blur-svg.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-blur-svg.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A shared function, used on both client and server, to generate a SVG blur placeholder.\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getImageBlurSvg\", ({\n    enumerable: true,\n    get: function() {\n        return getImageBlurSvg;\n    }\n}));\nfunction getImageBlurSvg(param) {\n    let { widthInt, heightInt, blurWidth, blurHeight, blurDataURL, objectFit } = param;\n    const std = 20;\n    const svgWidth = blurWidth ? blurWidth * 40 : widthInt;\n    const svgHeight = blurHeight ? blurHeight * 40 : heightInt;\n    const viewBox = svgWidth && svgHeight ? \"viewBox='0 0 \" + svgWidth + \" \" + svgHeight + \"'\" : \"\";\n    const preserveAspectRatio = viewBox ? \"none\" : objectFit === \"contain\" ? \"xMidYMid\" : objectFit === \"cover\" ? \"xMidYMid slice\" : \"none\";\n    return \"%3Csvg xmlns='http://www.w3.org/2000/svg' \" + viewBox + \"%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='\" + std + \"'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='\" + std + \"'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='\" + preserveAspectRatio + \"' style='filter: url(%23b);' href='\" + blurDataURL + \"'/%3E%3C/svg%3E\";\n} //# sourceMappingURL=image-blur-svg.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1ibHVyLXN2Zy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Q0FFQzs7OzttREFDZUE7OztlQUFBQTs7O0FBQVQsU0FBU0EsZ0JBQWdCQyxLQWMvQjtJQWQrQixNQUM5QkMsUUFBUSxFQUNSQyxTQUFTLEVBQ1RDLFNBQVMsRUFDVEMsVUFBVSxFQUNWQyxXQUFXLEVBQ1hDLFNBQVMsRUFRVixHQWQrQk47SUFlOUIsTUFBTU8sTUFBTTtJQUNaLE1BQU1DLFdBQVdMLFlBQVlBLFlBQVksS0FBS0Y7SUFDOUMsTUFBTVEsWUFBWUwsYUFBYUEsYUFBYSxLQUFLRjtJQUVqRCxNQUFNUSxVQUNKRixZQUFZQyxZQUFZLGtCQUFnQkQsV0FBUyxNQUFHQyxZQUFVLE1BQUs7SUFDckUsTUFBTUUsc0JBQXNCRCxVQUN4QixTQUNBSixjQUFjLFlBQ2QsYUFDQUEsY0FBYyxVQUNkLG1CQUNBO0lBRUosT0FBTywrQ0FBNkNJLFVBQVEsOEZBQTJGSCxNQUFJLG9RQUFpUUEsTUFBSSxnR0FBNkZJLHNCQUFvQix3Q0FBcUNOLGNBQVk7QUFDcGtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9pbWFnZS1ibHVyLXN2Zy50cz9jNzljIl0sIm5hbWVzIjpbImdldEltYWdlQmx1clN2ZyIsInBhcmFtIiwid2lkdGhJbnQiLCJoZWlnaHRJbnQiLCJibHVyV2lkdGgiLCJibHVySGVpZ2h0IiwiYmx1ckRhdGFVUkwiLCJvYmplY3RGaXQiLCJzdGQiLCJzdmdXaWR0aCIsInN2Z0hlaWdodCIsInZpZXdCb3giLCJwcmVzZXJ2ZUFzcGVjdFJhdGlvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-blur-svg.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"ImageConfigContext\", ({\n    enumerable: true,\n    get: function() {\n        return ImageConfigContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _imageconfig = __webpack_require__(/*! ./image-config */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\");\nconst ImageConfigContext = _react.default.createContext(_imageconfig.imageConfigDefault);\nif (true) {\n    ImageConfigContext.displayName = \"ImageConfigContext\";\n} //# sourceMappingURL=image-config-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1jb25maWctY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7O3NEQUlhQTs7O2VBQUFBOzs7OzRFQUpLO3lDQUVpQjtBQUU1QixNQUFNQSxxQkFDWEMsT0FBQUEsT0FBSyxDQUFDQyxhQUFhLENBQXNCQyxhQUFBQSxrQkFBa0I7QUFFN0QsSUFBSUMsSUFBeUIsRUFBYztJQUN6Q0osbUJBQW1CSyxXQUFXLEdBQUc7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9zaGFyZWQvbGliL2ltYWdlLWNvbmZpZy1jb250ZXh0LnNoYXJlZC1ydW50aW1lLnRzPzNkNzUiXSwibmFtZXMiOlsiSW1hZ2VDb25maWdDb250ZXh0IiwiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwiaW1hZ2VDb25maWdEZWZhdWx0IiwicHJvY2VzcyIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-config.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    VALID_LOADERS: function() {\n        return VALID_LOADERS;\n    },\n    imageConfigDefault: function() {\n        return imageConfigDefault;\n    }\n});\nconst VALID_LOADERS = [\n    \"default\",\n    \"imgix\",\n    \"cloudinary\",\n    \"akamai\",\n    \"custom\"\n];\nconst imageConfigDefault = {\n    deviceSizes: [\n        640,\n        750,\n        828,\n        1080,\n        1200,\n        1920,\n        2048,\n        3840\n    ],\n    imageSizes: [\n        16,\n        32,\n        48,\n        64,\n        96,\n        128,\n        256,\n        384\n    ],\n    path: \"/_next/image\",\n    loader: \"default\",\n    loaderFile: \"\",\n    domains: [],\n    disableStaticImages: false,\n    minimumCacheTTL: 60,\n    formats: [\n        \"image/webp\"\n    ],\n    dangerouslyAllowSVG: false,\n    contentSecurityPolicy: \"script-src 'none'; frame-src 'none'; sandbox;\",\n    contentDispositionType: \"inline\",\n    remotePatterns: [],\n    unoptimized: false\n}; //# sourceMappingURL=image-config.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1jb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBQWFBLGVBQWE7ZUFBYkE7O0lBc0dBQyxvQkFBa0I7ZUFBbEJBOzs7QUF0R04sTUFBTUQsZ0JBQWdCO0lBQzNCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRDtBQWdHTSxNQUFNQyxxQkFBMEM7SUFDckRDLGFBQWE7UUFBQztRQUFLO1FBQUs7UUFBSztRQUFNO1FBQU07UUFBTTtRQUFNO0tBQUs7SUFDMURDLFlBQVk7UUFBQztRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSztRQUFLO0tBQUk7SUFDL0NDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxZQUFZO0lBQ1pDLFNBQVMsRUFBRTtJQUNYQyxxQkFBcUI7SUFDckJDLGlCQUFpQjtJQUNqQkMsU0FBUztRQUFDO0tBQWE7SUFDdkJDLHFCQUFxQjtJQUNyQkMsdUJBQXdCO0lBQ3hCQyx3QkFBd0I7SUFDeEJDLGdCQUFnQixFQUFFO0lBQ2xCQyxhQUFhO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9zaGFyZWQvbGliL2ltYWdlLWNvbmZpZy50cz8xMzRhIl0sIm5hbWVzIjpbIlZBTElEX0xPQURFUlMiLCJpbWFnZUNvbmZpZ0RlZmF1bHQiLCJkZXZpY2VTaXplcyIsImltYWdlU2l6ZXMiLCJwYXRoIiwibG9hZGVyIiwibG9hZGVyRmlsZSIsImRvbWFpbnMiLCJkaXNhYmxlU3RhdGljSW1hZ2VzIiwibWluaW11bUNhY2hlVFRMIiwiZm9ybWF0cyIsImRhbmdlcm91c2x5QWxsb3dTVkciLCJjb250ZW50U2VjdXJpdHlQb2xpY3kiLCJjb250ZW50RGlzcG9zaXRpb25UeXBlIiwicmVtb3RlUGF0dGVybnMiLCJ1bm9wdGltaXplZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-external.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-external.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    default: function() {\n        return _default;\n    },\n    getImageProps: function() {\n        return getImageProps;\n    }\n});\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _getimgprops = __webpack_require__(/*! ./get-img-props */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js\");\nconst _imagecomponent = __webpack_require__(/*! ../../client/image-component */ \"(app-pages-browser)/./node_modules/next/dist/client/image-component.js\");\nconst _imageloader = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! next/dist/shared/lib/image-loader */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js\"));\nfunction getImageProps(imgProps) {\n    const { props } = (0, _getimgprops.getImgProps)(imgProps, {\n        defaultLoader: _imageloader.default,\n        // This is replaced by webpack define plugin\n        imgConf: {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":false,\"domains\":[],\"remotePatterns\":[{\"hostname\":\"images.pexels.com\"},{\"hostname\":\"res.cloudinary.com\"}]}\n    });\n    // Normally we don't care about undefined props because we pass to JSX,\n    // but this exported function could be used by the end user for anything\n    // so we delete undefined props to clean it up a little.\n    for (const [key, value] of Object.entries(props)){\n        if (value === undefined) {\n            delete props[key];\n        }\n    }\n    return {\n        props\n    };\n}\nconst _default = _imagecomponent.Image; //# sourceMappingURL=image-external.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1leHRlcm5hbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFpQ0FBLFNBQW9CO2VBQXBCQzs7SUFqQmdCQyxlQUFhO2VBQWJBOzs7O3lDQWJZOzRDQUNOO2tGQUdJO0FBU25CLFNBQVNBLGNBQWNDLFFBQW9CO0lBQ2hELE1BQU0sRUFBRUMsS0FBSyxFQUFFLEdBQUdDLENBQUFBLEdBQUFBLGFBQUFBLFdBQVcsRUFBQ0YsVUFBVTtRQUN0Q0csZUFBQUEsYUFBQUEsT0FBYTtRQUNiLDRDQUE0QztRQUM1Q0MsU0FBU0MsNFJBQTZCO0lBQ3hDO0lBQ0EsdUVBQXVFO0lBQ3ZFLHdFQUF3RTtJQUN4RSx3REFBd0Q7SUFDeEQsS0FBSyxNQUFNLENBQUNHLEtBQUtDLE1BQU0sSUFBSUMsT0FBT0MsT0FBTyxDQUFDVixPQUFRO1FBQ2hELElBQUlRLFVBQVVHLFdBQVc7WUFDdkIsT0FBT1gsS0FBSyxDQUFDTyxJQUEwQjtRQUN6QztJQUNGO0lBQ0EsT0FBTztRQUFFUDtJQUFNO0FBQ2pCO01BRUFILFdBQWVlLGdCQUFBQSxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9pbWFnZS1leHRlcm5hbC50c3g/MzgyNiJdLCJuYW1lcyI6WyJkZWZhdWx0IiwiX2RlZmF1bHQiLCJnZXRJbWFnZVByb3BzIiwiaW1nUHJvcHMiLCJwcm9wcyIsImdldEltZ1Byb3BzIiwiZGVmYXVsdExvYWRlciIsImltZ0NvbmYiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX0lNQUdFX09QVFMiLCJrZXkiLCJ2YWx1ZSIsIk9iamVjdCIsImVudHJpZXMiLCJ1bmRlZmluZWQiLCJJbWFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-external.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-loader.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nfunction defaultLoader(param) {\n    let { config, src, width, quality } = param;\n    if (true) {\n        const missingValues = [];\n        // these should always be provided but make sure they are\n        if (!src) missingValues.push(\"src\");\n        if (!width) missingValues.push(\"width\");\n        if (missingValues.length > 0) {\n            throw new Error(\"Next Image Optimization requires \" + missingValues.join(\", \") + \" to be provided. Make sure you pass them as props to the `next/image` component. Received: \" + JSON.stringify({\n                src,\n                width,\n                quality\n            }));\n        }\n        if (src.startsWith(\"//\")) {\n            throw new Error('Failed to parse src \"' + src + '\" on `next/image`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)');\n        }\n        if (!src.startsWith(\"/\") && (config.domains || config.remotePatterns)) {\n            let parsedSrc;\n            try {\n                parsedSrc = new URL(src);\n            } catch (err) {\n                console.error(err);\n                throw new Error('Failed to parse src \"' + src + '\" on `next/image`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)');\n            }\n            if (true) {\n                // We use dynamic require because this should only error in development\n                const { hasMatch } = __webpack_require__(/*! ./match-remote-pattern */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/match-remote-pattern.js\");\n                if (!hasMatch(config.domains, config.remotePatterns, parsedSrc)) {\n                    throw new Error(\"Invalid src prop (\" + src + ') on `next/image`, hostname \"' + parsedSrc.hostname + '\" is not configured under images in your `next.config.js`\\n' + \"See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host\");\n                }\n            }\n        }\n    }\n    return config.path + \"?url=\" + encodeURIComponent(src) + \"&w=\" + width + \"&q=\" + (quality || 75) + ( false ? 0 : \"\");\n}\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true;\nconst _default = defaultLoader; //# sourceMappingURL=image-loader.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1sb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OzsyQ0F3RUE7OztlQUFBQTs7O0FBdEVBLFNBQVNDLGNBQWNDLEtBS007SUFMTixNQUNyQkMsTUFBTSxFQUNOQyxHQUFHLEVBQ0hDLEtBQUssRUFDTEMsT0FBTyxFQUNvQixHQUxOSjtJQU1yQixJQUFJSyxJQUF5QixFQUFjO1FBQ3pDLE1BQU1DLGdCQUFnQixFQUFFO1FBRXhCLHlEQUF5RDtRQUN6RCxJQUFJLENBQUNKLEtBQUtJLGNBQWNDLElBQUksQ0FBQztRQUM3QixJQUFJLENBQUNKLE9BQU9HLGNBQWNDLElBQUksQ0FBQztRQUUvQixJQUFJRCxjQUFjRSxNQUFNLEdBQUcsR0FBRztZQUM1QixNQUFNLElBQUlDLE1BQ1Isc0NBQW9DSCxjQUFjSSxJQUFJLENBQ3BELFFBQ0EsZ0dBQStGQyxLQUFLQyxTQUFTLENBQzdHO2dCQUFFVjtnQkFBS0M7Z0JBQU9DO1lBQVE7UUFHNUI7UUFFQSxJQUFJRixJQUFJVyxVQUFVLENBQUMsT0FBTztZQUN4QixNQUFNLElBQUlKLE1BQ1IsMEJBQXdCUCxNQUFJO1FBRWhDO1FBRUEsSUFBSSxDQUFDQSxJQUFJVyxVQUFVLENBQUMsUUFBU1osQ0FBQUEsT0FBT2EsT0FBTyxJQUFJYixPQUFPYyxjQUFjLEdBQUc7WUFDckUsSUFBSUM7WUFDSixJQUFJO2dCQUNGQSxZQUFZLElBQUlDLElBQUlmO1lBQ3RCLEVBQUUsT0FBT2dCLEtBQUs7Z0JBQ1pDLFFBQVFDLEtBQUssQ0FBQ0Y7Z0JBQ2QsTUFBTSxJQUFJVCxNQUNSLDBCQUF3QlAsTUFBSTtZQUVoQztZQUVBLElBQ0VHLElBRTZCLEVBQzdCO2dCQUNBLHVFQUF1RTtnQkFDdkUsTUFBTSxFQUFFa0IsUUFBUSxFQUFFLEdBQUdDLG1CQUFBQSxDQUFRO2dCQUM3QixJQUFJLENBQUNELFNBQVN0QixPQUFPYSxPQUFPLEVBQUViLE9BQU9jLGNBQWMsRUFBRUMsWUFBWTtvQkFDL0QsTUFBTSxJQUFJUCxNQUNSLHVCQUFxQlAsTUFBSSxrQ0FBaUNjLFVBQVVTLFFBQVEsR0FBQyxnRUFDMUU7Z0JBRVA7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxPQUFPeEIsT0FBVXlCLElBQUksR0FBQyxVQUFPQyxtQkFBbUJ6QixPQUFLLFFBQUtDLFFBQU0sUUFDOURDLENBQUFBLFdBQVcsTUFFWEMsQ0FBQUEsTUFBOEIsR0FDMUIsQ0FBc0MsR0FDdEM7QUFFUjtBQUVBLCtEQUErRDtBQUMvRCwyREFBMkQ7QUFDM0ROLGNBQWM4QixrQkFBa0IsR0FBRztNQUVuQy9CLFdBQWVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9pbWFnZS1sb2FkZXIudHM/ZDI4MCJdLCJuYW1lcyI6WyJfZGVmYXVsdCIsImRlZmF1bHRMb2FkZXIiLCJwYXJhbSIsImNvbmZpZyIsInNyYyIsIndpZHRoIiwicXVhbGl0eSIsInByb2Nlc3MiLCJtaXNzaW5nVmFsdWVzIiwicHVzaCIsImxlbmd0aCIsIkVycm9yIiwiam9pbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdGFydHNXaXRoIiwiZG9tYWlucyIsInJlbW90ZVBhdHRlcm5zIiwicGFyc2VkU3JjIiwiVVJMIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwiZW52IiwiTkVYVF9SVU5USU1FIiwiaGFzTWF0Y2giLCJyZXF1aXJlIiwiaG9zdG5hbWUiLCJwYXRoIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiTkVYVF9ERVBMT1lNRU5UX0lEIiwiX19uZXh0X2ltZ19kZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/match-remote-pattern.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/match-remote-pattern.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    hasMatch: function() {\n        return hasMatch;\n    },\n    matchRemotePattern: function() {\n        return matchRemotePattern;\n    }\n});\nconst _picomatch = __webpack_require__(/*! next/dist/compiled/picomatch */ \"(app-pages-browser)/./node_modules/next/dist/compiled/picomatch/index.js\");\nfunction matchRemotePattern(pattern, url) {\n    if (pattern.protocol !== undefined) {\n        const actualProto = url.protocol.slice(0, -1);\n        if (pattern.protocol !== actualProto) {\n            return false;\n        }\n    }\n    if (pattern.port !== undefined) {\n        if (pattern.port !== url.port) {\n            return false;\n        }\n    }\n    if (pattern.hostname === undefined) {\n        throw new Error(\"Pattern should define hostname but found\\n\" + JSON.stringify(pattern));\n    } else {\n        if (!(0, _picomatch.makeRe)(pattern.hostname).test(url.hostname)) {\n            return false;\n        }\n    }\n    var _pattern_pathname;\n    if (!(0, _picomatch.makeRe)((_pattern_pathname = pattern.pathname) != null ? _pattern_pathname : \"**\", {\n        dot: true\n    }).test(url.pathname)) {\n        return false;\n    }\n    return true;\n}\nfunction hasMatch(domains, remotePatterns, url) {\n    return domains.some((domain)=>url.hostname === domain) || remotePatterns.some((p)=>matchRemotePattern(p, url));\n} //# sourceMappingURL=match-remote-pattern.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9tYXRjaC1yZW1vdGUtcGF0dGVybi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFpQ2dCQSxVQUFRO2VBQVJBOztJQTlCQUMsb0JBQWtCO2VBQWxCQTs7O3VDQUZPO0FBRWhCLFNBQVNBLG1CQUFtQkMsT0FBc0IsRUFBRUMsR0FBUTtJQUNqRSxJQUFJRCxRQUFRRSxRQUFRLEtBQUtDLFdBQVc7UUFDbEMsTUFBTUMsY0FBY0gsSUFBSUMsUUFBUSxDQUFDRyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBQzNDLElBQUlMLFFBQVFFLFFBQVEsS0FBS0UsYUFBYTtZQUNwQyxPQUFPO1FBQ1Q7SUFDRjtJQUNBLElBQUlKLFFBQVFNLElBQUksS0FBS0gsV0FBVztRQUM5QixJQUFJSCxRQUFRTSxJQUFJLEtBQUtMLElBQUlLLElBQUksRUFBRTtZQUM3QixPQUFPO1FBQ1Q7SUFDRjtJQUVBLElBQUlOLFFBQVFPLFFBQVEsS0FBS0osV0FBVztRQUNsQyxNQUFNLElBQUlLLE1BQ1IsK0NBQTZDQyxLQUFLQyxTQUFTLENBQUNWO0lBRWhFLE9BQU87UUFDTCxJQUFJLENBQUNXLENBQUFBLEdBQUFBLFdBQUFBLE1BQU0sRUFBQ1gsUUFBUU8sUUFBUSxFQUFFSyxJQUFJLENBQUNYLElBQUlNLFFBQVEsR0FBRztZQUNoRCxPQUFPO1FBQ1Q7SUFDRjtRQUVZUDtJQUFaLElBQUksQ0FBQ1csQ0FBQUEsR0FBQUEsV0FBQUEsTUFBTSxFQUFDWCxDQUFBQSxvQkFBQUEsUUFBUWEsUUFBUSxZQUFoQmIsb0JBQW9CLE1BQU07UUFBRWMsS0FBSztJQUFLLEdBQUdGLElBQUksQ0FBQ1gsSUFBSVksUUFBUSxHQUFHO1FBQ3ZFLE9BQU87SUFDVDtJQUVBLE9BQU87QUFDVDtBQUVPLFNBQVNmLFNBQ2RpQixPQUFpQixFQUNqQkMsY0FBK0IsRUFDL0JmLEdBQVE7SUFFUixPQUNFYyxRQUFRRSxJQUFJLENBQUMsQ0FBQ0MsU0FBV2pCLElBQUlNLFFBQVEsS0FBS1csV0FDMUNGLGVBQWVDLElBQUksQ0FBQyxDQUFDRSxJQUFNcEIsbUJBQW1Cb0IsR0FBR2xCO0FBRXJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9tYXRjaC1yZW1vdGUtcGF0dGVybi50cz9kNjFkIl0sIm5hbWVzIjpbImhhc01hdGNoIiwibWF0Y2hSZW1vdGVQYXR0ZXJuIiwicGF0dGVybiIsInVybCIsInByb3RvY29sIiwidW5kZWZpbmVkIiwiYWN0dWFsUHJvdG8iLCJzbGljZSIsInBvcnQiLCJob3N0bmFtZSIsIkVycm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsIm1ha2VSZSIsInRlc3QiLCJwYXRobmFtZSIsImRvdCIsImRvbWFpbnMiLCJyZW1vdGVQYXR0ZXJucyIsInNvbWUiLCJkb21haW4iLCJwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/match-remote-pattern.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router-context.shared-runtime.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RouterContext\", ({\n    enumerable: true,\n    get: function() {\n        return RouterContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst RouterContext = _react.default.createContext(null);\nif (true) {\n    RouterContext.displayName = \"RouterContext\";\n} //# sourceMappingURL=router-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7O2lEQUdhQTs7O2VBQUFBOzs7OzRFQUhLO0FBR1gsTUFBTUEsZ0JBQWdCQyxPQUFBQSxPQUFLLENBQUNDLGFBQWEsQ0FBb0I7QUFFcEUsSUFBSUMsSUFBeUIsRUFBYztJQUN6Q0gsY0FBY0ksV0FBVyxHQUFHO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS50cz82MzZjIl0sIm5hbWVzIjpbIlJvdXRlckNvbnRleHQiLCJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJwcm9jZXNzIiwiZGlzcGxheU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/side-effect.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/side-effect.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _s = $RefreshSig$();\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return SideEffect;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nconst isServer = typeof window === \"undefined\";\nconst useClientOnlyLayoutEffect = isServer ? ()=>{} : _react.useLayoutEffect;\nconst useClientOnlyEffect = isServer ? ()=>{} : _react.useEffect;\nfunction SideEffect(props) {\n    _s();\n    const { headManager, reduceComponentsToState } = props;\n    function emitChange() {\n        if (headManager && headManager.mountedInstances) {\n            const headElements = _react.Children.toArray(Array.from(headManager.mountedInstances).filter(Boolean));\n            headManager.updateHead(reduceComponentsToState(headElements, props));\n        }\n    }\n    if (isServer) {\n        var _headManager_mountedInstances;\n        headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.add(props.children);\n        emitChange();\n    }\n    useClientOnlyLayoutEffect(()=>{\n        var _headManager_mountedInstances;\n        headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.add(props.children);\n        return ()=>{\n            var _headManager_mountedInstances;\n            headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.delete(props.children);\n        };\n    });\n    // We need to call `updateHead` method whenever the `SideEffect` is trigger in all\n    // life-cycles: mount, update, unmount. However, if there are multiple `SideEffect`s\n    // being rendered, we only trigger the method from the last one.\n    // This is ensured by keeping the last unflushed `updateHead` in the `_pendingUpdate`\n    // singleton in the layout effect pass, and actually trigger it in the effect pass.\n    useClientOnlyLayoutEffect(()=>{\n        if (headManager) {\n            headManager._pendingUpdate = emitChange;\n        }\n        return ()=>{\n            if (headManager) {\n                headManager._pendingUpdate = emitChange;\n            }\n        };\n    });\n    useClientOnlyEffect(()=>{\n        if (headManager && headManager._pendingUpdate) {\n            headManager._pendingUpdate();\n            headManager._pendingUpdate = null;\n        }\n        return ()=>{\n            if (headManager && headManager._pendingUpdate) {\n                headManager._pendingUpdate();\n                headManager._pendingUpdate = null;\n            }\n        };\n    });\n    return null;\n} //# sourceMappingURL=side-effect.js.map\n_s(SideEffect, \"gHVkikNHNxjVdD11eJBzaqkCiPY=\", false, function() {\n    return [\n        useClientOnlyLayoutEffect,\n        useClientOnlyLayoutEffect,\n        useClientOnlyEffect\n    ];\n});\n_c = SideEffect;\nvar _c;\n$RefreshReg$(_c, \"SideEffect\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9zaWRlLWVmZmVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7MkNBb0JBOzs7ZUFBd0JBOzs7bUNBbkI2QjtBQWVyRCxNQUFNQyxXQUFXLE9BQU9DLFdBQVc7QUFDbkMsTUFBTUMsNEJBQTRCRixXQUFXLEtBQU8sSUFBSUcsT0FBQUEsZUFBZTtBQUN2RSxNQUFNQyxzQkFBc0JKLFdBQVcsS0FBTyxJQUFJSyxPQUFBQSxTQUFTO0FBRTVDLFNBQVNOLFdBQVdPLEtBQXNCOztJQUN2RCxNQUFNLEVBQUVDLFdBQVcsRUFBRUMsdUJBQXVCLEVBQUUsR0FBR0Y7SUFFakQsU0FBU0c7UUFDUCxJQUFJRixlQUFlQSxZQUFZRyxnQkFBZ0IsRUFBRTtZQUMvQyxNQUFNQyxlQUFlQyxPQUFBQSxRQUFRLENBQUNDLE9BQU8sQ0FDbkNDLE1BQU1DLElBQUksQ0FBQ1IsWUFBWUcsZ0JBQWdCLEVBQTBCTSxNQUFNLENBQ3JFQztZQUdKVixZQUFZVyxVQUFVLENBQUNWLHdCQUF3QkcsY0FBY0w7UUFDL0Q7SUFDRjtJQUVBLElBQUlOLFVBQVU7WUFDWk87UUFBQUEsZUFBQUEsT0FBQUEsS0FBQUEsSUFBQUEsQ0FBQUEsZ0NBQUFBLFlBQWFHLGdCQUFnQixxQkFBN0JILDhCQUErQlksR0FBRyxDQUFDYixNQUFNYyxRQUFRO1FBQ2pEWDtJQUNGO0lBRUFQLDBCQUEwQjtZQUN4Qks7UUFBQUEsZUFBQUEsT0FBQUEsS0FBQUEsSUFBQUEsQ0FBQUEsZ0NBQUFBLFlBQWFHLGdCQUFnQixxQkFBN0JILDhCQUErQlksR0FBRyxDQUFDYixNQUFNYyxRQUFRO1FBQ2pELE9BQU87Z0JBQ0xiO1lBQUFBLGVBQUFBLE9BQUFBLEtBQUFBLElBQUFBLENBQUFBLGdDQUFBQSxZQUFhRyxnQkFBZ0IscUJBQTdCSCw4QkFBK0JjLE1BQU0sQ0FBQ2YsTUFBTWMsUUFBUTtRQUN0RDtJQUNGO0lBRUEsa0ZBQWtGO0lBQ2xGLG9GQUFvRjtJQUNwRixnRUFBZ0U7SUFDaEUscUZBQXFGO0lBQ3JGLG1GQUFtRjtJQUNuRmxCLDBCQUEwQjtRQUN4QixJQUFJSyxhQUFhO1lBQ2ZBLFlBQVllLGNBQWMsR0FBR2I7UUFDL0I7UUFDQSxPQUFPO1lBQ0wsSUFBSUYsYUFBYTtnQkFDZkEsWUFBWWUsY0FBYyxHQUFHYjtZQUMvQjtRQUNGO0lBQ0Y7SUFFQUwsb0JBQW9CO1FBQ2xCLElBQUlHLGVBQWVBLFlBQVllLGNBQWMsRUFBRTtZQUM3Q2YsWUFBWWUsY0FBYztZQUMxQmYsWUFBWWUsY0FBYyxHQUFHO1FBQy9CO1FBQ0EsT0FBTztZQUNMLElBQUlmLGVBQWVBLFlBQVllLGNBQWMsRUFBRTtnQkFDN0NmLFlBQVllLGNBQWM7Z0JBQzFCZixZQUFZZSxjQUFjLEdBQUc7WUFDL0I7UUFDRjtJQUNGO0lBRUEsT0FBTztBQUNUO0dBeER3QnZCOztRQW1CdEJHO1FBWUFBO1FBV0FFOzs7S0ExQ3NCTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvc2lkZS1lZmZlY3QudHN4P2U4ZGQiXSwibmFtZXMiOlsiU2lkZUVmZmVjdCIsImlzU2VydmVyIiwid2luZG93IiwidXNlQ2xpZW50T25seUxheW91dEVmZmVjdCIsInVzZUxheW91dEVmZmVjdCIsInVzZUNsaWVudE9ubHlFZmZlY3QiLCJ1c2VFZmZlY3QiLCJwcm9wcyIsImhlYWRNYW5hZ2VyIiwicmVkdWNlQ29tcG9uZW50c1RvU3RhdGUiLCJlbWl0Q2hhbmdlIiwibW91bnRlZEluc3RhbmNlcyIsImhlYWRFbGVtZW50cyIsIkNoaWxkcmVuIiwidG9BcnJheSIsIkFycmF5IiwiZnJvbSIsImZpbHRlciIsIkJvb2xlYW4iLCJ1cGRhdGVIZWFkIiwiYWRkIiwiY2hpbGRyZW4iLCJkZWxldGUiLCJfcGVuZGluZ1VwZGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/side-effect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/[[...sign-in]]/page.tsx":
/*!*****************************************!*\
  !*** ./src/app/[[...sign-in]]/page.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @clerk/elements/sign-in */ \"(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-35XMYW3R.mjs\");\n/* harmony import */ var _clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @clerk/elements/sign-in */ \"(app-pages-browser)/./node_modules/@clerk/elements/dist/react/sign-in/index.mjs\");\n/* harmony import */ var _clerk_nextjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/nextjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/index.mjs\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nconst LoginPage = ()=>{\n    _s();\n    const { isLoaded, isSignedIn, user } = (0,_clerk_nextjs__WEBPACK_IMPORTED_MODULE_4__.useUser)();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        const role = user === null || user === void 0 ? void 0 : user.publicMetadata.role;\n        if (role) {\n            router.push(\"/\".concat(role));\n        }\n    }, [\n        user,\n        router\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"h-screen flex items-center justify-center bg-lamaSkyLight\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_5__.Root, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_6__.SignInStep, {\n                name: \"start\",\n                className: \"bg-white p-12 rounded-md shadow-2xl flex flex-col gap-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: \"text-xl font-bold flex items-center gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n                                src: \"/logo.png\",\n                                alt: \"\",\n                                width: 24,\n                                height: 24\n                            }, void 0, false, {\n                                fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                                lineNumber: 31,\n                                columnNumber: 13\n                            }, undefined),\n                            \"SchooLama\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                        lineNumber: 30,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-gray-400\",\n                        children: \"Sign in to your account\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                        lineNumber: 34,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_6__.GlobalError, {\n                        className: \"text-sm text-red-400\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                        lineNumber: 35,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_6__.Field, {\n                        name: \"identifier\",\n                        className: \"flex flex-col gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_6__.Label, {\n                                className: \"text-xs text-gray-500\",\n                                children: \"Username\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                                lineNumber: 37,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_6__.Input, {\n                                type: \"text\",\n                                required: true,\n                                className: \"p-2 rounded-md ring-1 ring-gray-300\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                                lineNumber: 40,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_6__.FieldError, {\n                                className: \"text-xs text-red-400\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                                lineNumber: 45,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                        lineNumber: 36,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_6__.Field, {\n                        name: \"password\",\n                        className: \"flex flex-col gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_6__.Label, {\n                                className: \"text-xs text-gray-500\",\n                                children: \"Password\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                                lineNumber: 48,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_6__.Input, {\n                                type: \"password\",\n                                required: true,\n                                className: \"p-2 rounded-md ring-1 ring-gray-300\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                                lineNumber: 51,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_6__.FieldError, {\n                                className: \"text-xs text-red-400\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                                lineNumber: 56,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                        lineNumber: 47,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_in__WEBPACK_IMPORTED_MODULE_5__.Action, {\n                        submit: true,\n                        className: \"bg-blue-500 text-white my-1 rounded-md text-sm p-[10px]\",\n                        children: \"Sign In\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                        lineNumber: 58,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n                lineNumber: 26,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n            lineNumber: 25,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/mihirpradhan/Desktop/test/src/app/[[...sign-in]]/page.tsx\",\n        lineNumber: 24,\n        columnNumber: 5\n    }, undefined);\n};\n_s(LoginPage, \"QSYIPEaWhfVHPpREIqMCeUHgZVM=\", false, function() {\n    return [\n        _clerk_nextjs__WEBPACK_IMPORTED_MODULE_4__.useUser,\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = LoginPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (LoginPage);\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvW1suLi5zaWduLWluXV0vcGFnZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFZ0Q7QUFDRTtBQUNWO0FBQ1Q7QUFDYTtBQUNWO0FBRWxDLE1BQU1NLFlBQVk7O0lBQ2hCLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxVQUFVLEVBQUVDLElBQUksRUFBRSxHQUFHUCxzREFBT0E7SUFFOUMsTUFBTVEsU0FBU04sMERBQVNBO0lBRXhCQyxnREFBU0EsQ0FBQztRQUNSLE1BQU1NLE9BQU9GLGlCQUFBQSwyQkFBQUEsS0FBTUcsY0FBYyxDQUFDRCxJQUFJO1FBRXRDLElBQUlBLE1BQU07WUFDUkQsT0FBT0csSUFBSSxDQUFDLElBQVMsT0FBTEY7UUFDbEI7SUFDRixHQUFHO1FBQUNGO1FBQU1DO0tBQU87SUFFakIscUJBQ0UsOERBQUNJO1FBQUlDLFdBQVU7a0JBQ2IsNEVBQUNkLHlEQUFXO3NCQUNWLDRFQUFDQSwrREFBVztnQkFDVmlCLE1BQUs7Z0JBQ0xILFdBQVU7O2tDQUVWLDhEQUFDSTt3QkFBR0osV0FBVTs7MENBQ1osOERBQUNaLGtEQUFLQTtnQ0FBQ2lCLEtBQUk7Z0NBQVlDLEtBQUk7Z0NBQUdDLE9BQU87Z0NBQUlDLFFBQVE7Ozs7Ozs0QkFBTTs7Ozs7OztrQ0FHekQsOERBQUNDO3dCQUFHVCxXQUFVO2tDQUFnQjs7Ozs7O2tDQUM5Qiw4REFBQ2YsZ0VBQWlCO3dCQUFDZSxXQUFVOzs7Ozs7a0NBQzdCLDhEQUFDZiwwREFBVzt3QkFBQ2tCLE1BQUs7d0JBQWFILFdBQVU7OzBDQUN2Qyw4REFBQ2YsMERBQVc7Z0NBQUNlLFdBQVU7MENBQXdCOzs7Ozs7MENBRy9DLDhEQUFDZiwwREFBVztnQ0FDVjZCLE1BQUs7Z0NBQ0xDLFFBQVE7Z0NBQ1JmLFdBQVU7Ozs7OzswQ0FFWiw4REFBQ2YsK0RBQWdCO2dDQUFDZSxXQUFVOzs7Ozs7Ozs7Ozs7a0NBRTlCLDhEQUFDZiwwREFBVzt3QkFBQ2tCLE1BQUs7d0JBQVdILFdBQVU7OzBDQUNyQyw4REFBQ2YsMERBQVc7Z0NBQUNlLFdBQVU7MENBQXdCOzs7Ozs7MENBRy9DLDhEQUFDZiwwREFBVztnQ0FDVjZCLE1BQUs7Z0NBQ0xDLFFBQVE7Z0NBQ1JmLFdBQVU7Ozs7OzswQ0FFWiw4REFBQ2YsK0RBQWdCO2dDQUFDZSxXQUFVOzs7Ozs7Ozs7Ozs7a0NBRTlCLDhEQUFDZCwyREFBYTt3QkFDWmdDLE1BQU07d0JBQ05sQixXQUFVO2tDQUNYOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT1g7R0ExRE1UOztRQUNtQ0osa0RBQU9BO1FBRS9CRSxzREFBU0E7OztLQUhwQkU7QUE0RE4sK0RBQWVBLFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwcC9bWy4uLnNpZ24taW5dXS9wYWdlLnRzeD8xZWM3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgKiBhcyBDbGVyayBmcm9tIFwiQGNsZXJrL2VsZW1lbnRzL2NvbW1vblwiO1xuaW1wb3J0ICogYXMgU2lnbkluIGZyb20gXCJAY2xlcmsvZWxlbWVudHMvc2lnbi1pblwiO1xuaW1wb3J0IHsgdXNlVXNlciB9IGZyb20gXCJAY2xlcmsvbmV4dGpzXCI7XG5pbXBvcnQgSW1hZ2UgZnJvbSBcIm5leHQvaW1hZ2VcIjtcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L25hdmlnYXRpb25cIjtcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuXG5jb25zdCBMb2dpblBhZ2UgPSAoKSA9PiB7XG4gIGNvbnN0IHsgaXNMb2FkZWQsIGlzU2lnbmVkSW4sIHVzZXIgfSA9IHVzZVVzZXIoKTtcblxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHJvbGUgPSB1c2VyPy5wdWJsaWNNZXRhZGF0YS5yb2xlO1xuXG4gICAgaWYgKHJvbGUpIHtcbiAgICAgIHJvdXRlci5wdXNoKGAvJHtyb2xlfWApO1xuICAgIH1cbiAgfSwgW3VzZXIsIHJvdXRlcl0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJoLXNjcmVlbiBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBiZy1sYW1hU2t5TGlnaHRcIj5cbiAgICAgIDxTaWduSW4uUm9vdD5cbiAgICAgICAgPFNpZ25Jbi5TdGVwXG4gICAgICAgICAgbmFtZT1cInN0YXJ0XCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJiZy13aGl0ZSBwLTEyIHJvdW5kZWQtbWQgc2hhZG93LTJ4bCBmbGV4IGZsZXgtY29sIGdhcC0yXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9XCJ0ZXh0LXhsIGZvbnQtYm9sZCBmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMlwiPlxuICAgICAgICAgICAgPEltYWdlIHNyYz1cIi9sb2dvLnBuZ1wiIGFsdD1cIlwiIHdpZHRoPXsyNH0gaGVpZ2h0PXsyNH0gLz5cbiAgICAgICAgICAgIFNjaG9vTGFtYVxuICAgICAgICAgIDwvaDE+XG4gICAgICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQtZ3JheS00MDBcIj5TaWduIGluIHRvIHlvdXIgYWNjb3VudDwvaDI+XG4gICAgICAgICAgPENsZXJrLkdsb2JhbEVycm9yIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1yZWQtNDAwXCIgLz5cbiAgICAgICAgICA8Q2xlcmsuRmllbGQgbmFtZT1cImlkZW50aWZpZXJcIiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sIGdhcC0yXCI+XG4gICAgICAgICAgICA8Q2xlcmsuTGFiZWwgY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LWdyYXktNTAwXCI+XG4gICAgICAgICAgICAgIFVzZXJuYW1lXG4gICAgICAgICAgICA8L0NsZXJrLkxhYmVsPlxuICAgICAgICAgICAgPENsZXJrLklucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicC0yIHJvdW5kZWQtbWQgcmluZy0xIHJpbmctZ3JheS0zMDBcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxDbGVyay5GaWVsZEVycm9yIGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1yZWQtNDAwXCIgLz5cbiAgICAgICAgICA8L0NsZXJrLkZpZWxkPlxuICAgICAgICAgIDxDbGVyay5GaWVsZCBuYW1lPVwicGFzc3dvcmRcIiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sIGdhcC0yXCI+XG4gICAgICAgICAgICA8Q2xlcmsuTGFiZWwgY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LWdyYXktNTAwXCI+XG4gICAgICAgICAgICAgIFBhc3N3b3JkXG4gICAgICAgICAgICA8L0NsZXJrLkxhYmVsPlxuICAgICAgICAgICAgPENsZXJrLklucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cInAtMiByb3VuZGVkLW1kIHJpbmctMSByaW5nLWdyYXktMzAwXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8Q2xlcmsuRmllbGRFcnJvciBjbGFzc05hbWU9XCJ0ZXh0LXhzIHRleHQtcmVkLTQwMFwiIC8+XG4gICAgICAgICAgPC9DbGVyay5GaWVsZD5cbiAgICAgICAgICA8U2lnbkluLkFjdGlvblxuICAgICAgICAgICAgc3VibWl0XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJiZy1ibHVlLTUwMCB0ZXh0LXdoaXRlIG15LTEgcm91bmRlZC1tZCB0ZXh0LXNtIHAtWzEwcHhdXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICBTaWduIEluXG4gICAgICAgICAgPC9TaWduSW4uQWN0aW9uPlxuICAgICAgICA8L1NpZ25Jbi5TdGVwPlxuICAgICAgPC9TaWduSW4uUm9vdD5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IExvZ2luUGFnZTtcbiJdLCJuYW1lcyI6WyJDbGVyayIsIlNpZ25JbiIsInVzZVVzZXIiLCJJbWFnZSIsInVzZVJvdXRlciIsInVzZUVmZmVjdCIsIkxvZ2luUGFnZSIsImlzTG9hZGVkIiwiaXNTaWduZWRJbiIsInVzZXIiLCJyb3V0ZXIiLCJyb2xlIiwicHVibGljTWV0YWRhdGEiLCJwdXNoIiwiZGl2IiwiY2xhc3NOYW1lIiwiUm9vdCIsIlN0ZXAiLCJuYW1lIiwiaDEiLCJzcmMiLCJhbHQiLCJ3aWR0aCIsImhlaWdodCIsImgyIiwiR2xvYmFsRXJyb3IiLCJGaWVsZCIsIkxhYmVsIiwiSW5wdXQiLCJ0eXBlIiwicmVxdWlyZWQiLCJGaWVsZEVycm9yIiwiQWN0aW9uIiwic3VibWl0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/[[...sign-in]]/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/NWNmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-LVLBRUHJ.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/dist/chunk-LVLBRUHJ.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthContext: function() { return /* binding */ AuthContext; },\n/* harmony export */   AuthenticateWithRedirectCallback: function() { return /* binding */ AuthenticateWithRedirectCallback; },\n/* harmony export */   ClerkLoaded: function() { return /* binding */ ClerkLoaded; },\n/* harmony export */   ClerkLoading: function() { return /* binding */ ClerkLoading; },\n/* harmony export */   IsomorphicClerkContext: function() { return /* binding */ IsomorphicClerkContext; },\n/* harmony export */   MultisessionAppSupport: function() { return /* binding */ MultisessionAppSupport; },\n/* harmony export */   Protect: function() { return /* binding */ Protect; },\n/* harmony export */   RedirectToCreateOrganization: function() { return /* binding */ RedirectToCreateOrganization; },\n/* harmony export */   RedirectToOrganizationProfile: function() { return /* binding */ RedirectToOrganizationProfile; },\n/* harmony export */   RedirectToSignIn: function() { return /* binding */ RedirectToSignIn; },\n/* harmony export */   RedirectToSignUp: function() { return /* binding */ RedirectToSignUp; },\n/* harmony export */   RedirectToUserProfile: function() { return /* binding */ RedirectToUserProfile; },\n/* harmony export */   SignedIn: function() { return /* binding */ SignedIn; },\n/* harmony export */   SignedOut: function() { return /* binding */ SignedOut; },\n/* harmony export */   customLinkWrongProps: function() { return /* binding */ customLinkWrongProps; },\n/* harmony export */   customMenuItemsIgnoredComponent: function() { return /* binding */ customMenuItemsIgnoredComponent; },\n/* harmony export */   customPageWrongProps: function() { return /* binding */ customPageWrongProps; },\n/* harmony export */   customPagesIgnoredComponent: function() { return /* binding */ customPagesIgnoredComponent; },\n/* harmony export */   errorThrower: function() { return /* binding */ errorThrower; },\n/* harmony export */   incompatibleRoutingWithPathProvidedError: function() { return /* binding */ incompatibleRoutingWithPathProvidedError; },\n/* harmony export */   multipleChildrenInButtonComponent: function() { return /* binding */ multipleChildrenInButtonComponent; },\n/* harmony export */   multipleClerkProvidersError: function() { return /* binding */ multipleClerkProvidersError; },\n/* harmony export */   noPathProvidedError: function() { return /* binding */ noPathProvidedError; },\n/* harmony export */   organizationProfileLinkRenderedError: function() { return /* binding */ organizationProfileLinkRenderedError; },\n/* harmony export */   organizationProfilePageRenderedError: function() { return /* binding */ organizationProfilePageRenderedError; },\n/* harmony export */   setErrorThrowerOptions: function() { return /* binding */ setErrorThrowerOptions; },\n/* harmony export */   unsupportedNonBrowserDomainOrProxyUrlFunction: function() { return /* binding */ unsupportedNonBrowserDomainOrProxyUrlFunction; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; },\n/* harmony export */   useClerk: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.useClerk; },\n/* harmony export */   useEmailLink: function() { return /* binding */ useEmailLink; },\n/* harmony export */   useOrganization: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.useOrganization; },\n/* harmony export */   useOrganizationList: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.useOrganizationList; },\n/* harmony export */   useSession: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.useSession; },\n/* harmony export */   useSessionList: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.useSessionList; },\n/* harmony export */   useSignIn: function() { return /* binding */ useSignIn; },\n/* harmony export */   useSignUp: function() { return /* binding */ useSignUp; },\n/* harmony export */   useUser: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.useUser; },\n/* harmony export */   userButtonIgnoredComponent: function() { return /* binding */ userButtonIgnoredComponent; },\n/* harmony export */   userButtonMenuActionRenderedError: function() { return /* binding */ userButtonMenuActionRenderedError; },\n/* harmony export */   userButtonMenuItemLinkWrongProps: function() { return /* binding */ userButtonMenuItemLinkWrongProps; },\n/* harmony export */   userButtonMenuItemsActionWrongsProps: function() { return /* binding */ userButtonMenuItemsActionWrongsProps; },\n/* harmony export */   userButtonMenuItemsRenderedError: function() { return /* binding */ userButtonMenuItemsRenderedError; },\n/* harmony export */   userButtonMenuLinkRenderedError: function() { return /* binding */ userButtonMenuLinkRenderedError; },\n/* harmony export */   userProfileLinkRenderedError: function() { return /* binding */ userProfileLinkRenderedError; },\n/* harmony export */   userProfilePageRenderedError: function() { return /* binding */ userProfilePageRenderedError; },\n/* harmony export */   withClerk: function() { return /* binding */ withClerk; }\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/error */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/error.mjs\");\n/* harmony import */ var _clerk_shared_authorization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/authorization */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/authorization.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/react */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/react/index.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/telemetry.mjs\");\n// src/errors/errorThrower.ts\n\nvar errorThrower = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_0__.buildErrorThrower)({ packageName: \"@clerk/clerk-react\" });\nfunction setErrorThrowerOptions(options) {\n  errorThrower.setMessages(options).setPackageName(options);\n}\n\n// src/hooks/useAuth.ts\n\n\n\n// src/contexts/AuthContext.ts\n\nvar [AuthContext, useAuthContext] = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.createContextAndHook)(\"AuthContext\");\n\n// src/contexts/IsomorphicClerkContext.tsx\n\nvar IsomorphicClerkContext = _clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.ClerkInstanceContext;\nvar useIsomorphicClerkContext = _clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.useClerkInstanceContext;\n\n// src/errors/messages.ts\nvar multipleClerkProvidersError = \"You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.\";\nvar multipleChildrenInButtonComponent = (name) => `You've passed multiple children components to <${name}/>. You can only pass a single child component or text.`;\nvar invalidStateError = \"Invalid state. Feel free to submit a bug or reach out to support here: https://clerk.com/support\";\nvar unsupportedNonBrowserDomainOrProxyUrlFunction = \"Unsupported usage of isSatellite, domain or proxyUrl. The usage of isSatellite, domain or proxyUrl as function is not supported in non-browser environments.\";\nvar userProfilePageRenderedError = \"<UserProfile.Page /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.\";\nvar userProfileLinkRenderedError = \"<UserProfile.Link /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.\";\nvar organizationProfilePageRenderedError = \"<OrganizationProfile.Page /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.\";\nvar organizationProfileLinkRenderedError = \"<OrganizationProfile.Link /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.\";\nvar customPagesIgnoredComponent = (componentName) => `<${componentName} /> can only accept <${componentName}.Page /> and <${componentName}.Link /> as its children. Any other provided component will be ignored.`;\nvar customPageWrongProps = (componentName) => `Missing props. <${componentName}.Page /> component requires the following props: url, label, labelIcon, alongside with children to be rendered inside the page.`;\nvar customLinkWrongProps = (componentName) => `Missing props. <${componentName}.Link /> component requires the following props: url, label and labelIcon.`;\nvar noPathProvidedError = (componentName) => `The <${componentName}/> component uses path-based routing by default unless a different routing strategy is provided using the \\`routing\\` prop. When path-based routing is used, you need to provide the path where the component is mounted on by using the \\`path\\` prop. Example: <${componentName} path={'/my-path'} />`;\nvar incompatibleRoutingWithPathProvidedError = (componentName) => `The \\`path\\` prop will only be respected when the Clerk component uses path-based routing. To resolve this error, pass \\`routing='path'\\` to the <${componentName}/> component, or drop the \\`path\\` prop to switch to hash-based routing. For more details please refer to our docs: https://clerk.com/docs`;\nvar userButtonIgnoredComponent = `<UserButton /> can only accept <UserButton.UserProfilePage />, <UserButton.UserProfileLink /> and <UserButton.MenuItems /> as its children. Any other provided component will be ignored.`;\nvar customMenuItemsIgnoredComponent = \"<UserButton.MenuItems /> component can only accept <UserButton.Action /> and <UserButton.Link /> as its children. Any other provided component will be ignored.\";\nvar userButtonMenuItemsRenderedError = \"<UserButton.MenuItems /> component needs to be a direct child of `<UserButton />`.\";\nvar userButtonMenuActionRenderedError = \"<UserButton.Action /> component needs to be a direct child of `<UserButton.MenuItems />`.\";\nvar userButtonMenuLinkRenderedError = \"<UserButton.Link /> component needs to be a direct child of `<UserButton.MenuItems />`.\";\nvar userButtonMenuItemLinkWrongProps = \"Missing props. <UserButton.Link /> component requires the following props: href, label and labelIcon.\";\nvar userButtonMenuItemsActionWrongsProps = \"Missing props. <UserButton.Action /> component requires the following props: label.\";\n\n// src/hooks/useAssertWrappedByClerkProvider.ts\n\nvar useAssertWrappedByClerkProvider = (source) => {\n  (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.useAssertWrappedByClerkProvider)(() => {\n    errorThrower.throwMissingClerkProviderError({ source });\n  });\n};\n\n// src/hooks/utils.ts\nvar clerkLoaded = (isomorphicClerk) => {\n  return new Promise((resolve) => {\n    if (isomorphicClerk.loaded) {\n      resolve();\n    }\n    isomorphicClerk.addOnLoaded(resolve);\n  });\n};\nvar createGetToken = (isomorphicClerk) => {\n  return async (options) => {\n    await clerkLoaded(isomorphicClerk);\n    if (!isomorphicClerk.session) {\n      return null;\n    }\n    return isomorphicClerk.session.getToken(options);\n  };\n};\nvar createSignOut = (isomorphicClerk) => {\n  return async (...args) => {\n    await clerkLoaded(isomorphicClerk);\n    return isomorphicClerk.signOut(...args);\n  };\n};\n\n// src/hooks/useAuth.ts\nvar useAuth = () => {\n  useAssertWrappedByClerkProvider(\"useAuth\");\n  const { sessionId, userId, actor, orgId, orgRole, orgSlug, orgPermissions, __experimental_factorVerificationAge } = useAuthContext();\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const getToken = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(createGetToken(isomorphicClerk), [isomorphicClerk]);\n  const signOut = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(createSignOut(isomorphicClerk), [isomorphicClerk]);\n  const has = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(\n    (params) => {\n      return (0,_clerk_shared_authorization__WEBPACK_IMPORTED_MODULE_1__.createCheckAuthorization)({\n        userId,\n        orgId,\n        orgRole,\n        orgPermissions,\n        __experimental_factorVerificationAge\n      })(params);\n    },\n    [userId, __experimental_factorVerificationAge, orgId, orgRole, orgPermissions]\n  );\n  if (sessionId === void 0 && userId === void 0) {\n    return {\n      isLoaded: false,\n      isSignedIn: void 0,\n      sessionId,\n      userId,\n      actor: void 0,\n      orgId: void 0,\n      orgRole: void 0,\n      orgSlug: void 0,\n      has: void 0,\n      signOut,\n      getToken\n    };\n  }\n  if (sessionId === null && userId === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId,\n      userId,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken\n    };\n  }\n  if (!!sessionId && !!userId && !!orgId && !!orgRole) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId,\n      orgRole,\n      orgSlug: orgSlug || null,\n      has,\n      signOut,\n      getToken\n    };\n  }\n  if (!!sessionId && !!userId && !orgId) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has,\n      signOut,\n      getToken\n    };\n  }\n  return errorThrower.throw(invalidStateError);\n};\n\n// src/hooks/useEmailLink.ts\n\nfunction useEmailLink(resource) {\n  const { startEmailLinkFlow, cancelEmailLinkFlow } = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => resource.createEmailLinkFlow(), [resource]);\n  react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {\n    return cancelEmailLinkFlow;\n  }, []);\n  return {\n    startEmailLinkFlow,\n    cancelEmailLinkFlow\n  };\n}\n\n// src/hooks/useSignIn.ts\n\n\nvar useSignIn = () => {\n  var _a;\n  useAssertWrappedByClerkProvider(\"useSignIn\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.useClientContext)();\n  (_a = isomorphicClerk.telemetry) == null ? void 0 : _a.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_4__.eventMethodCalled)(\"useSignIn\"));\n  if (!client) {\n    return { isLoaded: false, signIn: void 0, setActive: void 0 };\n  }\n  return {\n    isLoaded: true,\n    signIn: client.signIn,\n    setActive: isomorphicClerk.setActive\n  };\n};\n\n// src/hooks/useSignUp.ts\n\n\nvar useSignUp = () => {\n  var _a;\n  useAssertWrappedByClerkProvider(\"useSignUp\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.useClientContext)();\n  (_a = isomorphicClerk.telemetry) == null ? void 0 : _a.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_4__.eventMethodCalled)(\"useSignUp\"));\n  if (!client) {\n    return { isLoaded: false, signUp: void 0, setActive: void 0 };\n  }\n  return {\n    isLoaded: true,\n    signUp: client.signUp,\n    setActive: isomorphicClerk.setActive\n  };\n};\n\n// src/hooks/index.ts\n\n\n// src/components/controlComponents.tsx\n\n\n// src/contexts/SessionContext.tsx\n\n\n// src/components/withClerk.tsx\n\nvar withClerk = (Component, displayName) => {\n  displayName = displayName || Component.displayName || Component.name || \"Component\";\n  Component.displayName = displayName;\n  const HOC = (props) => {\n    useAssertWrappedByClerkProvider(displayName || \"withClerk\");\n    const clerk = useIsomorphicClerkContext();\n    if (!clerk.loaded) {\n      return null;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(\n      Component,\n      {\n        ...props,\n        clerk\n      }\n    );\n  };\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n\n// src/components/controlComponents.tsx\nvar SignedIn = ({ children }) => {\n  useAssertWrappedByClerkProvider(\"SignedIn\");\n  const { userId } = useAuthContext();\n  if (userId) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null, children);\n  }\n  return null;\n};\nvar SignedOut = ({ children }) => {\n  useAssertWrappedByClerkProvider(\"SignedOut\");\n  const { userId } = useAuthContext();\n  if (userId === null) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null, children);\n  }\n  return null;\n};\nvar ClerkLoaded = ({ children }) => {\n  useAssertWrappedByClerkProvider(\"ClerkLoaded\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null, children);\n};\nvar ClerkLoading = ({ children }) => {\n  useAssertWrappedByClerkProvider(\"ClerkLoading\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null, children);\n};\nvar Protect = ({ children, fallback, ...restAuthorizedParams }) => {\n  useAssertWrappedByClerkProvider(\"Protect\");\n  const { isLoaded, has, userId } = useAuth();\n  if (!isLoaded) {\n    return null;\n  }\n  const unauthorized = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null, fallback != null ? fallback : null);\n  const authorized = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null, children);\n  if (!userId) {\n    return unauthorized;\n  }\n  if (typeof restAuthorizedParams.condition === \"function\") {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  return authorized;\n};\nvar RedirectToSignIn = withClerk(({ clerk, ...props }) => {\n  const { client, session } = clerk;\n  const hasActiveSessions = client.activeSessions && client.activeSessions.length > 0;\n  react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {\n    if (session === null && hasActiveSessions) {\n      void clerk.redirectToAfterSignOut();\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n  return null;\n}, \"RedirectToSignIn\");\nvar RedirectToSignUp = withClerk(({ clerk, ...props }) => {\n  react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n  return null;\n}, \"RedirectToSignUp\");\nvar RedirectToUserProfile = withClerk(({ clerk }) => {\n  react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {\n    void clerk.redirectToUserProfile();\n  }, []);\n  return null;\n}, \"RedirectToUserProfile\");\nvar RedirectToOrganizationProfile = withClerk(({ clerk }) => {\n  react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {\n    void clerk.redirectToOrganizationProfile();\n  }, []);\n  return null;\n}, \"RedirectToOrganizationProfile\");\nvar RedirectToCreateOrganization = withClerk(({ clerk }) => {\n  react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {\n    void clerk.redirectToCreateOrganization();\n  }, []);\n  return null;\n}, \"RedirectToCreateOrganization\");\nvar AuthenticateWithRedirectCallback = withClerk(\n  ({ clerk, ...handleRedirectCallbackParams }) => {\n    react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {\n      void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n    }, []);\n    return null;\n  },\n  \"AuthenticateWithRedirectCallback\"\n);\nvar MultisessionAppSupport = ({ children }) => {\n  useAssertWrappedByClerkProvider(\"MultisessionAppSupport\");\n  const session = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.useSessionContext)();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, { key: session ? session.id : \"no-users\" }, children);\n};\n\n\n//# sourceMappingURL=chunk-LVLBRUHJ.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-LVLBRUHJ.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-OANWQR3B.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/dist/chunk-OANWQR3B.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __privateAdd: function() { return /* binding */ __privateAdd; },\n/* harmony export */   __privateGet: function() { return /* binding */ __privateGet; },\n/* harmony export */   __privateMethod: function() { return /* binding */ __privateMethod; },\n/* harmony export */   __privateSet: function() { return /* binding */ __privateSet; }\n/* harmony export */ });\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\n\n\n//# sourceMappingURL=chunk-OANWQR3B.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3QvZGlzdC9jaHVuay1PQU5XUVIzQi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBT0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L2Rpc3QvY2h1bmstT0FOV1FSM0IubWpzPzdlNDkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fdHlwZUVycm9yID0gKG1zZykgPT4ge1xuICB0aHJvdyBUeXBlRXJyb3IobXNnKTtcbn07XG52YXIgX19hY2Nlc3NDaGVjayA9IChvYmosIG1lbWJlciwgbXNnKSA9PiBtZW1iZXIuaGFzKG9iaikgfHwgX190eXBlRXJyb3IoXCJDYW5ub3QgXCIgKyBtc2cpO1xudmFyIF9fcHJpdmF0ZUdldCA9IChvYmosIG1lbWJlciwgZ2V0dGVyKSA9PiAoX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJyZWFkIGZyb20gcHJpdmF0ZSBmaWVsZFwiKSwgZ2V0dGVyID8gZ2V0dGVyLmNhbGwob2JqKSA6IG1lbWJlci5nZXQob2JqKSk7XG52YXIgX19wcml2YXRlQWRkID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSkgPT4gbWVtYmVyLmhhcyhvYmopID8gX190eXBlRXJyb3IoXCJDYW5ub3QgYWRkIHRoZSBzYW1lIHByaXZhdGUgbWVtYmVyIG1vcmUgdGhhbiBvbmNlXCIpIDogbWVtYmVyIGluc3RhbmNlb2YgV2Vha1NldCA/IG1lbWJlci5hZGQob2JqKSA6IG1lbWJlci5zZXQob2JqLCB2YWx1ZSk7XG52YXIgX19wcml2YXRlU2V0ID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSwgc2V0dGVyKSA9PiAoX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJ3cml0ZSB0byBwcml2YXRlIGZpZWxkXCIpLCBzZXR0ZXIgPyBzZXR0ZXIuY2FsbChvYmosIHZhbHVlKSA6IG1lbWJlci5zZXQob2JqLCB2YWx1ZSksIHZhbHVlKTtcbnZhciBfX3ByaXZhdGVNZXRob2QgPSAob2JqLCBtZW1iZXIsIG1ldGhvZCkgPT4gKF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwiYWNjZXNzIHByaXZhdGUgbWV0aG9kXCIpLCBtZXRob2QpO1xuXG5leHBvcnQge1xuICBfX3ByaXZhdGVHZXQsXG4gIF9fcHJpdmF0ZUFkZCxcbiAgX19wcml2YXRlU2V0LFxuICBfX3ByaXZhdGVNZXRob2Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1PQU5XUVIzQi5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-OANWQR3B.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/dist/index.mjs ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticateWithRedirectCallback: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticateWithRedirectCallback; },\n/* harmony export */   ClerkLoaded: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkLoaded; },\n/* harmony export */   ClerkLoading: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkLoading; },\n/* harmony export */   ClerkProvider: function() { return /* binding */ ClerkProvider; },\n/* harmony export */   CreateOrganization: function() { return /* binding */ CreateOrganization; },\n/* harmony export */   GoogleOneTap: function() { return /* binding */ GoogleOneTap; },\n/* harmony export */   OrganizationList: function() { return /* binding */ OrganizationList; },\n/* harmony export */   OrganizationProfile: function() { return /* binding */ OrganizationProfile; },\n/* harmony export */   OrganizationSwitcher: function() { return /* binding */ OrganizationSwitcher; },\n/* harmony export */   Protect: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.Protect; },\n/* harmony export */   RedirectToCreateOrganization: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.RedirectToCreateOrganization; },\n/* harmony export */   RedirectToOrganizationProfile: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.RedirectToOrganizationProfile; },\n/* harmony export */   RedirectToSignIn: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.RedirectToSignIn; },\n/* harmony export */   RedirectToSignUp: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.RedirectToSignUp; },\n/* harmony export */   RedirectToUserProfile: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.RedirectToUserProfile; },\n/* harmony export */   SignIn: function() { return /* binding */ SignIn; },\n/* harmony export */   SignInButton: function() { return /* binding */ SignInButton; },\n/* harmony export */   SignInWithMetamaskButton: function() { return /* binding */ SignInWithMetamaskButton; },\n/* harmony export */   SignOutButton: function() { return /* binding */ SignOutButton; },\n/* harmony export */   SignUp: function() { return /* binding */ SignUp; },\n/* harmony export */   SignUpButton: function() { return /* binding */ SignUpButton; },\n/* harmony export */   SignedIn: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.SignedIn; },\n/* harmony export */   SignedOut: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.SignedOut; },\n/* harmony export */   UserButton: function() { return /* binding */ UserButton; },\n/* harmony export */   UserProfile: function() { return /* binding */ UserProfile; },\n/* harmony export */   useAuth: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.useAuth; },\n/* harmony export */   useClerk: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.useClerk; },\n/* harmony export */   useEmailLink: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.useEmailLink; },\n/* harmony export */   useOrganization: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.useOrganization; },\n/* harmony export */   useOrganizationList: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.useOrganizationList; },\n/* harmony export */   useSession: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.useSession; },\n/* harmony export */   useSessionList: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.useSessionList; },\n/* harmony export */   useSignIn: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.useSignIn; },\n/* harmony export */   useSignUp: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.useSignUp; },\n/* harmony export */   useUser: function() { return /* reexport safe */ _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.useUser; }\n/* harmony export */ });\n/* harmony import */ var _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-LVLBRUHJ.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-LVLBRUHJ.mjs\");\n/* harmony import */ var _chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-OANWQR3B.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-OANWQR3B.mjs\");\n/* harmony import */ var _clerk_shared_loadClerkJsScript__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/loadClerkJsScript */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/loadClerkJsScript.mjs\");\n/* harmony import */ var _clerk_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/index.mjs\");\n/* harmony import */ var _clerk_shared_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/react */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/react/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @clerk/shared/keys */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var _clerk_shared_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @clerk/shared/browser */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/browser.mjs\");\n/* harmony import */ var _clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @clerk/shared/handleValueOrFn */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/handleValueOrFn.mjs\");\n\n\n\n// src/polyfills.ts\nif (typeof window !== \"undefined\" && !window.global) {\n  window.global = typeof global === \"undefined\" ? window : global;\n}\n\n// src/index.ts\n\n\n// src/components/uiComponents.tsx\n\n\n\n\n// src/utils/childrenUtils.tsx\n\nvar assertSingleChild = (children) => (name) => {\n  try {\n    return react__WEBPACK_IMPORTED_MODULE_5__.Children.only(children);\n  } catch (e) {\n    return _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throw((0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleChildrenInButtonComponent)(name));\n  }\n};\nvar normalizeWithDefaultValue = (children, defaultText) => {\n  if (!children) {\n    children = defaultText;\n  }\n  if (typeof children === \"string\") {\n    children = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\"button\", null, children);\n  }\n  return children;\n};\nvar safeExecute = (cb) => (...args) => {\n  if (cb && typeof cb === \"function\") {\n    return cb(...args);\n  }\n};\n\n// src/utils/isConstructor.ts\nfunction isConstructor(f) {\n  return typeof f === \"function\";\n}\n\n// src/utils/useMaxAllowedInstancesGuard.tsx\n\nvar counts = /* @__PURE__ */ new Map();\nfunction useMaxAllowedInstancesGuard(name, error, maxCount = 1) {\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    const count = counts.get(name) || 0;\n    if (count == maxCount) {\n      return _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throw(error);\n    }\n    counts.set(name, count + 1);\n    return () => {\n      counts.set(name, (counts.get(name) || 1) - 1);\n    };\n  }, []);\n}\nfunction withMaxAllowedInstancesGuard(WrappedComponent, name, error) {\n  const displayName = WrappedComponent.displayName || WrappedComponent.name || name || \"Component\";\n  const Hoc = (props) => {\n    useMaxAllowedInstancesGuard(name, error);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(WrappedComponent, { ...props });\n  };\n  Hoc.displayName = `withMaxAllowedInstancesGuard(${displayName})`;\n  return Hoc;\n}\n\n// src/utils/useCustomElementPortal.tsx\n\n\nvar useCustomElementPortal = (elements) => {\n  const initialState = Array(elements.length).fill(null);\n  const [nodes, setNodes] = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(initialState);\n  return elements.map((el, index) => ({\n    id: el.id,\n    mount: (node) => setNodes((prevState) => prevState.map((n, i) => i === index ? node : n)),\n    unmount: () => setNodes((prevState) => prevState.map((n, i) => i === index ? null : n)),\n    portal: () => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, nodes[index] ? (0,react_dom__WEBPACK_IMPORTED_MODULE_6__.createPortal)(el.component, nodes[index]) : null)\n  }));\n};\n\n// src/utils/useCustomPages.tsx\n\n\n\n// src/utils/componentValidation.ts\n\nvar isThatComponent = (v, component) => {\n  return !!v && react__WEBPACK_IMPORTED_MODULE_5__.isValidElement(v) && (v == null ? void 0 : v.type) === component;\n};\n\n// src/utils/useCustomPages.tsx\nvar useUserProfileCustomPages = (children) => {\n  const reorderItemsLabels = [\"account\", \"security\"];\n  return useCustomPages({\n    children,\n    reorderItemsLabels,\n    LinkComponent: UserProfileLink,\n    PageComponent: UserProfilePage,\n    MenuItemsComponent: MenuItems,\n    componentName: \"UserProfile\"\n  });\n};\nvar useOrganizationProfileCustomPages = (children) => {\n  const reorderItemsLabels = [\"general\", \"members\"];\n  return useCustomPages({\n    children,\n    reorderItemsLabels,\n    LinkComponent: OrganizationProfileLink,\n    PageComponent: OrganizationProfilePage,\n    componentName: \"OrganizationProfile\"\n  });\n};\nvar useCustomPages = ({\n  children,\n  LinkComponent,\n  PageComponent,\n  MenuItemsComponent,\n  reorderItemsLabels,\n  componentName\n}) => {\n  const validChildren = [];\n  react__WEBPACK_IMPORTED_MODULE_5__.Children.forEach(children, (child) => {\n    if (!isThatComponent(child, PageComponent) && !isThatComponent(child, LinkComponent) && !isThatComponent(child, MenuItemsComponent)) {\n      if (child) {\n        (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)((0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.customPagesIgnoredComponent)(componentName));\n      }\n      return;\n    }\n    const { props } = child;\n    const { children: children2, label, url, labelIcon } = props;\n    if (isThatComponent(child, PageComponent)) {\n      if (isReorderItem(props, reorderItemsLabels)) {\n        validChildren.push({ label });\n      } else if (isCustomPage(props)) {\n        validChildren.push({ label, labelIcon, children: children2, url });\n      } else {\n        (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)((0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.customPageWrongProps)(componentName));\n        return;\n      }\n    }\n    if (isThatComponent(child, LinkComponent)) {\n      if (isExternalLink(props)) {\n        validChildren.push({ label, labelIcon, url });\n      } else {\n        (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)((0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.customLinkWrongProps)(componentName));\n        return;\n      }\n    }\n  });\n  const customPageContents = [];\n  const customPageLabelIcons = [];\n  const customLinkLabelIcons = [];\n  validChildren.forEach((cp, index) => {\n    if (isCustomPage(cp)) {\n      customPageContents.push({ component: cp.children, id: index });\n      customPageLabelIcons.push({ component: cp.labelIcon, id: index });\n      return;\n    }\n    if (isExternalLink(cp)) {\n      customLinkLabelIcons.push({ component: cp.labelIcon, id: index });\n    }\n  });\n  const customPageContentsPortals = useCustomElementPortal(customPageContents);\n  const customPageLabelIconsPortals = useCustomElementPortal(customPageLabelIcons);\n  const customLinkLabelIconsPortals = useCustomElementPortal(customLinkLabelIcons);\n  const customPages = [];\n  const customPagesPortals = [];\n  validChildren.forEach((cp, index) => {\n    if (isReorderItem(cp, reorderItemsLabels)) {\n      customPages.push({ label: cp.label });\n      return;\n    }\n    if (isCustomPage(cp)) {\n      const {\n        portal: contentPortal,\n        mount,\n        unmount\n      } = customPageContentsPortals.find((p) => p.id === index);\n      const {\n        portal: labelPortal,\n        mount: mountIcon,\n        unmount: unmountIcon\n      } = customPageLabelIconsPortals.find((p) => p.id === index);\n      customPages.push({ label: cp.label, url: cp.url, mount, unmount, mountIcon, unmountIcon });\n      customPagesPortals.push(contentPortal);\n      customPagesPortals.push(labelPortal);\n      return;\n    }\n    if (isExternalLink(cp)) {\n      const {\n        portal: labelPortal,\n        mount: mountIcon,\n        unmount: unmountIcon\n      } = customLinkLabelIconsPortals.find((p) => p.id === index);\n      customPages.push({ label: cp.label, url: cp.url, mountIcon, unmountIcon });\n      customPagesPortals.push(labelPortal);\n      return;\n    }\n  });\n  return { customPages, customPagesPortals };\n};\nvar isReorderItem = (childProps, validItems) => {\n  const { children, label, url, labelIcon } = childProps;\n  return !children && !url && !labelIcon && validItems.some((v) => v === label);\n};\nvar isCustomPage = (childProps) => {\n  const { children, label, url, labelIcon } = childProps;\n  return !!children && !!url && !!labelIcon && !!label;\n};\nvar isExternalLink = (childProps) => {\n  const { children, label, url, labelIcon } = childProps;\n  return !children && !!url && !!labelIcon && !!label;\n};\n\n// src/utils/useCustomMenuItems.tsx\n\n\nvar useUserButtonCustomMenuItems = (children) => {\n  const reorderItemsLabels = [\"manageAccount\", \"signOut\"];\n  return useCustomMenuItems({\n    children,\n    reorderItemsLabels,\n    MenuItemsComponent: MenuItems,\n    MenuActionComponent: MenuAction,\n    MenuLinkComponent: MenuLink,\n    UserProfileLinkComponent: UserProfileLink,\n    UserProfilePageComponent: UserProfilePage\n  });\n};\nvar useCustomMenuItems = ({\n  children,\n  MenuItemsComponent,\n  MenuActionComponent,\n  MenuLinkComponent,\n  UserProfileLinkComponent,\n  UserProfilePageComponent,\n  reorderItemsLabels\n}) => {\n  const validChildren = [];\n  const customMenuItems = [];\n  const customMenuItemsPortals = [];\n  react__WEBPACK_IMPORTED_MODULE_5__.Children.forEach(children, (child) => {\n    if (!isThatComponent(child, MenuItemsComponent) && !isThatComponent(child, UserProfileLinkComponent) && !isThatComponent(child, UserProfilePageComponent)) {\n      if (child) {\n        (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.userButtonIgnoredComponent);\n      }\n      return;\n    }\n    if (isThatComponent(child, UserProfileLinkComponent) || isThatComponent(child, UserProfilePageComponent)) {\n      return;\n    }\n    const { props } = child;\n    react__WEBPACK_IMPORTED_MODULE_5__.Children.forEach(props.children, (child2) => {\n      if (!isThatComponent(child2, MenuActionComponent) && !isThatComponent(child2, MenuLinkComponent)) {\n        if (child2) {\n          (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.customMenuItemsIgnoredComponent);\n        }\n        return;\n      }\n      const { props: props2 } = child2;\n      const { label, labelIcon, href, onClick, open } = props2;\n      if (isThatComponent(child2, MenuActionComponent)) {\n        if (isReorderItem2(props2, reorderItemsLabels)) {\n          validChildren.push({ label });\n        } else if (isCustomMenuItem(props2)) {\n          const baseItem = {\n            label,\n            labelIcon\n          };\n          if (onClick !== void 0) {\n            validChildren.push({\n              ...baseItem,\n              onClick\n            });\n          } else if (open !== void 0) {\n            validChildren.push({\n              ...baseItem,\n              open: open.startsWith(\"/\") ? open : `/${open}`\n            });\n          } else {\n            (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(\"Custom menu item must have either onClick or open property\");\n            return;\n          }\n        } else {\n          (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.userButtonMenuItemsActionWrongsProps);\n          return;\n        }\n      }\n      if (isThatComponent(child2, MenuLinkComponent)) {\n        if (isExternalLink2(props2)) {\n          validChildren.push({ label, labelIcon, href });\n        } else {\n          (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.userButtonMenuItemLinkWrongProps);\n          return;\n        }\n      }\n    });\n  });\n  const customMenuItemLabelIcons = [];\n  const customLinkLabelIcons = [];\n  validChildren.forEach((mi, index) => {\n    if (isCustomMenuItem(mi)) {\n      customMenuItemLabelIcons.push({ component: mi.labelIcon, id: index });\n    }\n    if (isExternalLink2(mi)) {\n      customLinkLabelIcons.push({ component: mi.labelIcon, id: index });\n    }\n  });\n  const customMenuItemLabelIconsPortals = useCustomElementPortal(customMenuItemLabelIcons);\n  const customLinkLabelIconsPortals = useCustomElementPortal(customLinkLabelIcons);\n  validChildren.forEach((mi, index) => {\n    if (isReorderItem2(mi, reorderItemsLabels)) {\n      customMenuItems.push({\n        label: mi.label\n      });\n    }\n    if (isCustomMenuItem(mi)) {\n      const {\n        portal: iconPortal,\n        mount: mountIcon,\n        unmount: unmountIcon\n      } = customMenuItemLabelIconsPortals.find((p) => p.id === index);\n      const menuItem = {\n        label: mi.label,\n        mountIcon,\n        unmountIcon\n      };\n      if (\"onClick\" in mi) {\n        menuItem.onClick = mi.onClick;\n      } else if (\"open\" in mi) {\n        menuItem.open = mi.open;\n      }\n      customMenuItems.push(menuItem);\n      customMenuItemsPortals.push(iconPortal);\n    }\n    if (isExternalLink2(mi)) {\n      const {\n        portal: iconPortal,\n        mount: mountIcon,\n        unmount: unmountIcon\n      } = customLinkLabelIconsPortals.find((p) => p.id === index);\n      customMenuItems.push({\n        label: mi.label,\n        href: mi.href,\n        mountIcon,\n        unmountIcon\n      });\n      customMenuItemsPortals.push(iconPortal);\n    }\n  });\n  return { customMenuItems, customMenuItemsPortals };\n};\nvar isReorderItem2 = (childProps, validItems) => {\n  const { children, label, onClick, labelIcon } = childProps;\n  return !children && !onClick && !labelIcon && validItems.some((v) => v === label);\n};\nvar isCustomMenuItem = (childProps) => {\n  const { label, labelIcon, onClick, open } = childProps;\n  return !!labelIcon && !!label && (typeof onClick === \"function\" || typeof open === \"string\");\n};\nvar isExternalLink2 = (childProps) => {\n  const { label, href, labelIcon } = childProps;\n  return !!href && !!labelIcon && !!label;\n};\n\n// src/components/uiComponents.tsx\nvar isMountProps = (props) => {\n  return \"mount\" in props;\n};\nvar isOpenProps = (props) => {\n  return \"open\" in props;\n};\nvar Portal = class extends react__WEBPACK_IMPORTED_MODULE_5__.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.portalRef = react__WEBPACK_IMPORTED_MODULE_5__.createRef();\n  }\n  componentDidUpdate(_prevProps) {\n    var _a, _b, _c, _d;\n    if (!isMountProps(_prevProps) || !isMountProps(this.props)) {\n      return;\n    }\n    const prevProps = (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.without)(_prevProps.props, \"customPages\", \"customMenuItems\", \"children\");\n    const newProps = (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.without)(this.props.props, \"customPages\", \"customMenuItems\", \"children\");\n    const customPagesChanged = ((_a = prevProps.customPages) == null ? void 0 : _a.length) !== ((_b = newProps.customPages) == null ? void 0 : _b.length);\n    const customMenuItemsChanged = ((_c = prevProps.customMenuItems) == null ? void 0 : _c.length) !== ((_d = newProps.customMenuItems) == null ? void 0 : _d.length);\n    if (!(0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_4__.isDeeplyEqual)(prevProps, newProps) || customPagesChanged || customMenuItemsChanged) {\n      this.props.updateProps({ node: this.portalRef.current, props: this.props.props });\n    }\n  }\n  componentDidMount() {\n    if (this.portalRef.current) {\n      if (isMountProps(this.props)) {\n        this.props.mount(this.portalRef.current, this.props.props);\n      }\n      if (isOpenProps(this.props)) {\n        this.props.open(this.props.props);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (this.portalRef.current) {\n      if (isMountProps(this.props)) {\n        this.props.unmount(this.portalRef.current);\n      }\n      if (isOpenProps(this.props)) {\n        this.props.close();\n      }\n    }\n  }\n  render() {\n    var _a, _b, _c, _d;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\"div\", { ref: this.portalRef }), isMountProps(this.props) && ((_b = (_a = this.props) == null ? void 0 : _a.customPagesPortals) == null ? void 0 : _b.map((portal, index) => (0,react__WEBPACK_IMPORTED_MODULE_5__.createElement)(portal, { key: index }))), isMountProps(this.props) && ((_d = (_c = this.props) == null ? void 0 : _c.customMenuItemsPortals) == null ? void 0 : _d.map((portal, index) => (0,react__WEBPACK_IMPORTED_MODULE_5__.createElement)(portal, { key: index }))));\n  }\n};\nvar SignIn = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, ...props }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\n    Portal,\n    {\n      mount: clerk.mountSignIn,\n      unmount: clerk.unmountSignIn,\n      updateProps: clerk.__unstable__updateProps,\n      props\n    }\n  );\n}, \"SignIn\");\nvar SignUp = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, ...props }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\n    Portal,\n    {\n      mount: clerk.mountSignUp,\n      unmount: clerk.unmountSignUp,\n      updateProps: clerk.__unstable__updateProps,\n      props\n    }\n  );\n}, \"SignUp\");\nfunction UserProfilePage({ children }) {\n  (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.userProfilePageRenderedError);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n}\nfunction UserProfileLink({ children }) {\n  (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.userProfileLinkRenderedError);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n}\nvar _UserProfile = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, ...props }) => {\n    const { customPages, customPagesPortals } = useUserProfileCustomPages(props.children);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\n      Portal,\n      {\n        mount: clerk.mountUserProfile,\n        unmount: clerk.unmountUserProfile,\n        updateProps: clerk.__unstable__updateProps,\n        props: { ...props, customPages },\n        customPagesPortals\n      }\n    );\n  },\n  \"UserProfile\"\n);\nvar UserProfile = Object.assign(_UserProfile, {\n  Page: UserProfilePage,\n  Link: UserProfileLink\n});\nvar _UserButton = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, ...props }) => {\n    const { customPages, customPagesPortals } = useUserProfileCustomPages(props.children);\n    const userProfileProps = Object.assign(props.userProfileProps || {}, { customPages });\n    const { customMenuItems, customMenuItemsPortals } = useUserButtonCustomMenuItems(props.children);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\n      Portal,\n      {\n        mount: clerk.mountUserButton,\n        unmount: clerk.unmountUserButton,\n        updateProps: clerk.__unstable__updateProps,\n        props: { ...props, userProfileProps, customMenuItems },\n        customPagesPortals,\n        customMenuItemsPortals\n      }\n    );\n  },\n  \"UserButton\"\n);\nfunction MenuItems({ children }) {\n  (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.userButtonMenuItemsRenderedError);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n}\nfunction MenuAction({ children }) {\n  (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.userButtonMenuActionRenderedError);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n}\nfunction MenuLink({ children }) {\n  (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.userButtonMenuLinkRenderedError);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n}\nvar UserButton = Object.assign(_UserButton, {\n  UserProfilePage,\n  UserProfileLink,\n  MenuItems,\n  Action: MenuAction,\n  Link: MenuLink\n});\nfunction OrganizationProfilePage({ children }) {\n  (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.organizationProfilePageRenderedError);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n}\nfunction OrganizationProfileLink({ children }) {\n  (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_3__.logErrorInDevMode)(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.organizationProfileLinkRenderedError);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n}\nvar _OrganizationProfile = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, ...props }) => {\n    const { customPages, customPagesPortals } = useOrganizationProfileCustomPages(props.children);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\n      Portal,\n      {\n        mount: clerk.mountOrganizationProfile,\n        unmount: clerk.unmountOrganizationProfile,\n        updateProps: clerk.__unstable__updateProps,\n        props: { ...props, customPages },\n        customPagesPortals\n      }\n    );\n  },\n  \"OrganizationProfile\"\n);\nvar OrganizationProfile = Object.assign(_OrganizationProfile, {\n  Page: OrganizationProfilePage,\n  Link: OrganizationProfileLink\n});\nvar CreateOrganization = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, ...props }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\n    Portal,\n    {\n      mount: clerk.mountCreateOrganization,\n      unmount: clerk.unmountCreateOrganization,\n      updateProps: clerk.__unstable__updateProps,\n      props\n    }\n  );\n}, \"CreateOrganization\");\nvar _OrganizationSwitcher = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, ...props }) => {\n    const { customPages, customPagesPortals } = useOrganizationProfileCustomPages(props.children);\n    const organizationProfileProps = Object.assign(props.organizationProfileProps || {}, { customPages });\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\n      Portal,\n      {\n        mount: clerk.mountOrganizationSwitcher,\n        unmount: clerk.unmountOrganizationSwitcher,\n        updateProps: clerk.__unstable__updateProps,\n        props: { ...props, organizationProfileProps },\n        customPagesPortals\n      }\n    );\n  },\n  \"OrganizationSwitcher\"\n);\nvar OrganizationSwitcher = Object.assign(_OrganizationSwitcher, {\n  OrganizationProfilePage,\n  OrganizationProfileLink\n});\nvar OrganizationList = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, ...props }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\n    Portal,\n    {\n      mount: clerk.mountOrganizationList,\n      unmount: clerk.unmountOrganizationList,\n      updateProps: clerk.__unstable__updateProps,\n      props\n    }\n  );\n}, \"OrganizationList\");\nvar GoogleOneTap = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, ...props }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\n    Portal,\n    {\n      open: clerk.openGoogleOneTap,\n      close: clerk.closeGoogleOneTap,\n      props\n    }\n  );\n}, \"GoogleOneTap\");\n\n// src/components/SignInButton.tsx\n\nvar SignInButton = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, children, ...props }) => {\n  const { signUpFallbackRedirectUrl, forceRedirectUrl, fallbackRedirectUrl, signUpForceRedirectUrl, mode, ...rest } = props;\n  children = normalizeWithDefaultValue(children, \"Sign in\");\n  const child = assertSingleChild(children)(\"SignInButton\");\n  const clickHandler = () => {\n    const opts = {\n      forceRedirectUrl,\n      fallbackRedirectUrl,\n      signUpFallbackRedirectUrl,\n      signUpForceRedirectUrl\n    };\n    if (mode === \"modal\") {\n      return clerk.openSignIn(opts);\n    }\n    return clerk.redirectToSignIn({\n      ...opts,\n      signInFallbackRedirectUrl: fallbackRedirectUrl,\n      signInForceRedirectUrl: forceRedirectUrl\n    });\n  };\n  const wrappedChildClickHandler = async (e) => {\n    if (child && typeof child === \"object\" && \"props\" in child) {\n      await safeExecute(child.props.onClick)(e);\n    }\n    return clickHandler();\n  };\n  const childProps = { ...rest, onClick: wrappedChildClickHandler };\n  return react__WEBPACK_IMPORTED_MODULE_5__.cloneElement(child, childProps);\n}, \"SignInButton\");\n\n// src/components/SignUpButton.tsx\n\nvar SignUpButton = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, children, ...props }) => {\n  const {\n    fallbackRedirectUrl,\n    forceRedirectUrl,\n    signInFallbackRedirectUrl,\n    signInForceRedirectUrl,\n    mode,\n    unsafeMetadata,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign up\");\n  const child = assertSingleChild(children)(\"SignUpButton\");\n  const clickHandler = () => {\n    const opts = {\n      fallbackRedirectUrl,\n      forceRedirectUrl,\n      signInFallbackRedirectUrl,\n      signInForceRedirectUrl,\n      unsafeMetadata\n    };\n    if (mode === \"modal\") {\n      return clerk.openSignUp(opts);\n    }\n    return clerk.redirectToSignUp({\n      ...opts,\n      signUpFallbackRedirectUrl: fallbackRedirectUrl,\n      signUpForceRedirectUrl: forceRedirectUrl\n    });\n  };\n  const wrappedChildClickHandler = async (e) => {\n    if (child && typeof child === \"object\" && \"props\" in child) {\n      await safeExecute(child.props.onClick)(e);\n    }\n    return clickHandler();\n  };\n  const childProps = { ...rest, onClick: wrappedChildClickHandler };\n  return react__WEBPACK_IMPORTED_MODULE_5__.cloneElement(child, childProps);\n}, \"SignUpButton\");\n\n// src/components/SignOutButton.tsx\n\nvar SignOutButton = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, children, ...props }) => {\n    const { redirectUrl = \"/\", signOutOptions, ...rest } = props;\n    children = normalizeWithDefaultValue(children, \"Sign out\");\n    const child = assertSingleChild(children)(\"SignOutButton\");\n    const clickHandler = () => clerk.signOut({ redirectUrl });\n    const wrappedChildClickHandler = async (e) => {\n      await safeExecute(child.props.onClick)(e);\n      return clickHandler();\n    };\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return react__WEBPACK_IMPORTED_MODULE_5__.cloneElement(child, childProps);\n  },\n  \"SignOutButton\"\n);\n\n// src/components/SignInWithMetamaskButton.tsx\n\nvar SignInWithMetamaskButton = (0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, children, ...props }) => {\n    const { redirectUrl, ...rest } = props;\n    children = normalizeWithDefaultValue(children, \"Sign in with Metamask\");\n    const child = assertSingleChild(children)(\"SignInWithMetamaskButton\");\n    const clickHandler = async () => {\n      async function authenticate() {\n        await clerk.authenticateWithMetamask({ redirectUrl: redirectUrl || void 0 });\n      }\n      void authenticate();\n    };\n    const wrappedChildClickHandler = async (e) => {\n      await safeExecute(child.props.onClick)(e);\n      return clickHandler();\n    };\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return react__WEBPACK_IMPORTED_MODULE_5__.cloneElement(child, childProps);\n  },\n  \"SignInWithMetamask\"\n);\n\n// src/contexts/ClerkProvider.tsx\n\n\n\n// src/contexts/ClerkContextProvider.tsx\n\n\n\n// src/isomorphicClerk.ts\n\n\n\nvar SDK_METADATA = {\n  name: \"@clerk/clerk-react\",\n  version: \"5.11.1\",\n  environment: \"development\"\n};\nvar _loaded, _domain, _proxyUrl, _publishableKey, _instance, _IsomorphicClerk_instances, waitForClerkJS_fn;\nvar _IsomorphicClerk = class _IsomorphicClerk {\n  constructor(options) {\n    (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _IsomorphicClerk_instances);\n    this.clerkjs = null;\n    this.preopenOneTap = null;\n    this.preopenUserVerification = null;\n    this.preopenSignIn = null;\n    this.preopenSignUp = null;\n    this.preopenUserProfile = null;\n    this.preopenOrganizationProfile = null;\n    this.preopenCreateOrganization = null;\n    this.premountSignInNodes = /* @__PURE__ */ new Map();\n    this.premountSignUpNodes = /* @__PURE__ */ new Map();\n    this.premountUserProfileNodes = /* @__PURE__ */ new Map();\n    this.premountUserButtonNodes = /* @__PURE__ */ new Map();\n    this.premountOrganizationProfileNodes = /* @__PURE__ */ new Map();\n    this.premountCreateOrganizationNodes = /* @__PURE__ */ new Map();\n    this.premountOrganizationSwitcherNodes = /* @__PURE__ */ new Map();\n    this.premountOrganizationListNodes = /* @__PURE__ */ new Map();\n    this.premountMethodCalls = /* @__PURE__ */ new Map();\n    // A separate Map of `addListener` method calls to handle multiple listeners.\n    this.premountAddListenerCalls = /* @__PURE__ */ new Map();\n    this.loadedListeners = [];\n    (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _loaded, false);\n    (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _domain);\n    (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _proxyUrl);\n    (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _publishableKey);\n    this.buildSignInUrl = (opts) => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildSignInUrl(opts)) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildSignInUrl\", callback);\n      }\n    };\n    this.buildSignUpUrl = (opts) => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildSignUpUrl(opts)) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildSignUpUrl\", callback);\n      }\n    };\n    this.buildAfterSignInUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignInUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignInUrl\", callback);\n      }\n    };\n    this.buildAfterSignUpUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignUpUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignUpUrl\", callback);\n      }\n    };\n    this.buildAfterSignOutUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignOutUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignOutUrl\", callback);\n      }\n    };\n    this.buildAfterMultiSessionSingleSignOutUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterMultiSessionSingleSignOutUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterMultiSessionSingleSignOutUrl\", callback);\n      }\n    };\n    this.buildUserProfileUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildUserProfileUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildUserProfileUrl\", callback);\n      }\n    };\n    this.buildCreateOrganizationUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildCreateOrganizationUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildCreateOrganizationUrl\", callback);\n      }\n    };\n    this.buildOrganizationProfileUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildOrganizationProfileUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildOrganizationProfileUrl\", callback);\n      }\n    };\n    this.buildUrlWithAuth = (to) => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildUrlWithAuth(to)) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildUrlWithAuth\", callback);\n      }\n    };\n    this.handleUnauthenticated = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.handleUnauthenticated();\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"handleUnauthenticated\", callback);\n      }\n    };\n    this.addOnLoaded = (cb) => {\n      this.loadedListeners.push(cb);\n      if (this.loaded) {\n        this.emitLoaded();\n      }\n    };\n    this.emitLoaded = () => {\n      this.loadedListeners.forEach((cb) => cb());\n      this.loadedListeners = [];\n    };\n    this.hydrateClerkJS = (clerkjs) => {\n      if (!clerkjs) {\n        throw new Error(\"Failed to hydrate latest Clerk JS\");\n      }\n      this.clerkjs = clerkjs;\n      this.premountMethodCalls.forEach((cb) => cb());\n      this.premountAddListenerCalls.forEach((listenerHandlers, listener) => {\n        listenerHandlers.nativeUnsubscribe = clerkjs.addListener(listener);\n      });\n      if (this.preopenSignIn !== null) {\n        clerkjs.openSignIn(this.preopenSignIn);\n      }\n      if (this.preopenSignUp !== null) {\n        clerkjs.openSignUp(this.preopenSignUp);\n      }\n      if (this.preopenUserProfile !== null) {\n        clerkjs.openUserProfile(this.preopenUserProfile);\n      }\n      if (this.preopenUserVerification !== null) {\n        clerkjs.__experimental_openUserVerification(this.preopenUserVerification);\n      }\n      if (this.preopenOneTap !== null) {\n        clerkjs.openGoogleOneTap(this.preopenOneTap);\n      }\n      if (this.preopenOrganizationProfile !== null) {\n        clerkjs.openOrganizationProfile(this.preopenOrganizationProfile);\n      }\n      if (this.preopenCreateOrganization !== null) {\n        clerkjs.openCreateOrganization(this.preopenCreateOrganization);\n      }\n      this.premountSignInNodes.forEach((props, node) => {\n        clerkjs.mountSignIn(node, props);\n      });\n      this.premountSignUpNodes.forEach((props, node) => {\n        clerkjs.mountSignUp(node, props);\n      });\n      this.premountUserProfileNodes.forEach((props, node) => {\n        clerkjs.mountUserProfile(node, props);\n      });\n      this.premountUserButtonNodes.forEach((props, node) => {\n        clerkjs.mountUserButton(node, props);\n      });\n      this.premountOrganizationListNodes.forEach((props, node) => {\n        clerkjs.mountOrganizationList(node, props);\n      });\n      (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _loaded, true);\n      this.emitLoaded();\n      return this.clerkjs;\n    };\n    this.__unstable__updateProps = async (props) => {\n      const clerkjs = await (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateMethod)(this, _IsomorphicClerk_instances, waitForClerkJS_fn).call(this);\n      if (clerkjs && \"__unstable__updateProps\" in clerkjs) {\n        return clerkjs.__unstable__updateProps(props);\n      }\n    };\n    /**\n     * `setActive` can be used to set the active session and/or organization.\n     */\n    this.setActive = ({ session, organization, beforeEmit }) => {\n      if (this.clerkjs) {\n        return this.clerkjs.setActive({ session, organization, beforeEmit });\n      } else {\n        return Promise.reject();\n      }\n    };\n    this.openSignIn = (props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.openSignIn(props);\n      } else {\n        this.preopenSignIn = props;\n      }\n    };\n    this.closeSignIn = () => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.closeSignIn();\n      } else {\n        this.preopenSignIn = null;\n      }\n    };\n    this.__experimental_openUserVerification = (props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.__experimental_openUserVerification(props);\n      } else {\n        this.preopenUserVerification = props;\n      }\n    };\n    this.__experimental_closeUserVerification = () => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.__experimental_closeUserVerification();\n      } else {\n        this.preopenUserVerification = null;\n      }\n    };\n    this.openGoogleOneTap = (props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.openGoogleOneTap(props);\n      } else {\n        this.preopenOneTap = props;\n      }\n    };\n    this.closeGoogleOneTap = () => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.closeGoogleOneTap();\n      } else {\n        this.preopenOneTap = null;\n      }\n    };\n    this.openUserProfile = (props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.openUserProfile(props);\n      } else {\n        this.preopenUserProfile = props;\n      }\n    };\n    this.closeUserProfile = () => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.closeUserProfile();\n      } else {\n        this.preopenUserProfile = null;\n      }\n    };\n    this.openOrganizationProfile = (props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.openOrganizationProfile(props);\n      } else {\n        this.preopenOrganizationProfile = props;\n      }\n    };\n    this.closeOrganizationProfile = () => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.closeOrganizationProfile();\n      } else {\n        this.preopenOrganizationProfile = null;\n      }\n    };\n    this.openCreateOrganization = (props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.openCreateOrganization(props);\n      } else {\n        this.preopenCreateOrganization = props;\n      }\n    };\n    this.closeCreateOrganization = () => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.closeCreateOrganization();\n      } else {\n        this.preopenCreateOrganization = null;\n      }\n    };\n    this.openSignUp = (props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.openSignUp(props);\n      } else {\n        this.preopenSignUp = props;\n      }\n    };\n    this.closeSignUp = () => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.closeSignUp();\n      } else {\n        this.preopenSignUp = null;\n      }\n    };\n    this.mountSignIn = (node, props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountSignIn(node, props);\n      } else {\n        this.premountSignInNodes.set(node, props);\n      }\n    };\n    this.unmountSignIn = (node) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountSignIn(node);\n      } else {\n        this.premountSignInNodes.delete(node);\n      }\n    };\n    this.mountSignUp = (node, props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountSignUp(node, props);\n      } else {\n        this.premountSignUpNodes.set(node, props);\n      }\n    };\n    this.unmountSignUp = (node) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountSignUp(node);\n      } else {\n        this.premountSignUpNodes.delete(node);\n      }\n    };\n    this.mountUserProfile = (node, props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountUserProfile(node, props);\n      } else {\n        this.premountUserProfileNodes.set(node, props);\n      }\n    };\n    this.unmountUserProfile = (node) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountUserProfile(node);\n      } else {\n        this.premountUserProfileNodes.delete(node);\n      }\n    };\n    this.mountOrganizationProfile = (node, props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountOrganizationProfile(node, props);\n      } else {\n        this.premountOrganizationProfileNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationProfile = (node) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountOrganizationProfile(node);\n      } else {\n        this.premountOrganizationProfileNodes.delete(node);\n      }\n    };\n    this.mountCreateOrganization = (node, props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountCreateOrganization(node, props);\n      } else {\n        this.premountCreateOrganizationNodes.set(node, props);\n      }\n    };\n    this.unmountCreateOrganization = (node) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountCreateOrganization(node);\n      } else {\n        this.premountCreateOrganizationNodes.delete(node);\n      }\n    };\n    this.mountOrganizationSwitcher = (node, props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountOrganizationSwitcher(node, props);\n      } else {\n        this.premountOrganizationSwitcherNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationSwitcher = (node) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountOrganizationSwitcher(node);\n      } else {\n        this.premountOrganizationSwitcherNodes.delete(node);\n      }\n    };\n    this.mountOrganizationList = (node, props) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountOrganizationList(node, props);\n      } else {\n        this.premountOrganizationListNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationList = (node) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountOrganizationList(node);\n      } else {\n        this.premountOrganizationListNodes.delete(node);\n      }\n    };\n    this.mountUserButton = (node, userButtonProps) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountUserButton(node, userButtonProps);\n      } else {\n        this.premountUserButtonNodes.set(node, userButtonProps);\n      }\n    };\n    this.unmountUserButton = (node) => {\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountUserButton(node);\n      } else {\n        this.premountUserButtonNodes.delete(node);\n      }\n    };\n    this.addListener = (listener) => {\n      if (this.clerkjs) {\n        return this.clerkjs.addListener(listener);\n      } else {\n        const unsubscribe = () => {\n          var _a;\n          const listenerHandlers = this.premountAddListenerCalls.get(listener);\n          if (listenerHandlers) {\n            (_a = listenerHandlers.nativeUnsubscribe) == null ? void 0 : _a.call(listenerHandlers);\n            this.premountAddListenerCalls.delete(listener);\n          }\n        };\n        this.premountAddListenerCalls.set(listener, { unsubscribe, nativeUnsubscribe: void 0 });\n        return unsubscribe;\n      }\n    };\n    this.navigate = (to) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.navigate(to);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"navigate\", callback);\n      }\n    };\n    this.redirectWithAuth = async (...args) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectWithAuth(...args);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectWithAuth\", callback);\n        return;\n      }\n    };\n    this.redirectToSignIn = async (opts) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToSignIn(opts);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToSignIn\", callback);\n        return;\n      }\n    };\n    this.redirectToSignUp = async (opts) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToSignUp(opts);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToSignUp\", callback);\n        return;\n      }\n    };\n    this.redirectToUserProfile = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToUserProfile();\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToUserProfile\", callback);\n        return;\n      }\n    };\n    this.redirectToAfterSignUp = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignUp();\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignUp\", callback);\n      }\n    };\n    this.redirectToAfterSignIn = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignIn();\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignIn\", callback);\n      }\n    };\n    this.redirectToAfterSignOut = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignOut();\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignOut\", callback);\n      }\n    };\n    this.redirectToOrganizationProfile = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToOrganizationProfile();\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToOrganizationProfile\", callback);\n        return;\n      }\n    };\n    this.redirectToCreateOrganization = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToCreateOrganization();\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToCreateOrganization\", callback);\n        return;\n      }\n    };\n    this.handleRedirectCallback = (params) => {\n      var _a;\n      const callback = () => {\n        var _a2;\n        return (_a2 = this.clerkjs) == null ? void 0 : _a2.handleRedirectCallback(params);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        void ((_a = callback()) == null ? void 0 : _a.catch(() => {\n        }));\n      } else {\n        this.premountMethodCalls.set(\"handleRedirectCallback\", callback);\n      }\n    };\n    this.handleGoogleOneTapCallback = (signInOrUp, params) => {\n      var _a;\n      const callback = () => {\n        var _a2;\n        return (_a2 = this.clerkjs) == null ? void 0 : _a2.handleGoogleOneTapCallback(signInOrUp, params);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        void ((_a = callback()) == null ? void 0 : _a.catch(() => {\n        }));\n      } else {\n        this.premountMethodCalls.set(\"handleGoogleOneTapCallback\", callback);\n      }\n    };\n    this.handleEmailLinkVerification = async (params) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.handleEmailLinkVerification(params);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"handleEmailLinkVerification\", callback);\n      }\n    };\n    this.authenticateWithMetamask = async (params) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithMetamask(params);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithMetamask\", callback);\n      }\n    };\n    this.authenticateWithCoinbaseWallet = async (params) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithCoinbaseWallet(params);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithCoinbaseWallet\", callback);\n      }\n    };\n    this.authenticateWithWeb3 = async (params) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithWeb3(params);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithWeb3\", callback);\n      }\n    };\n    this.authenticateWithGoogleOneTap = async (params) => {\n      const clerkjs = await (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateMethod)(this, _IsomorphicClerk_instances, waitForClerkJS_fn).call(this);\n      return clerkjs.authenticateWithGoogleOneTap(params);\n    };\n    this.createOrganization = async (params) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.createOrganization(params);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"createOrganization\", callback);\n      }\n    };\n    this.getOrganization = async (organizationId) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.getOrganization(organizationId);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"getOrganization\", callback);\n      }\n    };\n    this.signOut = async (signOutCallbackOrOptions, options) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.signOut(signOutCallbackOrOptions, options);\n      };\n      if (this.clerkjs && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"signOut\", callback);\n      }\n    };\n    const { Clerk = null, publishableKey } = options || {};\n    (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _publishableKey, publishableKey);\n    (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _proxyUrl, options == null ? void 0 : options.proxyUrl);\n    (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _domain, options == null ? void 0 : options.domain);\n    this.options = options;\n    this.Clerk = Clerk;\n    this.mode = (0,_clerk_shared_browser__WEBPACK_IMPORTED_MODULE_8__.inBrowser)() ? \"browser\" : \"server\";\n    if (!this.options.sdkMetadata) {\n      this.options.sdkMetadata = SDK_METADATA;\n    }\n    void this.loadClerkJS();\n  }\n  get publishableKey() {\n    return (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _publishableKey);\n  }\n  get loaded() {\n    return (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded);\n  }\n  static getOrCreateInstance(options) {\n    if (!(0,_clerk_shared_browser__WEBPACK_IMPORTED_MODULE_8__.inBrowser)() || !(0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _instance) || options.Clerk && (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _instance).Clerk !== options.Clerk) {\n      (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _instance, new _IsomorphicClerk(options));\n    }\n    return (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _instance);\n  }\n  static clearInstance() {\n    (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _instance, null);\n  }\n  get domain() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_9__.handleValueOrFn)((0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _domain), new URL(window.location.href), \"\");\n    }\n    if (typeof (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _domain) === \"function\") {\n      return _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throw(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _domain) || \"\";\n  }\n  get proxyUrl() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_9__.handleValueOrFn)((0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _proxyUrl), new URL(window.location.href), \"\");\n    }\n    if (typeof (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _proxyUrl) === \"function\") {\n      return _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throw(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _proxyUrl) || \"\";\n  }\n  get sdkMetadata() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.sdkMetadata) || this.options.sdkMetadata || void 0;\n  }\n  get instanceType() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.instanceType;\n  }\n  get frontendApi() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.frontendApi) || \"\";\n  }\n  get isStandardBrowser() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.isStandardBrowser) || this.options.standardBrowser || false;\n  }\n  get isSatellite() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_9__.handleValueOrFn)(this.options.isSatellite, new URL(window.location.href), false);\n    }\n    if (typeof this.options.isSatellite === \"function\") {\n      return _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throw(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return false;\n  }\n  async loadClerkJS() {\n    var _a;\n    if (this.mode !== \"browser\" || (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n      return;\n    }\n    if (typeof window !== \"undefined\") {\n      window.__clerk_publishable_key = (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _publishableKey);\n      window.__clerk_proxy_url = this.proxyUrl;\n      window.__clerk_domain = this.domain;\n    }\n    try {\n      if (this.Clerk) {\n        let c;\n        if (isConstructor(this.Clerk)) {\n          c = new this.Clerk((0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _publishableKey), {\n            proxyUrl: this.proxyUrl,\n            domain: this.domain\n          });\n          await c.load(this.options);\n        } else {\n          c = this.Clerk;\n          if (!c.loaded) {\n            await c.load(this.options);\n          }\n        }\n        global.Clerk = c;\n      } else {\n        if (!global.Clerk) {\n          await (0,_clerk_shared_loadClerkJsScript__WEBPACK_IMPORTED_MODULE_2__.loadClerkJsScript)({\n            ...this.options,\n            publishableKey: (0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _publishableKey),\n            proxyUrl: this.proxyUrl,\n            domain: this.domain,\n            nonce: this.options.nonce\n          });\n        }\n        if (!global.Clerk) {\n          throw new Error(\"Failed to download latest ClerkJS. Contact support@clerk.com.\");\n        }\n        await global.Clerk.load(this.options);\n      }\n      if ((_a = global.Clerk) == null ? void 0 : _a.loaded) {\n        return this.hydrateClerkJS(global.Clerk);\n      }\n      return;\n    } catch (err) {\n      const error = err;\n      if (false) {} else {\n        throw err;\n      }\n      return;\n    }\n  }\n  get version() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.version;\n  }\n  get client() {\n    if (this.clerkjs) {\n      return this.clerkjs.client;\n    } else {\n      return void 0;\n    }\n  }\n  get session() {\n    if (this.clerkjs) {\n      return this.clerkjs.session;\n    } else {\n      return void 0;\n    }\n  }\n  get user() {\n    if (this.clerkjs) {\n      return this.clerkjs.user;\n    } else {\n      return void 0;\n    }\n  }\n  get organization() {\n    if (this.clerkjs) {\n      return this.clerkjs.organization;\n    } else {\n      return void 0;\n    }\n  }\n  get telemetry() {\n    if (this.clerkjs) {\n      return this.clerkjs.telemetry;\n    } else {\n      return void 0;\n    }\n  }\n  get __unstable__environment() {\n    if (this.clerkjs) {\n      return this.clerkjs.__unstable__environment;\n    } else {\n      return void 0;\n    }\n  }\n  __unstable__setEnvironment(...args) {\n    if (this.clerkjs && \"__unstable__setEnvironment\" in this.clerkjs) {\n      this.clerkjs.__unstable__setEnvironment(args);\n    } else {\n      return void 0;\n    }\n  }\n};\n_loaded = new WeakMap();\n_domain = new WeakMap();\n_proxyUrl = new WeakMap();\n_publishableKey = new WeakMap();\n_instance = new WeakMap();\n_IsomorphicClerk_instances = new WeakSet();\nwaitForClerkJS_fn = function() {\n  return new Promise((resolve) => {\n    this.addOnLoaded(() => resolve(this.clerkjs));\n  });\n};\n(0,_chunk_OANWQR3B_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(_IsomorphicClerk, _instance);\nvar IsomorphicClerk = _IsomorphicClerk;\n\n// src/utils/deriveState.ts\nvar deriveState = (clerkLoaded, state, initialState) => {\n  if (!clerkLoaded && initialState) {\n    return deriveFromSsrInitialState(initialState);\n  }\n  return deriveFromClientSideState(state);\n};\nvar deriveFromSsrInitialState = (initialState) => {\n  const userId = initialState.userId;\n  const user = initialState.user;\n  const sessionId = initialState.sessionId;\n  const session = initialState.session;\n  const organization = initialState.organization;\n  const orgId = initialState.orgId;\n  const orgRole = initialState.orgRole;\n  const orgPermissions = initialState.orgPermissions;\n  const orgSlug = initialState.orgSlug;\n  const actor = initialState.actor;\n  const __experimental_factorVerificationAge = initialState.__experimental_factorVerificationAge;\n  return {\n    userId,\n    user,\n    sessionId,\n    session,\n    organization,\n    orgId,\n    orgRole,\n    orgPermissions,\n    orgSlug,\n    actor,\n    __experimental_factorVerificationAge\n  };\n};\nvar deriveFromClientSideState = (state) => {\n  var _a;\n  const userId = state.user ? state.user.id : state.user;\n  const user = state.user;\n  const sessionId = state.session ? state.session.id : state.session;\n  const session = state.session;\n  const __experimental_factorVerificationAge = state.session ? state.session.__experimental_factorVerificationAge : null;\n  const actor = session == null ? void 0 : session.actor;\n  const organization = state.organization;\n  const orgId = state.organization ? state.organization.id : state.organization;\n  const orgSlug = organization == null ? void 0 : organization.slug;\n  const membership = organization ? (_a = user == null ? void 0 : user.organizationMemberships) == null ? void 0 : _a.find((om) => om.organization.id === orgId) : organization;\n  const orgPermissions = membership ? membership.permissions : membership;\n  const orgRole = membership ? membership.role : membership;\n  return {\n    userId,\n    user,\n    sessionId,\n    session,\n    organization,\n    orgId,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    actor,\n    __experimental_factorVerificationAge\n  };\n};\n\n// src/contexts/ClerkContextProvider.tsx\nfunction ClerkContextProvider(props) {\n  const { isomorphicClerkOptions, initialState, children } = props;\n  const { isomorphicClerk: clerk, loaded: clerkLoaded } = useLoadedIsomorphicClerk(isomorphicClerkOptions);\n  const [state, setState] = react__WEBPACK_IMPORTED_MODULE_5__.useState({\n    client: clerk.client,\n    session: clerk.session,\n    user: clerk.user,\n    organization: clerk.organization\n  });\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    return clerk.addListener((e) => setState({ ...e }));\n  }, []);\n  const derivedState = deriveState(clerkLoaded, state, initialState);\n  const clerkCtx = react__WEBPACK_IMPORTED_MODULE_5__.useMemo(() => ({ value: clerk }), [clerkLoaded]);\n  const clientCtx = react__WEBPACK_IMPORTED_MODULE_5__.useMemo(() => ({ value: state.client }), [state.client]);\n  const {\n    sessionId,\n    session,\n    userId,\n    user,\n    orgId,\n    actor,\n    organization,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    __experimental_factorVerificationAge\n  } = derivedState;\n  const authCtx = react__WEBPACK_IMPORTED_MODULE_5__.useMemo(() => {\n    const value = {\n      sessionId,\n      userId,\n      actor,\n      orgId,\n      orgRole,\n      orgSlug,\n      orgPermissions,\n      __experimental_factorVerificationAge\n    };\n    return { value };\n  }, [sessionId, userId, actor, orgId, orgRole, orgSlug, __experimental_factorVerificationAge]);\n  const sessionCtx = react__WEBPACK_IMPORTED_MODULE_5__.useMemo(() => ({ value: session }), [sessionId, session]);\n  const userCtx = react__WEBPACK_IMPORTED_MODULE_5__.useMemo(() => ({ value: user }), [userId, user]);\n  const organizationCtx = react__WEBPACK_IMPORTED_MODULE_5__.useMemo(() => {\n    const value = {\n      organization\n    };\n    return { value };\n  }, [orgId, organization]);\n  return (\n    // @ts-expect-error value passed is of type IsomorphicClerk where the context expects LoadedClerk\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.IsomorphicClerkContext.Provider, { value: clerkCtx }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(_clerk_shared_react__WEBPACK_IMPORTED_MODULE_4__.ClientContext.Provider, { value: clientCtx }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(_clerk_shared_react__WEBPACK_IMPORTED_MODULE_4__.SessionContext.Provider, { value: sessionCtx }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(_clerk_shared_react__WEBPACK_IMPORTED_MODULE_4__.OrganizationProvider, { ...organizationCtx.value }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthContext.Provider, { value: authCtx }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(_clerk_shared_react__WEBPACK_IMPORTED_MODULE_4__.UserContext.Provider, { value: userCtx }, children))))))\n  );\n}\nvar useLoadedIsomorphicClerk = (options) => {\n  const [loaded, setLoaded] = react__WEBPACK_IMPORTED_MODULE_5__.useState(false);\n  const isomorphicClerk = react__WEBPACK_IMPORTED_MODULE_5__.useMemo(() => IsomorphicClerk.getOrCreateInstance(options), []);\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    void isomorphicClerk.__unstable__updateProps({ appearance: options.appearance });\n  }, [options.appearance]);\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    void isomorphicClerk.__unstable__updateProps({ options });\n  }, [options.localization]);\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    isomorphicClerk.addOnLoaded(() => setLoaded(true));\n  }, []);\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    return () => {\n      IsomorphicClerk.clearInstance();\n    };\n  }, []);\n  return { isomorphicClerk, loaded };\n};\n\n// src/contexts/ClerkProvider.tsx\nfunction ClerkProviderBase(props) {\n  const { initialState, children, ...restIsomorphicClerkOptions } = props;\n  const { publishableKey = \"\", Clerk: userInitialisedClerk } = restIsomorphicClerkOptions;\n  if (!userInitialisedClerk) {\n    if (!publishableKey) {\n      _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwMissingPublishableKeyError();\n    } else if (publishableKey && !(0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_7__.isPublishableKey)(publishableKey)) {\n      _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwInvalidPublishableKeyError({ key: publishableKey });\n    }\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\n    ClerkContextProvider,\n    {\n      initialState,\n      isomorphicClerkOptions: restIsomorphicClerkOptions\n    },\n    children\n  );\n}\nvar ClerkProvider = withMaxAllowedInstancesGuard(ClerkProviderBase, \"ClerkProvider\", _chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleClerkProvidersError);\nClerkProvider.displayName = \"ClerkProvider\";\n\n// src/index.ts\n(0,_chunk_LVLBRUHJ_mjs__WEBPACK_IMPORTED_MODULE_0__.setErrorThrowerOptions)({ packageName: \"@clerk/clerk-react\" });\n(0,_clerk_shared_loadClerkJsScript__WEBPACK_IMPORTED_MODULE_2__.setClerkJsLoadingErrorPackageName)(\"@clerk/clerk-react\");\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-35XMYW3R.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@clerk/elements/dist/chunk-35XMYW3R.mjs ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CAPTCHA_ELEMENT_ID: function() { return /* binding */ CAPTCHA_ELEMENT_ID; },\n/* harmony export */   ClerkElementsError: function() { return /* binding */ ClerkElementsError; },\n/* harmony export */   ClerkElementsRuntimeError: function() { return /* binding */ ClerkElementsRuntimeError; },\n/* harmony export */   Connection: function() { return /* binding */ Connection; },\n/* harmony export */   ERROR_CODES: function() { return /* binding */ ERROR_CODES; },\n/* harmony export */   Field: function() { return /* binding */ Field; },\n/* harmony export */   FieldError: function() { return /* binding */ FieldError; },\n/* harmony export */   FieldState: function() { return /* binding */ FieldState; },\n/* harmony export */   Form: function() { return /* binding */ Form; },\n/* harmony export */   FormStoreProvider: function() { return /* binding */ FormStoreProvider; },\n/* harmony export */   GlobalError: function() { return /* binding */ GlobalError; },\n/* harmony export */   Icon: function() { return /* binding */ Icon; },\n/* harmony export */   Input: function() { return /* binding */ Input; },\n/* harmony export */   Label: function() { return /* binding */ Label; },\n/* harmony export */   Loading: function() { return /* binding */ Loading; },\n/* harmony export */   MAGIC_LINK_VERIFY_PATH_ROUTE: function() { return /* binding */ MAGIC_LINK_VERIFY_PATH_ROUTE; },\n/* harmony export */   RESENDABLE_COUNTDOWN_DEFAULT: function() { return /* binding */ RESENDABLE_COUNTDOWN_DEFAULT; },\n/* harmony export */   ROUTING: function() { return /* binding */ ROUTING; },\n/* harmony export */   SEARCH_PARAMS: function() { return /* binding */ SEARCH_PARAMS; },\n/* harmony export */   SIGN_IN_DEFAULT_BASE_PATH: function() { return /* binding */ SIGN_IN_DEFAULT_BASE_PATH; },\n/* harmony export */   SIGN_UP_DEFAULT_BASE_PATH: function() { return /* binding */ SIGN_UP_DEFAULT_BASE_PATH; },\n/* harmony export */   SIGN_UP_MODES: function() { return /* binding */ SIGN_UP_MODES; },\n/* harmony export */   SSO_CALLBACK_PATH_ROUTE: function() { return /* binding */ SSO_CALLBACK_PATH_ROUTE; },\n/* harmony export */   SignInFirstFactor: function() { return /* binding */ SignInFirstFactor; },\n/* harmony export */   SignInFirstFactorCtx: function() { return /* binding */ SignInFirstFactorCtx; },\n/* harmony export */   SignInRouterCtx: function() { return /* binding */ SignInRouterCtx; },\n/* harmony export */   SignInRouterMachine: function() { return /* binding */ SignInRouterMachine; },\n/* harmony export */   SignInSafeIdentifierSelectorForStrategy: function() { return /* binding */ SignInSafeIdentifierSelectorForStrategy; },\n/* harmony export */   SignInSalutationSelector: function() { return /* binding */ SignInSalutationSelector; },\n/* harmony export */   SignInSecondFactor: function() { return /* binding */ SignInSecondFactor; },\n/* harmony export */   SignInSecondFactorCtx: function() { return /* binding */ SignInSecondFactorCtx; },\n/* harmony export */   SignInSessionList: function() { return /* binding */ SignInSessionList; },\n/* harmony export */   SignInSessionListItem: function() { return /* binding */ SignInSessionListItem; },\n/* harmony export */   SignInStep: function() { return /* binding */ SignInStep; },\n/* harmony export */   SignInStrategy: function() { return /* binding */ SignInStrategy; },\n/* harmony export */   SignInSupportedStrategy: function() { return /* binding */ SignInSupportedStrategy; },\n/* harmony export */   SignUpRouterCtx: function() { return /* binding */ SignUpRouterCtx; },\n/* harmony export */   SignUpStartCtx: function() { return /* binding */ SignUpStartCtx; },\n/* harmony export */   SignUpStep: function() { return /* binding */ SignUpStep; },\n/* harmony export */   SignUpStrategy: function() { return /* binding */ SignUpStrategy; },\n/* harmony export */   SignUpVerificationCtx: function() { return /* binding */ SignUpVerificationCtx; },\n/* harmony export */   Submit: function() { return /* binding */ Submit; },\n/* harmony export */   ThirdPartyMachine: function() { return /* binding */ ThirdPartyMachine; },\n/* harmony export */   ThirdPartyMachineId: function() { return /* binding */ ThirdPartyMachineId; },\n/* harmony export */   __privateAdd: function() { return /* binding */ __privateAdd; },\n/* harmony export */   __privateGet: function() { return /* binding */ __privateGet; },\n/* harmony export */   __privateSet: function() { return /* binding */ __privateSet; },\n/* harmony export */   assertActorEventError: function() { return /* binding */ assertActorEventError; },\n/* harmony export */   inspect: function() { return /* binding */ inspect; },\n/* harmony export */   sendToLoading: function() { return /* binding */ sendToLoading; },\n/* harmony export */   shouldUseVirtualRouting: function() { return /* binding */ shouldUseVirtualRouting; },\n/* harmony export */   useFormStore: function() { return /* binding */ useFormStore; },\n/* harmony export */   useSignInActiveSessionContext: function() { return /* binding */ useSignInActiveSessionContext; },\n/* harmony export */   useSignInStrategy: function() { return /* binding */ useSignInStrategy; }\n/* harmony export */ });\n/* harmony import */ var client_only__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! client-only */ \"(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\n/* harmony import */ var _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-form */ \"(app-pages-browser)/./node_modules/@radix-ui/react-form/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _xstate_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @xstate/react */ \"(app-pages-browser)/./node_modules/@xstate/react/dist/xstate-react.development.esm.js\");\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/error */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/error.mjs\");\n/* harmony import */ var _clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/underscore */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/underscore.mjs\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/log-38475d87.development.esm.js\");\n/* harmony import */ var _clerk_shared__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @clerk/shared */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/index.mjs\");\n/* harmony import */ var _clerk_shared_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @clerk/shared/react */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/react/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var _clerk_shared_logger__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @clerk/shared/logger */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/logger.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/telemetry.mjs\");\n/* harmony import */ var _clerk_shared_constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @clerk/shared/constants */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/constants.mjs\");\n/* harmony import */ var _clerk_types__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @clerk/types */ \"(app-pages-browser)/./node_modules/@clerk/types/dist/esm/index.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var _clerk_shared_webauthn__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @clerk/shared/webauthn */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/webauthn.mjs\");\n/* harmony import */ var _clerk_shared_url__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @clerk/shared/url */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/url.mjs\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-5ea71f04.development.esm.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\n\n// src/react/common/index.ts\n\n\n// src/react/common/form/field.tsx\n\n\n\n// src/internals/machines/form/form.context.ts\n\n\n// src/internals/machines/form/form.machine.ts\n\n\n\n\n// src/internals/errors/index.ts\nvar ClerkElementsErrorBase = class extends Error {\n  constructor(code, message) {\n    super(message);\n    this.code = code;\n    this.clerkError = true;\n    this.clerkElementsError = true;\n    this.name = \"ClerkElementsError\";\n    this.rawMessage = message;\n  }\n  toString() {\n    return `[${this.name}]\nCode: ${this.code}\nMessage: ${this.message}`;\n  }\n};\nvar ClerkElementsError = class _ClerkElementsError extends ClerkElementsErrorBase {\n  static fromAPIError(error) {\n    return new _ClerkElementsError(\n      error.code.toString(),\n      // @ts-expect-error - Expected that longMessage isn't a property of MetamaskError\n      error.longMessage || error.message\n    );\n  }\n  constructor(code, message) {\n    super(code, message);\n    this.name = \"ClerkElementsError\";\n  }\n};\nvar ClerkElementsRuntimeError = class extends ClerkElementsErrorBase {\n  constructor(message) {\n    super(\"elements_runtime_error\", message);\n    this.name = \"ClerkElementsRuntimeError\";\n  }\n};\nvar ClerkElementsFieldError = class _ClerkElementsFieldError extends ClerkElementsErrorBase {\n  constructor(code, message) {\n    super(code, message);\n    this.matchFn = () => true;\n    this.name = \"ClerkElementsFieldError\";\n  }\n  static fromAPIError(error) {\n    return new _ClerkElementsFieldError(error.code, error.longMessage || error.message);\n  }\n  get validityState() {\n    return this.code;\n  }\n  get forceMatch() {\n    return true;\n  }\n};\n\n// src/internals/machines/form/form.machine.ts\nvar FormMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actions: {\n    setGlobalErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      errors: (_, params) => [...params.errors]\n    }),\n    setFieldFeedback: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      fields: ({ context }, params) => {\n        if (!params.name) {\n          throw new Error(\"Field name is required\");\n        }\n        if (context.fields.has(params.name)) {\n          context.fields.get(params.name).feedback = params.feedback;\n        }\n        return context.fields;\n      }\n    })\n  },\n  types: {}\n}).createMachine({\n  id: \"Form\",\n  context: () => ({\n    defaultValues: /* @__PURE__ */ new Map(),\n    errors: [],\n    fields: /* @__PURE__ */ new Map(),\n    progressive: false\n  }),\n  on: {\n    \"ERRORS.SET\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue, event }) => {\n        var _a, _b, _c;\n        const isClerkAPIError = (err) => \"meta\" in err;\n        if ((0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.isKnownError)(event.error)) {\n          const fields = {};\n          const globalErrors = [];\n          const errors = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.isClerkAPIResponseError)(event.error) ? (_a = event.error) == null ? void 0 : _a.errors : [event.error];\n          for (const error of errors) {\n            const name = isClerkAPIError(error) ? (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__.snakeToCamel)((_b = error.meta) == null ? void 0 : _b.paramName) : null;\n            if (!name || (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.isMetamaskError)(error)) {\n              globalErrors.push(ClerkElementsError.fromAPIError(error));\n              continue;\n            }\n            if (!fields[name]) {\n              fields[name] = [];\n            }\n            (_c = fields[name]) == null ? void 0 : _c.push(ClerkElementsFieldError.fromAPIError(error));\n          }\n          enqueue({\n            type: \"setGlobalErrors\",\n            params: {\n              errors: globalErrors\n            }\n          });\n          for (const field in fields) {\n            enqueue({\n              type: \"setFieldFeedback\",\n              params: {\n                name: field,\n                feedback: {\n                  type: \"error\",\n                  message: fields[field][0]\n                }\n              }\n            });\n          }\n        }\n      })\n    },\n    \"ERRORS.CLEAR\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        errors: () => []\n      })\n    },\n    \"FIELD.ADD\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          event.field.value = event.field.value || context.defaultValues.get(event.field.name) || void 0;\n          context.fields.set(event.field.name, event.field);\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.UPDATE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          var _a;\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          const field = context.fields.get(event.field.name);\n          if (field) {\n            field.checked = event.field.checked;\n            field.disabled = (_a = event.field.disabled) != null ? _a : field.disabled;\n            field.value = event.field.value;\n            context.fields.set(event.field.name, field);\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.DISABLE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          const field = context.fields.get(event.field.name);\n          if (field) {\n            field.disabled = true;\n            context.fields.set(event.field.name, field);\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.ENABLE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          const field = context.fields.get(event.field.name);\n          if (field) {\n            field.disabled = false;\n            context.fields.set(event.field.name, field);\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.REMOVE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          context.fields.delete(event.field.name);\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.FEEDBACK.SET\": {\n      actions: [\n        {\n          type: \"setFieldFeedback\",\n          params: ({ event }) => event.field\n        }\n      ]\n    },\n    \"FIELD.FEEDBACK.CLEAR\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          if (context.fields.has(event.field.name)) {\n            context.fields.get(event.field.name).feedback = void 0;\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.FEEDBACK.CLEAR.ALL\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context }) => {\n          context.fields.forEach((field) => {\n            field.feedback = void 0;\n          });\n          return context.fields;\n        }\n      })\n    },\n    MARK_AS_PROGRESSIVE: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => {\n        const missing = new Set(event.missing);\n        return {\n          defaultValues: event.defaultValues,\n          hidden: /* @__PURE__ */ new Set([...event.required.filter((f) => !missing.has(f)), ...event.optional]),\n          missing,\n          optional: new Set(event.optional),\n          progressive: true,\n          required: new Set(event.required)\n        };\n      })\n    },\n    UNMARK_AS_PROGRESSIVE: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        defaultValues: /* @__PURE__ */ new Map(),\n        hidden: void 0,\n        missing: void 0,\n        optional: void 0,\n        progressive: false,\n        required: void 0\n      })\n    },\n    PREFILL_DEFAULT_VALUES: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => {\n        return {\n          defaultValues: event.defaultValues\n        };\n      })\n    }\n  }\n});\n\n// src/utils/safe-access.ts\nfunction safeAccess(fn, fallback) {\n  try {\n    return fn();\n  } catch (e) {\n    return fallback;\n  }\n}\n\n// src/internals/utils/inspector/index.ts\nvar inspect;\nif (false) {}\n\n// src/internals/machines/form/form.context.ts\nvar FormMachineContext = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.createActorContext)(FormMachine, { inspect });\nvar FormStoreProvider = FormMachineContext.Provider;\nvar useFormStore = FormMachineContext.useActorRef;\nvar useFormSelector = FormMachineContext.useSelector;\nvar globalErrorsSelector = (state) => state.context.errors;\nvar fieldValueSelector = (name) => (state) => {\n  var _a;\n  return name ? (_a = state.context.fields.get(name)) == null ? void 0 : _a.value : \"\";\n};\nvar fieldHasValueSelector = (name) => (state) => Boolean(fieldValueSelector(name)(state));\nvar fieldFeedbackSelector = (name) => (state) => {\n  var _a;\n  return name ? (_a = state.context.fields.get(name)) == null ? void 0 : _a.feedback : void 0;\n};\n\n// src/react/common/form/hooks/use-field-feedback.ts\nfunction useFieldFeedback({ name }) {\n  const feedback = useFormSelector(fieldFeedbackSelector(name));\n  return {\n    feedback\n  };\n}\n\n// src/react/common/form/hooks/use-field.ts\nfunction useField({ name }) {\n  const hasValue = useFormSelector(fieldHasValueSelector(name));\n  const { feedback } = useFieldFeedback({ name });\n  const shouldBeHidden = false;\n  const hasError = feedback ? feedback.type === \"error\" : false;\n  return {\n    hasValue,\n    props: {\n      \"data-hidden\": shouldBeHidden ? true : void 0,\n      serverInvalid: hasError\n    }\n  };\n}\n\n// src/react/common/form/hooks/use-field-context.ts\n\nvar FieldContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);\nvar useFieldContext = () => react__WEBPACK_IMPORTED_MODULE_1__.useContext(FieldContext);\n\n// src/react/common/form/types.ts\nvar FIELD_STATES = {\n  success: \"success\",\n  error: \"error\",\n  idle: \"idle\",\n  warning: \"warning\",\n  info: \"info\"\n};\n\n// src/react/common/form/hooks/use-field-state.ts\nfunction useFieldState({ name }) {\n  const { feedback } = useFieldFeedback({ name });\n  const hasValue = useFormSelector(fieldHasValueSelector(name));\n  let state = FIELD_STATES.idle;\n  if (!hasValue) {\n    state = FIELD_STATES.idle;\n  }\n  switch (feedback == null ? void 0 : feedback.type) {\n    case \"error\":\n      state = FIELD_STATES.error;\n      break;\n    case \"warning\":\n      state = FIELD_STATES.warning;\n      break;\n    case \"info\":\n      state = FIELD_STATES.info;\n      break;\n    case \"success\":\n      state = FIELD_STATES.success;\n      break;\n    default:\n      break;\n  }\n  return {\n    state\n  };\n}\n\n// src/react/common/form/hooks/use-form.ts\n\n\n// src/react/common/form/hooks/use-global-errors.ts\nfunction useGlobalErrors() {\n  const errors = useFormSelector(globalErrorsSelector);\n  return {\n    errors\n  };\n}\n\n// src/react/common/form/hooks/use-form.ts\nfunction useForm({ flowActor }) {\n  const { errors } = useGlobalErrors();\n  const onSubmit = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      event.preventDefault();\n      if (flowActor) {\n        flowActor.send({ type: \"SUBMIT\", action: \"submit\" });\n      }\n    },\n    [flowActor]\n  );\n  return {\n    props: {\n      ...errors.length > 0 ? { \"data-global-error\": true } : {},\n      onSubmit\n    }\n  };\n}\n\n// src/react/common/form/hooks/use-input.tsx\n\n\n\n// src/react/hooks/use-password.hook.ts\n\n\n\n\n// src/react/utils/generate-password-error-text.ts\nvar errorMessages = {\n  max_length: [\"less than %length% characters\", \"length\"],\n  min_length: [\"%length% or more characters\", \"length\"],\n  require_numbers: \"a number\",\n  require_lowercase: \"a lowercase letter\",\n  require_uppercase: \"an uppercase letter\",\n  require_special_char: \"a special character\"\n};\nvar createListFormat = (message) => {\n  let messageWithPrefix;\n  if (\"ListFormat\" in Intl) {\n    const formatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"conjunction\" });\n    messageWithPrefix = formatter.format(message);\n  } else {\n    messageWithPrefix = message.join(\", \");\n  }\n  return messageWithPrefix;\n};\nfunction buildErrorTuple(key, config) {\n  switch (key) {\n    case \"max_length\":\n      return [key, { max_length: config.max_length }];\n    case \"min_length\":\n      return [key, { min_length: config.min_length }];\n    case \"require_special_char\":\n      return [key, { allowed_special_characters: config.allowed_special_characters }];\n    default:\n      return key;\n  }\n}\nvar generatePasswordErrorText = ({ config, failedValidations }) => {\n  const codes = [];\n  if (!failedValidations || Object.keys(failedValidations).length === 0) {\n    return {\n      codes,\n      message: \"\"\n    };\n  }\n  const hasMinLengthError = (failedValidations == null ? void 0 : failedValidations.min_length) || false;\n  const messages = Object.entries(failedValidations).filter((k) => hasMinLengthError ? k[0] === \"min_length\" : true).filter(([, v]) => !!v).map(([k]) => {\n    const entry = k;\n    const errorTuple = buildErrorTuple(entry, config);\n    codes.push(errorTuple);\n    const errorKey = errorMessages[entry];\n    if (Array.isArray(errorKey)) {\n      const [msg, replaceValue] = errorKey;\n      return msg.replace(`%${replaceValue}%`, config[k]);\n    }\n    return errorKey;\n  });\n  const messageWithPrefix = createListFormat(messages);\n  return {\n    codes,\n    message: `Your password must contain ${messageWithPrefix}.`\n  };\n};\n\n// src/react/hooks/use-password.hook.ts\nvar usePassword = (callbacks) => {\n  var _a;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_8__.useClerk)();\n  const passwordSettings = (_a = clerk.__unstable__environment) == null ? void 0 : _a.userSettings.passwordSettings;\n  const { disable_hibp, min_zxcvbn_strength, show_zxcvbn, ...config } = passwordSettings || {};\n  const {\n    onValidationError = _clerk_shared__WEBPACK_IMPORTED_MODULE_7__.noop,\n    onValidationSuccess = _clerk_shared__WEBPACK_IMPORTED_MODULE_7__.noop,\n    onValidationWarning = _clerk_shared__WEBPACK_IMPORTED_MODULE_7__.noop,\n    onValidationInfo = _clerk_shared__WEBPACK_IMPORTED_MODULE_7__.noop,\n    onValidationComplexity\n  } = callbacks || {};\n  const onValidate = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (res) => {\n      var _a2, _b, _c;\n      if (res.complexity) {\n        if (Object.values(res == null ? void 0 : res.complexity).length > 0) {\n          const { message, codes } = generatePasswordErrorText({\n            config,\n            failedValidations: res.complexity\n          });\n          if ((_a2 = res.complexity) == null ? void 0 : _a2.min_length) {\n            return onValidationInfo(message, codes);\n          }\n          return onValidationError(message, codes);\n        }\n      }\n      if (((_b = res == null ? void 0 : res.strength) == null ? void 0 : _b.state) === \"fail\") {\n        const keys = res.strength.keys;\n        const error = keys.map((key) => get(zxcvbnKeys, key)).join(\" \");\n        return onValidationError(error, keys);\n      }\n      if (((_c = res == null ? void 0 : res.strength) == null ? void 0 : _c.state) === \"pass\") {\n        const keys = res.strength.keys;\n        const error = keys.map((key) => get(zxcvbnKeys, key)).join(\" \");\n        return onValidationWarning(error, keys);\n      }\n      return onValidationSuccess();\n    },\n    [callbacks, config]\n  );\n  const validatePassword = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => {\n    return (password) => {\n      return clerk.client.signUp.validatePassword(password, {\n        onValidation: onValidate,\n        onValidationComplexity\n      });\n    };\n  }, [onValidate]);\n  return {\n    validatePassword\n  };\n};\nvar get = (t, path) => path.split(\".\").reduce((r, k) => r == null ? void 0 : r[k], t);\nvar zxcvbnKeys = {\n  unstable__errors: {\n    zxcvbn: {\n      couldBeStronger: \"Your password works, but could be stronger. Try adding more characters.\",\n      goodPassword: \"Your password meets all the necessary requirements.\",\n      notEnough: \"Your password is not strong enough.\",\n      suggestions: {\n        allUppercase: \"Capitalize some, but not all letters.\",\n        anotherWord: \"Add more words that are less common.\",\n        associatedYears: \"Avoid years that are associated with you.\",\n        capitalization: \"Capitalize more than the first letter.\",\n        dates: \"Avoid dates and years that are associated with you.\",\n        l33t: \"Avoid predictable letter substitutions like '@' for 'a'.\",\n        longerKeyboardPattern: \"Use longer keyboard patterns and change typing direction multiple times.\",\n        noNeed: \"You can create strong passwords without using symbols, numbers, or uppercase letters.\",\n        pwned: \"If you use this password elsewhere, you should change it.\",\n        recentYears: \"Avoid recent years.\",\n        repeated: \"Avoid repeated words and characters.\",\n        reverseWords: \"Avoid reversed spellings of common words.\",\n        sequences: \"Avoid common character sequences.\",\n        useWords: \"Use multiple words, but avoid common phrases.\"\n      },\n      warnings: {\n        common: \"This is a commonly used password.\",\n        commonNames: \"Common names and surnames are easy to guess.\",\n        dates: \"Dates are easy to guess.\",\n        extendedRepeat: 'Repeated character patterns like \"abcabcabc\" are easy to guess.',\n        keyPattern: \"Short keyboard patterns are easy to guess.\",\n        namesByThemselves: \"Single names or surnames are easy to guess.\",\n        pwned: \"Your password was exposed by a data breach on the Internet.\",\n        recentYears: \"Recent years are easy to guess.\",\n        sequences: 'Common character sequences like \"abc\" are easy to guess.',\n        similarToCommon: \"This is similar to a commonly used password.\",\n        simpleRepeat: 'Repeated characters like \"aaa\" are easy to guess.',\n        straightRow: \"Straight rows of keys on your keyboard are easy to guess.\",\n        topHundred: \"This is a frequently used password.\",\n        topTen: \"This is a heavily used password.\",\n        userInputs: \"There should not be any personal or page related data.\",\n        wordByItself: \"Single words are easy to guess.\"\n      }\n    }\n  }\n};\n\n// src/react/common/form/otp.tsx\n\n\n\nvar ZERO = [0, 0];\nvar OUTSIDE = [-1, -1];\nvar OTP_LENGTH_DEFAULT = 6;\nvar PASSWORD_MANAGER_OFFSET_DEFAULT = 40;\nvar OTPInput = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function OTPInput2(props, ref) {\n  const { render, length, autoSubmit, ...rest } = props;\n  const hasRenderProp = typeof render !== \"undefined\";\n  if (hasRenderProp) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      OTPInputSegmented,\n      {\n        ...rest,\n        ref,\n        render,\n        length,\n        autoSubmit\n      }\n    );\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    OTPInputStandard,\n    {\n      ...rest,\n      ref,\n      length,\n      autoSubmit\n    }\n  );\n});\nvar OTPInputStandard = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  function OTPInput3(props, ref) {\n    const { length = OTP_LENGTH_DEFAULT, autoSubmit = false, ...rest } = props;\n    const innerRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(ref, () => innerRef.current, []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      var _a, _b;\n      if (String(props.value).length === length && autoSubmit) {\n        (_b = (_a = innerRef.current) == null ? void 0 : _a.form) == null ? void 0 : _b.requestSubmit();\n      }\n    }, [props.value, length, autoSubmit]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Control,\n      {\n        ref: innerRef,\n        ...rest,\n        \"data-otp-input-standard\": true\n      }\n    );\n  }\n);\nvar OTPInputSegmented = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  function OTPInput4(props, ref) {\n    const {\n      className: userProvidedClassName,\n      render,\n      length = OTP_LENGTH_DEFAULT,\n      autoSubmit = false,\n      passwordManagerOffset = PASSWORD_MANAGER_OFFSET_DEFAULT,\n      ...rest\n    } = props;\n    const innerRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    const [selectionRange, setSelectionRange] = react__WEBPACK_IMPORTED_MODULE_1__.useState(props.autoFocus ? ZERO : OUTSIDE);\n    const [isHovering, setIsHovering] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n    const isFocused = () => document.activeElement === innerRef.current;\n    react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(ref, () => innerRef.current, []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect(() => {\n      if (document.activeElement !== innerRef.current) {\n        return;\n      }\n      setSelectionRange((cur) => selectionRangeUpdater(cur, innerRef));\n    }, [props.value]);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      function onSelectionChange() {\n        if (!isFocused()) {\n          return;\n        }\n        setSelectionRange((cur) => selectionRangeUpdater(cur, innerRef));\n      }\n      document.addEventListener(\"selectionchange\", onSelectionChange, { capture: true });\n      return () => document.removeEventListener(\"selectionchange\", onSelectionChange);\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      var _a, _b;\n      if (String(props.value).length === length && autoSubmit) {\n        (_b = (_a = innerRef.current) == null ? void 0 : _a.form) == null ? void 0 : _b.requestSubmit();\n      }\n    }, [props.value, length, autoSubmit]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(\n      \"div\",\n      {\n        \"data-otp-input-wrapper\": true,\n        style: wrapperStyle,\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"style\", { children: `\n      input[data-otp-input-segmented]::selection {\n        color: transparent;\n        background-color: transparent;\n      }\n      ` }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n            _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Control,\n            {\n              \"data-otp-input-segmented\": true,\n              ref: innerRef,\n              ...rest,\n              onFocus: (event) => {\n                var _a;\n                if (innerRef.current) {\n                  const start = Math.min(innerRef.current.value.length, length - 1);\n                  const end = innerRef.current.value.length;\n                  innerRef.current.setSelectionRange(start, end);\n                  setSelectionRange([start, end]);\n                }\n                (_a = rest == null ? void 0 : rest.onFocus) == null ? void 0 : _a.call(rest, event);\n              },\n              onBlur: (event) => {\n                var _a;\n                setSelectionRange([-1, -1]);\n                (_a = rest == null ? void 0 : rest.onBlur) == null ? void 0 : _a.call(rest, event);\n              },\n              onMouseOver: (event) => {\n                var _a;\n                if (!isFocused()) {\n                  setIsHovering(true);\n                }\n                (_a = props.onMouseOver) == null ? void 0 : _a.call(props, event);\n              },\n              onMouseLeave: (event) => {\n                var _a;\n                setIsHovering(false);\n                (_a = props.onMouseLeave) == null ? void 0 : _a.call(props, event);\n              },\n              style: {\n                ...inputStyle,\n                clipPath: `inset(0 calc(1ch + ${passwordManagerOffset}px) 0 0)`,\n                width: `calc(100% + 1ch + ${passwordManagerOffset}px)`\n              }\n            }\n          ),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n            \"div\",\n            {\n              className: userProvidedClassName,\n              \"aria-hidden\": true,\n              style: segmentWrapperStyle,\n              children: Array.from({ length }).map((_, i) => {\n                var _a, _b;\n                const isHovered = isHovering && !isFocused();\n                const isCursor = selectionRange[0] === selectionRange[1] && selectionRange[0] === i;\n                const isSelected = ((_a = selectionRange[0]) != null ? _a : -1) <= i && ((_b = selectionRange[1]) != null ? _b : -1) > i;\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: render({\n                  value: String(props.value)[i] || \"\",\n                  status: isHovered ? \"hovered\" : isCursor ? \"cursor\" : isSelected ? \"selected\" : \"none\",\n                  index: i\n                }) }, `otp-segment-${i}`);\n              })\n            }\n          )\n        ]\n      }\n    );\n  }\n);\nfunction selectionRangeUpdater(cur, inputRef) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n  let updated = [\n    (_b = (_a = inputRef.current) == null ? void 0 : _a.selectionStart) != null ? _b : 0,\n    (_d = (_c = inputRef.current) == null ? void 0 : _c.selectionEnd) != null ? _d : 0,\n    (_f = (_e = inputRef.current) == null ? void 0 : _e.selectionDirection) != null ? _f : null\n  ];\n  if (cur[0] === updated[0] && cur[1] === updated[1]) {\n    return cur;\n  }\n  if (updated[0] === 0 && updated[1] === 1) {\n    updated[2] = \"forward\";\n  }\n  if (updated[0] === updated[1]) {\n    if (updated[0] > 0 && cur[0] === updated[0] && cur[1] === updated[0] + 1) {\n      updated = [updated[0] - 1, updated[1], \"backward\"];\n    } else if (typeof ((_g = inputRef.current) == null ? void 0 : _g.value[updated[0]]) !== \"undefined\") {\n      updated = [updated[0], updated[1] + 1, \"backward\"];\n    } else if (updated[0] >= OTP_LENGTH_DEFAULT) {\n      updated = [updated[0] - 1, updated[1], \"backward\"];\n    }\n  }\n  (_i = inputRef.current) == null ? void 0 : _i.setSelectionRange(updated[0], updated[1], (_h = updated[2]) != null ? _h : void 0);\n  return [updated[0], updated[1]];\n}\nvar wrapperStyle = {\n  position: \"relative\",\n  userSelect: \"none\"\n};\nvar inputStyle = {\n  display: \"block\",\n  background: \"transparent\",\n  opacity: 0,\n  outline: \"transparent solid 0px\",\n  appearance: \"none\",\n  color: \"transparent\",\n  position: \"absolute\",\n  inset: 0,\n  caretColor: \"transparent\",\n  border: \"0px solid transparent\",\n  // width is handled inline\n  height: \"100%\",\n  letterSpacing: \"-1rem\"\n};\nvar segmentWrapperStyle = {\n  zIndex: 1,\n  pointerEvents: \"none\"\n};\n\n// src/react/common/form/utils/enrich-field-state.ts\nfunction enrichFieldState(validity, fieldState) {\n  return (validity == null ? void 0 : validity.valid) === false ? FIELD_STATES.error : fieldState;\n}\n\n// src/react/common/form/utils/determine-input-type-from-name.ts\nfunction determineInputTypeFromName(name) {\n  if (name === \"password\" || name === \"confirmPassword\" || name === \"currentPassword\" || name === \"newPassword\") {\n    return \"password\";\n  }\n  if (name === \"emailAddress\") {\n    return \"email\";\n  }\n  if (name === \"phoneNumber\") {\n    return \"tel\";\n  }\n  if (name === \"code\") {\n    return \"otp\";\n  }\n  if (name === \"backup_code\") {\n    return \"backup_code\";\n  }\n  return \"text\";\n}\n\n// src/react/common/form/hooks/use-previous.ts\n\nfunction usePrevious(value) {\n  const ref = react__WEBPACK_IMPORTED_MODULE_1__.useRef();\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n// src/react/common/form/hooks/use-validity-state-context.ts\n\nvar ValidityStateContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);\nvar useValidityStateContext = () => react__WEBPACK_IMPORTED_MODULE_1__.useContext(ValidityStateContext);\n\n// src/react/common/form/hooks/use-input.tsx\nfunction useInput({\n  name: inputName,\n  value: providedValue,\n  checked: providedChecked,\n  onChange: onChangeProp,\n  onBlur: onBlurProp,\n  onFocus: onFocusProp,\n  type: inputType,\n  ...passthroughProps\n}) {\n  const fieldContext = useFieldContext();\n  const rawName = inputName || (fieldContext == null ? void 0 : fieldContext.name);\n  const name = rawName === \"backup_code\" ? \"code\" : rawName;\n  const { state: fieldState } = useFieldState({ name });\n  const validity = useValidityStateContext();\n  if (!rawName || !name) {\n    throw new Error(\"Clerk: <Input /> must be wrapped in a <Field> component or have a name prop.\");\n  }\n  const ref = useFormStore();\n  const [hasPassedValiation, setHasPassedValidation] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n  const { validatePassword } = usePassword({\n    onValidationComplexity: (hasPassed) => setHasPassedValidation(hasPassed),\n    onValidationSuccess: () => {\n      ref.send({\n        type: \"FIELD.FEEDBACK.SET\",\n        field: { name, feedback: { type: \"success\", message: \"Your password meets all the necessary requirements.\" } }\n      });\n    },\n    onValidationError: (error, codes) => {\n      if (error) {\n        ref.send({\n          type: \"FIELD.FEEDBACK.SET\",\n          field: {\n            name,\n            feedback: {\n              type: \"error\",\n              message: new ClerkElementsFieldError(\"password-validation-error\", error),\n              codes\n            }\n          }\n        });\n      }\n    },\n    onValidationWarning: (warning, codes) => ref.send({\n      type: \"FIELD.FEEDBACK.SET\",\n      field: { name, feedback: { type: \"warning\", message: warning, codes } }\n    }),\n    onValidationInfo: (info, codes) => {\n      ref.send({\n        type: \"FIELD.FEEDBACK.SET\",\n        field: {\n          name,\n          feedback: {\n            type: \"info\",\n            message: info,\n            codes\n          }\n        }\n      });\n    }\n  });\n  const value = useFormSelector(fieldValueSelector(name));\n  const prevValue = usePrevious(value);\n  const hasValue = Boolean(value);\n  const type = inputType != null ? inputType : determineInputTypeFromName(rawName);\n  let nativeFieldType = type;\n  let shouldValidatePassword = false;\n  if (type === \"password\" || type === \"text\") {\n    shouldValidatePassword = Boolean(passthroughProps.validatePassword);\n  }\n  if (nativeFieldType === \"otp\" || nativeFieldType === \"backup_code\") {\n    nativeFieldType = \"text\";\n  }\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    if (!name) {\n      return;\n    }\n    ref.send({\n      type: \"FIELD.ADD\",\n      field: { name, type: nativeFieldType, value: providedValue, checked: providedChecked }\n    });\n    return () => ref.send({ type: \"FIELD.REMOVE\", field: { name } });\n  }, [ref]);\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    if (!name) {\n      return;\n    }\n    if (type === \"checkbox\" && providedChecked !== void 0 || type !== \"checkbox\" && providedValue !== void 0) {\n      ref.send({\n        type: \"FIELD.UPDATE\",\n        field: { name, value: providedValue, checked: providedChecked }\n      });\n    }\n  }, [name, type, ref, providedValue, providedChecked]);\n  const onChange = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (event) => {\n      onChangeProp == null ? void 0 : onChangeProp(event);\n      if (!name) {\n        return;\n      }\n      ref.send({ type: \"FIELD.UPDATE\", field: { name, value: event.target.value, checked: event.target.checked } });\n      if (shouldValidatePassword) {\n        validatePassword(event.target.value);\n      }\n    },\n    [ref, name, onChangeProp, shouldValidatePassword, validatePassword]\n  );\n  const onBlur = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (event) => {\n      onBlurProp == null ? void 0 : onBlurProp(event);\n      if (shouldValidatePassword && event.target.value !== prevValue) {\n        validatePassword(event.target.value);\n      }\n    },\n    [onBlurProp, shouldValidatePassword, validatePassword, prevValue]\n  );\n  const onFocus = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (event) => {\n      onFocusProp == null ? void 0 : onFocusProp(event);\n      if (shouldValidatePassword && event.target.value !== prevValue) {\n        validatePassword(event.target.value);\n      }\n    },\n    [onFocusProp, shouldValidatePassword, validatePassword, prevValue]\n  );\n  const shouldBeHidden = false;\n  const Element = type === \"otp\" ? OTPInput : _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Control;\n  let props = {};\n  if (type === \"otp\") {\n    const p = passthroughProps;\n    const length = p.length || OTP_LENGTH_DEFAULT;\n    props = {\n      \"data-otp-input\": true,\n      autoComplete: \"one-time-code\",\n      inputMode: \"numeric\",\n      pattern: `[0-9]{${length}}`,\n      minLength: length,\n      maxLength: length,\n      onChange: (event) => {\n        event.currentTarget.value = event.currentTarget.value.replace(/\\D+/g, \"\");\n        onChange(event);\n      },\n      type: \"text\",\n      spellCheck: false\n    };\n  } else if (type === \"backup_code\") {\n    props = {\n      autoComplete: \"off\",\n      type: \"text\",\n      spellCheck: false\n    };\n  } else if (type === \"password\" && shouldValidatePassword) {\n    props = {\n      \"data-has-passed-validation\": hasPassedValiation ? true : void 0\n    };\n  }\n  const { validatePassword: _1, ...rest } = passthroughProps;\n  return {\n    Element,\n    props: {\n      type,\n      value: value != null ? value : \"\",\n      onChange,\n      onBlur,\n      onFocus,\n      \"data-hidden\": shouldBeHidden ? true : void 0,\n      \"data-has-value\": hasValue ? true : void 0,\n      \"data-state\": enrichFieldState(validity, fieldState),\n      ...props,\n      ...rest\n    }\n  };\n}\n\n// src/react/common/form/field.tsx\n\nvar DISPLAY_NAME = \"ClerkElementsField\";\nvar DISPLAY_NAME_INNER = \"ClerkElementsFieldInner\";\nvar Field = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ alwaysShow, ...rest }, forwardedRef) => {\n  var _a;\n  const formRef = useFormStore();\n  const formCtx = formRef.getSnapshot().context;\n  const isHiddenField = formCtx.progressive && Boolean((_a = formCtx.hidden) == null ? void 0 : _a.has(rest.name));\n  const shouldHide = alwaysShow ? false : isHiddenField;\n  return shouldHide ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(FieldContext.Provider, { value: { name: rest.name }, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    FieldInner,\n    {\n      ...rest,\n      ref: forwardedRef\n    }\n  ) });\n});\nField.displayName = DISPLAY_NAME;\nvar FieldInner = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, forwardedRef) => {\n  const { children, ...rest } = props;\n  const field = useField({ name: rest.name });\n  const { state: fieldState } = useFieldState({ name: rest.name });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Field,\n    {\n      ...field.props,\n      ...rest,\n      ref: forwardedRef,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.ValidityState, { children: (validity) => {\n        const enrichedFieldState = enrichFieldState(validity, fieldState);\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(ValidityStateContext.Provider, { value: validity, children: typeof children === \"function\" ? children(enrichedFieldState) : children });\n      } })\n    }\n  );\n});\nFieldInner.displayName = DISPLAY_NAME_INNER;\n\n// src/react/common/form/field-error.tsx\n\n\n\n\n// src/react/utils/is-react-fragment.ts\n\nfunction isReactFragment(node) {\n  return react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(node) && node.type === react__WEBPACK_IMPORTED_MODULE_1__.Fragment;\n}\n\n// src/react/common/form/field-error.tsx\n\nvar DISPLAY_NAME2 = \"ClerkElementsFieldError\";\nvar FieldError = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ asChild = false, children, code, name, ...rest }, forwardedRef) => {\n    const fieldContext = useFieldContext();\n    const rawFieldName = (fieldContext == null ? void 0 : fieldContext.name) || name;\n    const fieldName = rawFieldName === \"backup_code\" ? \"code\" : rawFieldName;\n    const { feedback } = useFieldFeedback({ name: fieldName });\n    if (!((feedback == null ? void 0 : feedback.type) === \"error\")) {\n      return null;\n    }\n    const error = feedback.message;\n    if (!error) {\n      return null;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"span\";\n    const child = typeof children === \"function\" ? children(error) : children;\n    if (isReactFragment(child)) {\n      throw new ClerkElementsRuntimeError(\"<FieldError /> cannot render a Fragment as a child.\");\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.FormMessage,\n      {\n        \"data-error-code\": error.code,\n        ...rest,\n        ref: forwardedRef,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { children: child || error.message })\n      }\n    );\n  }\n);\nFieldError.displayName = DISPLAY_NAME2;\n\n// src/react/common/form/field-state.tsx\nvar DISPLAY_NAME3 = \"ClerkElementsFieldState\";\nfunction FieldState({ children }) {\n  const field = useFieldContext();\n  const { feedback } = useFieldFeedback({ name: field == null ? void 0 : field.name });\n  const { state } = useFieldState({ name: field == null ? void 0 : field.name });\n  const validity = useValidityStateContext();\n  const message = (feedback == null ? void 0 : feedback.message) instanceof ClerkElementsFieldError ? feedback.message.message : feedback == null ? void 0 : feedback.message;\n  const codes = feedback == null ? void 0 : feedback.codes;\n  const fieldState = { state: enrichFieldState(validity, state), message, codes };\n  return children(fieldState);\n}\nFieldState.displayName = DISPLAY_NAME3;\n\n// node_modules/@radix-ui/primitive/dist/index.mjs\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler == null ? void 0 : originalEventHandler(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler == null ? void 0 : ourEventHandler(event);\n    }\n  };\n}\n\n// src/react/common/form/form.tsx\n\n\n\nvar DISPLAY_NAME4 = \"ClerkElementsForm\";\nvar Form = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ flowActor, onSubmit, ...rest }, forwardedRef) => {\n  const form = useForm({ flowActor });\n  const { onSubmit: internalOnSubmit, ...internalFormProps } = form.props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Form,\n    {\n      ...internalFormProps,\n      ...rest,\n      onSubmit: composeEventHandlers(internalOnSubmit, onSubmit),\n      ref: forwardedRef\n    }\n  );\n});\nForm.displayName = DISPLAY_NAME4;\n\n// src/react/common/form/global-error.tsx\n\n\n\nvar DISPLAY_NAME5 = \"ClerkElementsGlobalError\";\nvar GlobalError = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ asChild = false, children, code, ...rest }, forwardedRef) => {\n    const { errors } = useGlobalErrors();\n    const error = errors == null ? void 0 : errors[0];\n    if (!error || code && error.code !== code) {\n      return null;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"div\";\n    const child = typeof children === \"function\" ? children(error) : children;\n    if (isReactFragment(child)) {\n      throw new ClerkElementsRuntimeError(\"<GlobalError /> cannot render a Fragment as a child.\");\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      Comp,\n      {\n        role: \"alert\",\n        ...rest,\n        ref: forwardedRef,\n        children: child || error.message\n      }\n    );\n  }\n);\nGlobalError.displayName = DISPLAY_NAME5;\n\n// src/react/common/form/input.tsx\n\n\n\n\n\n// src/react/utils/create-context-from-actor-ref.ts\n\n\nfunction createContextFromActorRef(displayName) {\n  const ReactContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({ children, actorRef }) {\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement(\n      OriginalProvider,\n      {\n        value: actorRef\n      },\n      children\n    );\n  }\n  Provider.displayName = displayName;\n  function useContext9(allowMissingActor = false) {\n    const actorRef = react__WEBPACK_IMPORTED_MODULE_1__.useContext(ReactContext);\n    if (!allowMissingActor && !actorRef) {\n      throw new Error(\n        `You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}.Provider> component.`\n      );\n    }\n    return actorRef;\n  }\n  function useSelector6(selector, compare) {\n    const actor = useContext9();\n    return (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(actor, selector, compare);\n  }\n  return {\n    Provider,\n    useActorRef: useContext9,\n    useSelector: useSelector6\n  };\n}\n\n// src/react/sign-in/context/router.context.ts\nvar SignInRouterCtx = createContextFromActorRef(\"SignInRouterCtx\");\nfunction useSignInStep(name) {\n  return SignInRouterCtx.useSelector((state) => state.children[name]);\n}\nvar useSignInStartStep = () => useSignInStep(\"start\");\nvar useSignInFirstFactorStep = () => useSignInStep(\"firstFactor\");\nvar useSignInSecondFactorStep = () => useSignInStep(\"secondFactor\");\nvar useSignInResetPasswordStep = () => useSignInStep(\"resetPassword\");\nvar useSignInPasskeyAutofill = () => SignInRouterCtx.useSelector((state) => state.context.webAuthnAutofillSupport);\n\n// src/react/sign-in/context/sign-in-strategy.context.ts\n\nvar SignInStrategyContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n  strategy: void 0\n});\nfunction useSignInStrategy() {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SignInStrategyContext);\n  if (!ctx) {\n    throw new ClerkElementsRuntimeError(\n      \"useSignInStrategy must be used within a <SignIn.Strategy> or <SignIn.SupportedStrategy> component.\"\n    );\n  }\n  const { strategy } = ctx;\n  return strategy;\n}\n\n// src/react/sign-in/context/strategies.context.ts\n\nvar StrategiesContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n  current: void 0,\n  isActive: (_name) => false,\n  preferred: void 0\n});\nfunction useStrategy(name) {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(StrategiesContext);\n  if (!ctx) {\n    throw new ClerkElementsRuntimeError(\n      'useStrategy must be used within a <SignIn.Step name=\"verifications\"> component. Did you mean to `import { Step } from \"@clerk/elements/sign-up\"` instead?'\n    );\n  }\n  const { current, preferred, isActive } = ctx;\n  return {\n    current,\n    preferred,\n    get active() {\n      return isActive(name);\n    }\n  };\n}\n\n// src/react/common/form/input.tsx\n\nvar DISPLAY_NAME6 = \"ClerkElementsInput\";\nvar DISPLAY_NAME_PASSKEYS_AUTOFILL = \"ClerkElementsInputWithPasskeyAutofill\";\nvar Input = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  (props, forwardedRef) => {\n    var _a, _b, _c;\n    const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_8__.useClerk)();\n    const field = useInput(props);\n    const hasPasskeyAutofillProp = Boolean((_a = field.props.autoComplete) == null ? void 0 : _a.includes(\"webauthn\"));\n    const allowedTypeForPasskey = [\"text\", \"email\", \"tel\"].includes(field.props.type);\n    const signInRouterRef = SignInRouterCtx.useActorRef(true);\n    (_c = clerk.telemetry) == null ? void 0 : _c.record(\n      (0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_13__.eventComponentMounted)(\"Elements_Input\", {\n        type: (_b = props.type) != null ? _b : false,\n        // @ts-expect-error - Depending on type the props can be different\n        render: Boolean(props == null ? void 0 : props.render),\n        // @ts-expect-error - Depending on type the props can be different\n        asChild: Boolean(props == null ? void 0 : props.asChild),\n        // @ts-expect-error - Depending on type the props can be different\n        validatePassword: Boolean(props == null ? void 0 : props.validatePassword)\n      })\n    );\n    if (signInRouterRef && hasPasskeyAutofillProp && allowedTypeForPasskey) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n        InputWithPasskeyAutofill,\n        {\n          ref: forwardedRef,\n          ...props\n        }\n      );\n    }\n    if (hasPasskeyAutofillProp && !allowedTypeForPasskey) {\n      _clerk_shared_logger__WEBPACK_IMPORTED_MODULE_12__.logger.warnOnce(\n        `<Input autoComplete=\"webauthn\"> can only be used with <Input type=\"text\"> or <Input type=\"email\">`\n      );\n    } else if (hasPasskeyAutofillProp) {\n      _clerk_shared_logger__WEBPACK_IMPORTED_MODULE_12__.logger.warnOnce(\n        `<Input autoComplete=\"webauthn\"> can only be used inside <SignIn> in order to trigger a sign-in attempt, otherwise it will be ignored.`\n      );\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      field.Element,\n      {\n        ref: forwardedRef,\n        ...field.props\n      }\n    );\n  }\n);\nInput.displayName = DISPLAY_NAME6;\nvar InputWithPasskeyAutofill = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  (props, forwardedRef) => {\n    const signInRouterRef = SignInRouterCtx.useActorRef(true);\n    const passkeyAutofillSupported = useSignInPasskeyAutofill();\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      if (passkeyAutofillSupported) {\n        signInRouterRef == null ? void 0 : signInRouterRef.send({ type: \"AUTHENTICATE.PASSKEY.AUTOFILL\" });\n      }\n    }, [passkeyAutofillSupported, signInRouterRef]);\n    const field = useInput(props);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      field.Element,\n      {\n        ref: forwardedRef,\n        ...field.props\n      }\n    );\n  }\n);\nInputWithPasskeyAutofill.displayName = DISPLAY_NAME_PASSKEYS_AUTOFILL;\n\n// src/react/common/form/label.tsx\n\nvar DISPLAY_NAME7 = \"ClerkElementsLabel\";\nvar Label = _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Label;\nLabel.displayName = DISPLAY_NAME7;\n\n// src/react/common/form/submit.tsx\n\nvar DISPLAY_NAME8 = \"ClerkElementsSubmit\";\nvar Submit = _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Submit;\nSubmit.displayName = DISPLAY_NAME8;\n\n// src/react/common/connections.tsx\n\n\n\n// src/react/hooks/use-active-tags.hook.ts\n\nvar ActiveTagsMode = {\n  any: \"any\",\n  all: \"all\"\n};\nfunction useActiveTags(actor, tags, mode = ActiveTagsMode.any) {\n  const state = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(\n    actor,\n    (s) => s,\n    (prev, next) => prev.tags === next.tags\n  );\n  if (!state) {\n    return false;\n  }\n  if (typeof tags === \"string\") {\n    return state.hasTag(tags);\n  }\n  if (!Array.isArray(tags)) {\n    throw new Error(\"Invalid tags parameter provided to useActiveTags\");\n  }\n  switch (mode) {\n    case ActiveTagsMode.any: {\n      const matching = new Set(tags.filter((tag) => state.hasTag(tag)));\n      return { active: matching.size > 0, activeTags: matching };\n    }\n    case ActiveTagsMode.all:\n      return tags.length === state.tags.size ? tags.every((tag) => state.hasTag(tag)) : false;\n    default:\n      return false;\n  }\n}\n\n// src/react/hooks/use-third-party-provider.hook.ts\n\n\n\n// src/utils/third-party-strategies.ts\n\n\n\n// src/utils/clerk-js.ts\nvar fromEntries = (iterable) => {\n  return [...iterable].reduce((obj, [key, val]) => {\n    obj[key] = val;\n    return obj;\n  }, {});\n};\n\n// src/utils/third-party-strategies.ts\nvar oauthStrategies = _clerk_types__WEBPACK_IMPORTED_MODULE_15__.OAUTH_PROVIDERS.map((p) => p.strategy);\nvar providerToDisplayData = fromEntries(\n  [..._clerk_types__WEBPACK_IMPORTED_MODULE_15__.OAUTH_PROVIDERS, ..._clerk_types__WEBPACK_IMPORTED_MODULE_15__.WEB3_PROVIDERS].map((p) => {\n    return [p.provider, { iconUrl: (0,_clerk_shared_constants__WEBPACK_IMPORTED_MODULE_14__.iconImageUrl)(p.provider), name: p.name, strategy: p.strategy }];\n  })\n);\nvar strategyToDisplayData = fromEntries(\n  [..._clerk_types__WEBPACK_IMPORTED_MODULE_15__.OAUTH_PROVIDERS, ..._clerk_types__WEBPACK_IMPORTED_MODULE_15__.WEB3_PROVIDERS].map((p) => {\n    return [p.strategy, { iconUrl: (0,_clerk_shared_constants__WEBPACK_IMPORTED_MODULE_14__.iconImageUrl)(p.provider), id: p.provider, name: p.name }];\n  })\n);\nfunction isSamlStrategy(strategy) {\n  return strategy === \"saml\";\n}\nfunction isWeb3Strategy(strategy, available) {\n  return available.includes(strategy.startsWith(\"web3_\") ? strategy : `web3_${strategy}_signature`);\n}\nfunction isAuthenticatableOauthStrategy(strategy, available) {\n  return available.includes(strategy.startsWith(\"oauth_\") ? strategy : `oauth_${strategy}`);\n}\nvar emptyThirdPartyProviders = {\n  authenticatableOauthStrategies: [],\n  providerToDisplayData: {},\n  strategies: [],\n  strategyToDisplayData: {},\n  web3Strategies: []\n};\nvar getEnabledThirdPartyProviders = (environment) => {\n  if (!(environment == null ? void 0 : environment.userSettings)) {\n    return emptyThirdPartyProviders;\n  }\n  const { socialProviderStrategies, web3FirstFactors, authenticatableSocialStrategies } = environment.userSettings;\n  const knownSocialProviderStrategies = socialProviderStrategies.filter((s) => oauthStrategies.includes(s));\n  const knownAuthenticatableSocialStrategies = authenticatableSocialStrategies.filter((s) => oauthStrategies.includes(s));\n  return {\n    authenticatableOauthStrategies: [...knownAuthenticatableSocialStrategies],\n    providerToDisplayData,\n    strategies: [...knownSocialProviderStrategies, ...web3FirstFactors],\n    strategyToDisplayData,\n    web3Strategies: web3FirstFactors\n  };\n};\n\n// src/react/hooks/use-third-party-provider.hook.ts\nvar useIsProviderEnabled = (provider) => {\n  var _a, _b;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_8__.useClerk)();\n  if (!clerk.loaded) {\n    return null;\n  }\n  if (provider === \"saml\") {\n    return (_b = (_a = clerk.__unstable__environment) == null ? void 0 : _a.userSettings.saml.enabled) != null ? _b : false;\n  }\n  const data = getEnabledThirdPartyProviders(clerk.__unstable__environment);\n  return isAuthenticatableOauthStrategy(provider, data.authenticatableOauthStrategies) || isWeb3Strategy(provider, data.web3Strategies);\n};\nvar useThirdPartyProvider = (ref, provider) => {\n  const isProviderEnabled = useIsProviderEnabled(provider);\n  const isSaml = isSamlStrategy(provider);\n  const details = isSaml ? {\n    name: \"SAML\",\n    strategy: \"saml\"\n  } : providerToDisplayData[provider];\n  const authenticate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      if (!isProviderEnabled) {\n        return;\n      }\n      event.preventDefault();\n      if (isSaml) {\n        return ref.send({ type: \"AUTHENTICATE.SAML\" });\n      }\n      if (provider === \"metamask\") {\n        return ref.send({ type: \"AUTHENTICATE.WEB3\", strategy: \"web3_metamask_signature\" });\n      }\n      if (provider === \"coinbase_wallet\") {\n        return ref.send({ type: \"AUTHENTICATE.WEB3\", strategy: \"web3_coinbase_wallet_signature\" });\n      }\n      return ref.send({ type: \"AUTHENTICATE.OAUTH\", strategy: `oauth_${provider}` });\n    },\n    [provider, isProviderEnabled, isSaml, ref]\n  );\n  if (isProviderEnabled === false) {\n    const dashboardPath = `https://dashboard.clerk.com/last-active?path=/user-authentication/${provider === \"metamask\" ? \"web3\" : \"social-connections\"}`;\n    throw new ClerkElementsRuntimeError(\n      `You have used <Connection name=\"${provider}\"> which isn't enabled for your project. Enable ${details.name} in your Clerk dashboard: ${dashboardPath}`\n    );\n  }\n  return {\n    events: {\n      authenticate\n    },\n    ...details\n  };\n};\n\n// src/react/sign-up/context/router.context.ts\nvar SignUpRouterCtx = createContextFromActorRef(\"SignUpRouterCtx\");\nfunction useSignUpStep(name) {\n  return SignUpRouterCtx.useSelector((state) => state.children[name]);\n}\nvar useSignUpStartStep = () => useSignUpStep(\"start\");\nvar useSignUpContinueStep = () => useSignUpStep(\"continue\");\nvar useSignUpVerificationStep = () => useSignUpStep(\"verification\");\n\n// src/react/common/connections.tsx\n\nvar ConnectionContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nvar useConnectionContext = () => {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConnectionContext);\n  if (!ctx) {\n    throw new Error(\"useConnectionContext must be used within <Clerk.Connection>\");\n  }\n  return ctx;\n};\nfunction Connection({ asChild, name, ...rest }) {\n  const signInRef = SignInRouterCtx.useActorRef(true);\n  const signUpRef = SignUpRouterCtx.useActorRef(true);\n  const provider = useThirdPartyProvider(signInRef || signUpRef, name);\n  if (!provider) {\n    return null;\n  }\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"button\";\n  const defaultProps = asChild ? {} : { type: \"button\" };\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(ConnectionContext.Provider, { value: provider, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Comp,\n    {\n      onClick: provider.events.authenticate,\n      ...defaultProps,\n      ...rest\n    }\n  ) });\n}\nfunction Icon({ asChild, ...rest }) {\n  const { iconUrl, name } = useConnectionContext();\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"img\";\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Comp,\n    {\n      alt: `${name} logo`,\n      src: iconUrl,\n      ...rest\n    }\n  );\n}\n\n// src/react/common/loading.tsx\n\n\n\n\n// src/react/hooks/use-loading.hook.ts\n\nvar selectLoading = (snapshot) => {\n  var _a;\n  return (_a = snapshot == null ? void 0 : snapshot.context) == null ? void 0 : _a.loading;\n};\nvar compareLoadingValue = (prev, next) => (prev == null ? void 0 : prev.isLoading) === (next == null ? void 0 : next.isLoading);\nfunction useLoading(actor) {\n  const loadingCtx = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(actor, selectLoading, compareLoadingValue);\n  if (!loadingCtx) {\n    return [false, { step: void 0, strategy: void 0, action: void 0 }];\n  }\n  return [loadingCtx.isLoading, { step: loadingCtx.step, strategy: loadingCtx.strategy, action: loadingCtx.action }];\n}\n\n// src/react/sign-in/step.tsx\n\n\n\n// src/react/sign-in/choose-session/choose-session.tsx\n\n\n\n// src/react/utils/create-context-for-dom-validation.ts\n\nfunction createContextForDomValidation(displayName) {\n  const ReactContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(false);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({ children }) {\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement(\n      OriginalProvider,\n      {\n        value: true\n      },\n      children\n    );\n  }\n  Provider.displayName = displayName;\n  function useContext9(allowMissingContext = false) {\n    const context = react__WEBPACK_IMPORTED_MODULE_1__.useContext(ReactContext);\n    if (!allowMissingContext && !context) {\n      throw new Error(\n        `You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}.Provider> component.`\n      );\n    }\n    return context;\n  }\n  return {\n    Provider,\n    useDomValidation: useContext9\n  };\n}\n\n// src/react/utils/is-valid-component-type.ts\n\nfunction isValidComponentType(child, type) {\n  return react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(child) && child.type === type;\n}\n\n// src/react/sign-in/choose-session/choose-session.hooks.ts\n\nvar SignInActiveSessionContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);\nfunction useSignInActiveSessionContext() {\n  const ctx = react__WEBPACK_IMPORTED_MODULE_1__.useContext(SignInActiveSessionContext);\n  if (!ctx) {\n    throw new Error(\"SignInActiveSessionContext must be used within a SessionList/SignInSessionListItem\");\n  }\n  return ctx;\n}\nfunction useSignInChooseSessionIsActive() {\n  const routerRef = SignInRouterCtx.useActorRef();\n  return useActiveTags(routerRef, \"step:choose-session\");\n}\nfunction useSignInActiveSessionList(params) {\n  const { omitCurrent = true } = params || {};\n  return SignInRouterCtx.useSelector((state) => {\n    var _a, _b, _c, _d;\n    const activeSessions = ((_b = (_a = state.context.clerk) == null ? void 0 : _a.client) == null ? void 0 : _b.activeSessions) || [];\n    const currentSessionId = (_d = (_c = state.context.clerk) == null ? void 0 : _c.session) == null ? void 0 : _d.id;\n    const filteredSessions = omitCurrent ? activeSessions.filter((s) => s.id !== currentSessionId) : activeSessions;\n    return filteredSessions.map((s) => ({\n      id: s.id,\n      ...s.publicUserData\n    }));\n  });\n}\n\n// src/react/sign-in/choose-session/choose-session.tsx\n\nvar SignInChooseSessionCtx = createContextForDomValidation(\"SignInChooseSessionCtx\");\nfunction SignInChooseSession({ asChild, children, ...props }) {\n  const activeState = useSignInChooseSessionIsActive();\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"div\";\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseSessionCtx.Provider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { ...props, children }) }) : null;\n}\nfunction SignInSessionList({ asChild, children, includeCurrentSession, ...props }) {\n  const sessions = useSignInActiveSessionList({ omitCurrent: !includeCurrentSession });\n  if (!children || !(sessions == null ? void 0 : sessions.length)) {\n    return null;\n  }\n  if (react__WEBPACK_IMPORTED_MODULE_1__.Children.count(children) > 1) {\n    return react__WEBPACK_IMPORTED_MODULE_1__.Children.only(null);\n  }\n  if (asChild && isValidComponentType(children, SignInSessionListItem)) {\n    throw new Error(\"asChild cannot be used with SessionListItem as the direct child\");\n  }\n  if (!react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(children)) {\n    throw new Error(\"children must be a valid React element\");\n  }\n  const newChildren = asChild ? children.props.children : children;\n  const childrenWithCtx = sessions.map((session) => {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      SignInActiveSessionContext.Provider,\n      {\n        value: session,\n        children: newChildren\n      },\n      `SignInActiveSessionContext-${session.id}`\n    );\n  });\n  if (asChild) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot, { ...props, children: react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(children, void 0, childrenWithCtx) });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"ul\", { ...props, children: childrenWithCtx });\n}\nfunction SignInSessionListItem(props) {\n  const { asChild = false, children, ...passthroughProps } = props;\n  const session = useSignInActiveSessionContext();\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"li\";\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { ...passthroughProps, children: children({ session }) });\n}\n\n// src/react/sign-in/choose-strategy.tsx\n\n\n\n\n// src/internals/machines/sign-in/verification.machine.ts\n\n\n\n// src/internals/constants/index.ts\nvar SSO_CALLBACK_PATH_ROUTE = \"/sso-callback\";\nvar CHOOSE_SESSION_PATH_ROUTE = \"/choose\";\nvar MAGIC_LINK_VERIFY_PATH_ROUTE = \"/verify\";\nvar SIGN_UP_MODES = {\n  PUBLIC: \"public\",\n  RESTRICTED: \"restricted\"\n};\nvar SIGN_IN_DEFAULT_BASE_PATH = safeAccess(\n  () => {\n    var _a;\n    return (_a = process.env.CLERK_SIGN_IN_URL) != null ? _a : \"/\";\n  },\n  \"/sign-in\"\n);\nvar SIGN_UP_DEFAULT_BASE_PATH = safeAccess(\n  () => {\n    var _a;\n    return (_a = process.env.CLERK_SIGN_UP_URL) != null ? _a : process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL;\n  },\n  \"/sign-up\"\n);\nvar NEXT_WINDOW_HISTORY_SUPPORT_VERSION = \"14.1.0\";\nvar SEARCH_PARAMS = {\n  createdSession: \"__clerk_created_session\",\n  handshake: \"__clerk_handshake\",\n  help: \"__clerk_help\",\n  invitationToken: \"__clerk_invitation_token\",\n  modalState: \"__clerk_modal_state\",\n  satelliteUrl: \"__clerk_satellite_url\",\n  status: \"__clerk_status\",\n  synced: \"__clerk_synced\",\n  ticket: \"__clerk_ticket\",\n  transfer: \"__clerk_transfer\"\n};\nvar RESENDABLE_COUNTDOWN_DEFAULT = 60;\nvar CAPTCHA_ELEMENT_ID = \"clerk-captcha\";\nvar ERROR_CODES = {\n  FORM_IDENTIFIER_NOT_FOUND: \"form_identifier_not_found\",\n  FORM_PASSWORD_INCORRECT: \"form_password_incorrect\",\n  INVALID_STRATEGY_FOR_USER: \"strategy_for_user_invalid\",\n  NOT_ALLOWED_TO_SIGN_UP: \"not_allowed_to_sign_up\",\n  OAUTH_ACCESS_DENIED: \"oauth_access_denied\",\n  OAUTH_EMAIL_DOMAIN_RESERVED_BY_SAML: \"oauth_email_domain_reserved_by_saml\",\n  NOT_ALLOWED_ACCESS: \"not_allowed_access\",\n  SAML_USER_ATTRIBUTE_MISSING: \"saml_user_attribute_missing\",\n  USER_LOCKED: \"user_locked\"\n};\nvar ROUTING = {\n  path: \"path\",\n  virtual: \"virtual\"\n};\n\n// src/internals/machines/shared/shared.actions.ts\nfunction sendToLoading({ context, event }) {\n  let step;\n  let strategy;\n  let action;\n  if (event.type.startsWith(\"xstate.done.\") || event.type.startsWith(\"xstate.error.\")) {\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: false,\n      step: void 0,\n      strategy: void 0\n    });\n  }\n  if (context.loadingStep === \"strategy\") {\n    step = void 0;\n    if (event.type === \"REDIRECT\") {\n      strategy = event.params.strategy;\n    }\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy\n    });\n  } else if (context.loadingStep === \"continue\") {\n    step = \"continue\";\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  } else if (context.loadingStep === \"reset-password\") {\n    step = \"reset-password\";\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  } else if (context.loadingStep === \"start\") {\n    step = \"start\";\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  } else {\n    step = context.loadingStep;\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  }\n}\n\n// src/internals/machines/sign-in/utils/starting-factors.ts\n\nvar makeSortingOrderMap = (arr) => arr.reduce(\n  (acc, k, i) => {\n    acc[k] = i;\n    return acc;\n  },\n  {}\n);\nvar STRATEGY_SORT_ORDER_PASSWORD_PREF = makeSortingOrderMap([\n  \"passkey\",\n  \"password\",\n  \"email_link\",\n  \"email_code\",\n  \"phone_code\"\n]);\nvar STRATEGY_SORT_ORDER_OTP_PREF = makeSortingOrderMap([\n  \"email_code\",\n  \"email_link\",\n  \"phone_code\",\n  \"passkey\",\n  \"password\"\n]);\nvar makeSortingFunction = (sortingMap) => (a, b) => {\n  const orderA = sortingMap[a.strategy];\n  const orderB = sortingMap[b.strategy];\n  if (orderA === void 0 || orderB === void 0) {\n    return 0;\n  }\n  return orderA - orderB;\n};\nvar passwordPrefFactorComparator = makeSortingFunction(STRATEGY_SORT_ORDER_PASSWORD_PREF);\nvar otpPrefFactorComparator = makeSortingFunction(STRATEGY_SORT_ORDER_OTP_PREF);\nvar findFactorForIdentifier = (i) => (f) => {\n  return \"safeIdentifier\" in f && f.safeIdentifier === i;\n};\nfunction determineStartingSignInFactor(firstFactors, identifier, preferredSignInStrategy) {\n  if (!firstFactors || firstFactors.length === 0) {\n    return null;\n  }\n  return preferredSignInStrategy === \"password\" ? determineStrategyWhenPasswordIsPreferred(firstFactors, identifier) : determineStrategyWhenOTPIsPreferred(firstFactors, identifier);\n}\nfunction findPasskeyStrategy(factors) {\n  if ((0,_clerk_shared_webauthn__WEBPACK_IMPORTED_MODULE_16__.isWebAuthnSupported)()) {\n    const passkeyFactor = factors.find(({ strategy }) => strategy === \"passkey\");\n    if (passkeyFactor) {\n      return passkeyFactor;\n    }\n  }\n  return null;\n}\nfunction determineStrategyWhenPasswordIsPreferred(factors, identifier) {\n  const passkeyFactor = findPasskeyStrategy(factors);\n  if (passkeyFactor) {\n    return passkeyFactor;\n  }\n  const selected = factors.sort(passwordPrefFactorComparator)[0];\n  if (selected.strategy === \"password\") {\n    return selected;\n  }\n  return factors.find(findFactorForIdentifier(identifier)) || selected || null;\n}\nfunction determineStrategyWhenOTPIsPreferred(factors, identifier) {\n  const passkeyFactor = findPasskeyStrategy(factors);\n  if (passkeyFactor) {\n    return passkeyFactor;\n  }\n  const sortedBasedOnPrefFactor = factors.sort(otpPrefFactorComparator);\n  const forIdentifier = sortedBasedOnPrefFactor.find(findFactorForIdentifier(identifier));\n  if (forIdentifier) {\n    return forIdentifier;\n  }\n  const firstBasedOnPref = sortedBasedOnPrefFactor[0];\n  if (firstBasedOnPref.strategy === \"email_link\") {\n    return firstBasedOnPref;\n  }\n  return factors.find(findFactorForIdentifier(identifier)) || firstBasedOnPref || null;\n}\nfunction determineStartingSignInSecondFactor(secondFactors) {\n  if (!secondFactors || secondFactors.length === 0) {\n    return null;\n  }\n  const totpFactor = secondFactors.find((f) => f.strategy === \"totp\");\n  if (totpFactor) {\n    return totpFactor;\n  }\n  const phoneCodeFactor = secondFactors.find((f) => f.strategy === \"phone_code\");\n  if (phoneCodeFactor) {\n    return phoneCodeFactor;\n  }\n  return secondFactors[0];\n}\n\n// src/internals/machines/utils/assert.ts\nfunction assertIsDefined(value, label) {\n  if (value === void 0 || value === null) {\n    throw new Error(`${label || value} is not defined`);\n  }\n}\nfunction assertActorEventError(event) {\n  if (\"error\" in event === false) {\n    throw new Error(`Expected an error event, got \"${event.type}\"`);\n  }\n}\n\n// src/internals/machines/sign-in/verification.types.ts\nvar SignInVerificationDelays = {\n  resendableTimeout: 1e3\n  // 1 second\n};\n\n// src/internals/machines/sign-in/verification.machine.ts\nvar isNonPreparableStrategy = (strategy) => {\n  if (!strategy) {\n    return false;\n  }\n  return [\"passkey\", \"password\"].includes(strategy);\n};\nvar SignInVerificationMachineId = \"SignInVerification\";\nvar SignInVerificationMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    determineStartingFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(\n      () => Promise.reject(new ClerkElementsRuntimeError(\"Actor `determineStartingFactor` must be overridden\"))\n    ),\n    prepare: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(\n      () => Promise.reject(new ClerkElementsRuntimeError(\"Actor `prepare` must be overridden\"))\n    ),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(\n      () => Promise.reject(new ClerkElementsRuntimeError(\"Actor `attempt` must be overridden\"))\n    ),\n    attemptPasskey: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(({ input: { parent, flow } }) => {\n      return parent.getSnapshot().context.clerk.client.signIn.authenticateWithPasskey({\n        flow\n      });\n    })\n  },\n  actions: {\n    resendableTick: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ context }) => ({\n      resendable: context.resendableAfter === 0,\n      resendableAfter: context.resendableAfter > 0 ? context.resendableAfter - 1 : context.resendableAfter\n    })),\n    resendableReset: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      resendable: false,\n      resendableAfter: RESENDABLE_COUNTDOWN_DEFAULT\n    }),\n    validateRegisteredStrategies: ({ context }) => {\n      var _a;\n      const clerk = context.parent.getSnapshot().context.clerk;\n      if ((_a = clerk.__unstable__environment) == null ? void 0 : _a.isProduction()) {\n        return;\n      }\n      if (false) {}\n    },\n    sendToNext: ({ context, event }) => context.parent.send({ type: \"NEXT\", resource: event.output }),\n    sendToLoading,\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    ),\n    setConsoleError: ({ event }) => {\n      if (true) {\n        return;\n      }\n      assertActorEventError(event);\n      const error = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.isClerkAPIResponseError)(event.error) ? event.error.errors[0].longMessage : event.error.message;\n      console.error(`Unable to fulfill the prepare or attempt request for the sign-in verification.\n      Error: ${error}\n      Please open an issue if you continue to run into this issue.`);\n    }\n  },\n  guards: {\n    isResendable: ({ context }) => context.resendable || context.resendableAfter === 0,\n    isNeverResendable: ({ context }) => {\n      var _a;\n      return isNonPreparableStrategy((_a = context.currentFactor) == null ? void 0 : _a.strategy);\n    }\n  },\n  delays: SignInVerificationDelays,\n  types: {}\n}).createMachine({\n  id: SignInVerificationMachineId,\n  context: ({ input }) => ({\n    currentFactor: null,\n    basePath: input.basePath || SIGN_IN_DEFAULT_BASE_PATH,\n    formRef: input.formRef,\n    loadingStep: \"verifications\",\n    parent: input.parent,\n    registeredStrategies: /* @__PURE__ */ new Set(),\n    resendable: false,\n    resendableAfter: RESENDABLE_COUNTDOWN_DEFAULT\n  }),\n  initial: \"Init\",\n  on: {\n    \"NAVIGATE.PREVIOUS\": \".Hist\",\n    \"STRATEGY.REGISTER\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        registeredStrategies: ({ context, event }) => context.registeredStrategies.add(event.factor)\n      })\n    },\n    \"STRATEGY.UNREGISTER\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        registeredStrategies: ({ context, event }) => {\n          context.registeredStrategies.delete(event.factor);\n          return context.registeredStrategies;\n        }\n      })\n    }\n  },\n  states: {\n    Init: {\n      tags: [\"state:preparing\", \"state:loading\"],\n      invoke: {\n        id: \"determineStartingFactor\",\n        src: \"determineStartingFactor\",\n        input: ({ context }) => ({\n          parent: context.parent\n        }),\n        onDone: {\n          target: \"Preparing\",\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n            currentFactor: ({ event }) => event.output\n          })\n        },\n        onError: {\n          target: \"Preparing\",\n          actions: [\n            (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(\"Clerk [Sign In Verification]: Error determining starting factor\"),\n            (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n              currentFactor: { strategy: \"password\" }\n            })\n          ]\n        }\n      }\n    },\n    Preparing: {\n      tags: [\"state:preparing\", \"state:loading\"],\n      invoke: {\n        id: \"prepare\",\n        src: \"prepare\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          resendable: context.resendable,\n          params: {\n            ...context.currentFactor,\n            redirectUrl: `${window.location.origin}${context.basePath}${MAGIC_LINK_VERIFY_PATH_ROUTE}`\n          }\n        }),\n        onDone: {\n          actions: \"resendableReset\",\n          target: \"Pending\"\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"setConsoleError\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    Pending: {\n      tags: [\"state:pending\"],\n      description: \"Waiting for user input\",\n      on: {\n        \"AUTHENTICATE.PASSKEY\": {\n          target: \"AttemptingPasskey\",\n          reenter: true\n        },\n        \"NAVIGATE.CHOOSE_STRATEGY\": \"ChooseStrategy\",\n        \"NAVIGATE.FORGOT_PASSWORD\": \"ChooseStrategy\",\n        RETRY: \"Preparing\",\n        SUBMIT: {\n          target: \"Attempting\",\n          reenter: true\n        }\n      },\n      initial: \"Init\",\n      states: {\n        Init: {\n          description: \"Marks appropriate factors as never resendable.\",\n          always: [\n            {\n              guard: \"isNeverResendable\",\n              target: \"NeverResendable\"\n            },\n            {\n              target: \"NotResendable\"\n            }\n          ]\n        },\n        Resendable: {\n          description: \"Waiting for user to retry\"\n        },\n        NeverResendable: {\n          description: \"Handles never resendable\",\n          on: {\n            RETRY: {\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(\"Never retriable\")\n            }\n          }\n        },\n        NotResendable: {\n          description: \"Handle countdowns\",\n          on: {\n            RETRY: {\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(({ context }) => `Not retriable; Try again in ${context.resendableAfter}s`)\n            }\n          },\n          after: {\n            resendableTimeout: [\n              {\n                description: \"Set as retriable if countdown is 0\",\n                guard: \"isResendable\",\n                actions: \"resendableTick\",\n                target: \"Resendable\"\n              },\n              {\n                description: \"Continue countdown if not retriable\",\n                actions: \"resendableTick\",\n                target: \"NotResendable\",\n                reenter: true\n              }\n            ]\n          }\n        }\n      },\n      after: {\n        3e3: {\n          actions: \"validateRegisteredStrategies\"\n        }\n      }\n    },\n    ChooseStrategy: {\n      description: \"Handles both choose strategy and forgot password as the latter is similar in functionality\",\n      tags: [\"state:choose-strategy\", \"state:forgot-password\"],\n      on: {\n        \"STRATEGY.UPDATE\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ currentFactor: ({ event }) => event.factor || null }),\n          target: \"Preparing\"\n        }\n      }\n    },\n    Attempting: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attempt\",\n        src: \"attempt\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          currentFactor: context.currentFactor,\n          fields: context.formRef.getSnapshot().context.fields\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"setConsoleError\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingPasskey: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attemptPasskey\",\n        src: \"attemptPasskey\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          flow: \"discoverable\"\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    Hist: {\n      type: \"history\"\n    }\n  }\n});\nvar SignInFirstFactorMachine = SignInVerificationMachine.provide({\n  actors: {\n    determineStartingFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(async ({ input }) => {\n      var _a;\n      const clerk = input.parent.getSnapshot().context.clerk;\n      return Promise.resolve(\n        determineStartingSignInFactor(\n          clerk.client.signIn.supportedFirstFactors,\n          clerk.client.signIn.identifier,\n          (_a = clerk.__unstable__environment) == null ? void 0 : _a.displayConfig.preferredSignInStrategy\n        )\n      );\n    }),\n    prepare: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(async ({ input }) => {\n      const { params, parent, resendable } = input;\n      const clerk = parent.getSnapshot().context.clerk;\n      const currentVerificationExpiration = clerk.client.signIn.firstFactorVerification.expireAt;\n      const needsPrepare = resendable || !currentVerificationExpiration || currentVerificationExpiration < /* @__PURE__ */ new Date();\n      if (isNonPreparableStrategy(params == null ? void 0 : params.strategy) || !needsPrepare) {\n        return Promise.resolve(clerk.client.signIn);\n      }\n      assertIsDefined(params, \"First factor params\");\n      return await clerk.client.signIn.prepareFirstFactor(params);\n    }),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(async ({ input }) => {\n      var _a, _b, _c, _d;\n      const { currentFactor, fields, parent } = input;\n      assertIsDefined(currentFactor, \"Current factor\");\n      let attemptParams;\n      const strategy = currentFactor.strategy;\n      const code = (_a = fields.get(\"code\")) == null ? void 0 : _a.value;\n      const password = (_b = fields.get(\"password\")) == null ? void 0 : _b.value;\n      switch (strategy) {\n        case \"passkey\": {\n          return await parent.getSnapshot().context.clerk.client.signIn.authenticateWithPasskey();\n        }\n        case \"password\": {\n          assertIsDefined(password, \"Password\");\n          attemptParams = {\n            strategy,\n            password\n          };\n          break;\n        }\n        case \"reset_password_phone_code\":\n        case \"reset_password_email_code\": {\n          assertIsDefined(code, \"Code for resetting phone/email\");\n          attemptParams = {\n            strategy,\n            code,\n            password\n          };\n          break;\n        }\n        case \"phone_code\":\n        case \"email_code\": {\n          assertIsDefined(code, \"Code for phone/email\");\n          attemptParams = {\n            strategy,\n            code\n          };\n          break;\n        }\n        case \"web3_metamask_signature\": {\n          const signature = (_c = fields.get(\"signature\")) == null ? void 0 : _c.value;\n          assertIsDefined(signature, \"Web3 Metamask signature\");\n          attemptParams = {\n            strategy,\n            signature\n          };\n          break;\n        }\n        case \"web3_coinbase_wallet_signature\": {\n          const signature = (_d = fields.get(\"signature\")) == null ? void 0 : _d.value;\n          assertIsDefined(signature, \"Web3 Coinbase Wallet signature\");\n          attemptParams = {\n            strategy,\n            signature\n          };\n          break;\n        }\n        default:\n          throw new ClerkElementsRuntimeError(`Invalid strategy: ${strategy}`);\n      }\n      return await parent.getSnapshot().context.clerk.client.signIn.attemptFirstFactor(attemptParams);\n    })\n  }\n});\nvar SignInSecondFactorMachine = SignInVerificationMachine.provide({\n  actors: {\n    determineStartingFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(\n      async ({ input }) => Promise.resolve(\n        determineStartingSignInSecondFactor(\n          input.parent.getSnapshot().context.clerk.client.signIn.supportedSecondFactors\n        )\n      )\n    ),\n    prepare: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(async ({ input }) => {\n      const { params, parent, resendable } = input;\n      const clerk = parent.getSnapshot().context.clerk;\n      const currentVerificationExpiration = clerk.client.signIn.secondFactorVerification.expireAt;\n      const needsPrepare = resendable || !currentVerificationExpiration || currentVerificationExpiration < /* @__PURE__ */ new Date();\n      assertIsDefined(params, \"Second factor params\");\n      if (params.strategy !== \"phone_code\" || !needsPrepare) {\n        return Promise.resolve(clerk.client.signIn);\n      }\n      return await clerk.client.signIn.prepareSecondFactor({\n        strategy: params.strategy,\n        phoneNumberId: params.phoneNumberId\n      });\n    }),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(async ({ input }) => {\n      var _a;\n      const { fields, parent, currentFactor } = input;\n      const code = (_a = fields.get(\"code\")) == null ? void 0 : _a.value;\n      assertIsDefined(currentFactor, \"Current factor\");\n      assertIsDefined(code, \"Code\");\n      return await parent.getSnapshot().context.clerk.client.signIn.attemptSecondFactor({\n        strategy: currentFactor.strategy,\n        code\n      });\n    })\n  }\n});\n\n// src/internals/machines/sign-in/router.machine.ts\n\n\n\n\n// src/internals/machines/third-party/third-party.actors.ts\n\n\n// src/internals/machines/utils/clerkjs.ts\nfunction isClerkJSEvent(eventObj, event) {\n  return Object.values(eventObj).includes(event);\n}\nvar ClerkJSNavigationEvent = {\n  complete: \"CLERKJS.NAVIGATE.COMPLETE\",\n  signUp: \"CLERKJS.NAVIGATE.SIGN_UP\",\n  continue: \"CLERKJS.NAVIGATE.CONTINUE\",\n  generic: \"CLERKJS.NAVIGATE.GENERIC\",\n  resetPassword: \"CLERKJS.NAVIGATE.RESET_PASSWORD\",\n  signIn: \"CLERKJS.NAVIGATE.SIGN_IN\",\n  verification: \"CLERKJS.NAVIGATE.VERIFICATION\"\n};\nfunction isClerkJSNavigationEvent(event) {\n  return isClerkJSEvent(ClerkJSNavigationEvent, event);\n}\n\n// src/internals/machines/third-party/third-party.actors.ts\nvar redirect = (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(\n  async ({ input: { flow, params, parent } }) => {\n    const clerk = parent.getSnapshot().context.clerk;\n    return clerk.client[flow].authenticateWithRedirect({\n      redirectUrl: clerk.buildUrlWithAuth(params.redirectUrl || \"/\"),\n      redirectUrlComplete: clerk.buildUrlWithAuth(params.redirectUrlComplete || \"/\"),\n      ...params\n    });\n  }\n);\nvar handleRedirectCallback = (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromCallback)(\n  ({ sendBack, input: parent }) => {\n    var _a;\n    const clerk = parent.getSnapshot().context.clerk;\n    const displayConfig = (_a = clerk.__unstable__environment) == null ? void 0 : _a.displayConfig;\n    const customNavigate = (toEvt) => {\n      const to = toEvt.split(\"/\").slice(-1)[0];\n      if (isClerkJSNavigationEvent(to)) {\n        sendBack({ type: to });\n      } else if (to === (displayConfig == null ? void 0 : displayConfig.signInUrl)) {\n        sendBack({ type: ClerkJSNavigationEvent.signIn });\n      } else if (to === (displayConfig == null ? void 0 : displayConfig.signUpUrl)) {\n        sendBack({ type: ClerkJSNavigationEvent.signUp });\n      } else {\n        sendBack({ type: \"FAILURE\", error: new ClerkElementsRuntimeError(`Unknown navigation event: ${to}`) });\n      }\n      return Promise.resolve();\n    };\n    const loadedClerk = clerk.clerkjs;\n    void loadedClerk.handleRedirectCallback(\n      {\n        signInForceRedirectUrl: ClerkJSNavigationEvent.complete,\n        signInFallbackRedirectUrl: ClerkJSNavigationEvent.complete,\n        signUpForceRedirectUrl: ClerkJSNavigationEvent.signUp,\n        signUpFallbackRedirectUrl: ClerkJSNavigationEvent.signUp,\n        continueSignUpUrl: ClerkJSNavigationEvent.continue,\n        firstFactorUrl: ClerkJSNavigationEvent.signIn,\n        resetPasswordUrl: ClerkJSNavigationEvent.resetPassword,\n        secondFactorUrl: ClerkJSNavigationEvent.signIn,\n        verifyEmailAddressUrl: ClerkJSNavigationEvent.verification,\n        verifyPhoneNumberUrl: ClerkJSNavigationEvent.verification,\n        signUpUrl: ClerkJSNavigationEvent.signUp,\n        signInUrl: ClerkJSNavigationEvent.signIn\n      },\n      customNavigate\n    );\n    return () => void 0;\n  }\n);\n\n// src/internals/machines/third-party/third-party.machine.ts\n\nvar ThirdPartyMachineId = \"ThirdParty\";\nvar ThirdPartyMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    handleRedirectCallback,\n    redirect\n  },\n  actions: {\n    logError: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(({ event }) => `Error: ${event.type}`),\n    assignActiveStrategy: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      activeStrategy: ({ event }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"REDIRECT\");\n        return event.params.strategy;\n      }\n    }),\n    unassignActiveStrategy: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      activeStrategy: null\n    }),\n    sendToNext: ({ context }) => context.parent.send({ type: \"NEXT\" }),\n    sendToLoading,\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    )\n  },\n  guards: {\n    isExampleMode: ({ context }) => Boolean(context.parent.getSnapshot().context.exampleMode)\n  },\n  types: {}\n}).createMachine({\n  id: ThirdPartyMachineId,\n  context: ({ input }) => ({\n    activeStrategy: null,\n    basePath: input.basePath,\n    formRef: input.formRef,\n    flow: input.flow,\n    parent: input.parent,\n    loadingStep: \"strategy\"\n  }),\n  initial: \"Idle\",\n  states: {\n    Idle: {\n      description: \"Sets third-party providers if not already set, and waits for a redirect or callback event\",\n      on: {\n        CALLBACK: \"HandlingCallback\",\n        REDIRECT: {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.E)(\"isExampleMode\"),\n          target: \"Redirecting\",\n          reenter: true\n        }\n      }\n    },\n    Redirecting: {\n      description: \"Redirects to the third-party provider for authentication\",\n      tags: [\"state:redirect\", \"state:loading\"],\n      entry: [\"assignActiveStrategy\", \"sendToLoading\"],\n      exit: [\"unassignActiveStrategy\", \"sendToLoading\"],\n      invoke: {\n        id: \"redirect\",\n        src: \"redirect\",\n        input: ({ context, event }) => {\n          (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"REDIRECT\");\n          return {\n            basePath: context.basePath,\n            flow: context.flow,\n            params: event.params,\n            parent: context.parent\n          };\n        },\n        onError: {\n          actions: \"setFormErrors\",\n          target: \"Idle\"\n        }\n      }\n    },\n    HandlingCallback: {\n      description: \"Handles the callback from the third-party provider\",\n      tags: [\"state:callback\", \"state:loading\"],\n      invoke: {\n        id: \"handleRedirectCallback\",\n        src: \"handleRedirectCallback\",\n        input: ({ context }) => context.parent,\n        onError: {\n          actions: [\"logError\", \"setFormErrors\"],\n          target: \"Idle\"\n        }\n      },\n      on: {\n        \"CLERKJS.NAVIGATE.*\": {\n          actions: \"sendToNext\",\n          target: \"Idle\"\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/utils/next.ts\nfunction shouldUseVirtualRouting() {\n  if (typeof window === \"undefined\") {\n    return false;\n  }\n  if (!window.next) {\n    return false;\n  }\n  return window.next.version < NEXT_WINDOW_HISTORY_SUPPORT_VERSION;\n}\n\n// src/internals/machines/sign-in/reset-password.machine.ts\n\nvar SignInResetPasswordMachineId = \"SignInResetPasswordMachine\";\nvar SignInResetPasswordMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(\n      ({ input: { fields, parent } }) => {\n        var _a, _b;\n        const password = ((_a = fields.get(\"password\")) == null ? void 0 : _a.value) || \"\";\n        const signOutOfOtherSessions = ((_b = fields.get(\"signOutOfOtherSessions\")) == null ? void 0 : _b.checked) || false;\n        return parent.getSnapshot().context.clerk.client.signIn.resetPassword({ password, signOutOfOtherSessions });\n      }\n    )\n  },\n  actions: {\n    sendToLoading,\n    sendToNext: ({ context, event }) => context.parent.send({ type: \"NEXT\", resource: event.output }),\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    )\n  },\n  types: {}\n}).createMachine({\n  id: SignInResetPasswordMachineId,\n  context: ({ input }) => ({\n    loadingStep: \"reset-password\",\n    parent: input.parent,\n    formRef: input.formRef\n  }),\n  initial: \"Pending\",\n  states: {\n    Pending: {\n      tags: [\"state:pending\"],\n      description: \"Waiting for user input\",\n      on: {\n        SUBMIT: {\n          target: \"Attempting\",\n          reenter: true\n        }\n      }\n    },\n    Attempting: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attempt\",\n        src: \"attempt\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          fields: context.formRef.getSnapshot().context.fields\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/sign-in/start.machine.ts\n\nvar SignInStartMachineId = \"SignInStart\";\nvar SignInStartMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    attemptPasskey: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(({ input: { parent, flow } }) => {\n      return parent.getSnapshot().context.clerk.client.signIn.authenticateWithPasskey({\n        flow\n      });\n    }),\n    attemptWeb3: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(\n      ({ input: { parent, strategy } }) => {\n        if (strategy === \"web3_metamask_signature\") {\n          return parent.getSnapshot().context.clerk.client.signIn.authenticateWithMetamask();\n        }\n        if (strategy === \"web3_coinbase_wallet_signature\") {\n          return parent.getSnapshot().context.clerk.client.signIn.authenticateWithCoinbaseWallet();\n        }\n        throw new ClerkElementsRuntimeError(`Unsupported Web3 strategy: ${strategy}`);\n      }\n    ),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(\n      ({ input: { fields, parent } }) => {\n        const clerk = parent.getSnapshot().context.clerk;\n        const password = fields.get(\"password\");\n        const identifier = fields.get(\"identifier\");\n        const passwordParams = (password == null ? void 0 : password.value) ? {\n          password: password.value,\n          strategy: \"password\"\n        } : {};\n        return clerk.client.signIn.create({\n          identifier: (identifier == null ? void 0 : identifier.value) || \"\",\n          ...passwordParams\n        });\n      }\n    )\n  },\n  actions: {\n    sendToNext: ({ context, event }) => {\n      return context.parent.send({ type: \"NEXT\", resource: event == null ? void 0 : event.output });\n    },\n    sendToLoading,\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    )\n  },\n  guards: {\n    isExampleMode: ({ context }) => Boolean(context.parent.getSnapshot().context.exampleMode)\n  },\n  types: {}\n}).createMachine({\n  id: SignInStartMachineId,\n  context: ({ input }) => ({\n    basePath: input.basePath || SIGN_IN_DEFAULT_BASE_PATH,\n    parent: input.parent,\n    formRef: input.formRef,\n    loadingStep: \"start\"\n  }),\n  initial: \"Pending\",\n  states: {\n    Pending: {\n      tags: [\"state:pending\"],\n      description: \"Waiting for user input\",\n      on: {\n        SUBMIT: {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.E)(\"isExampleMode\"),\n          target: \"Attempting\",\n          reenter: true\n        },\n        \"AUTHENTICATE.PASSKEY\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.E)(\"isExampleMode\"),\n          target: \"AttemptingPasskey\",\n          reenter: true\n        },\n        \"AUTHENTICATE.PASSKEY.AUTOFILL\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.E)(\"isExampleMode\"),\n          target: \"AttemptingPasskeyAutoFill\",\n          reenter: false\n        },\n        \"AUTHENTICATE.WEB3\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.E)(\"isExampleMode\"),\n          target: \"AttemptingWeb3\",\n          reenter: true\n        }\n      }\n    },\n    Attempting: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attempt\",\n        src: \"attempt\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          fields: context.formRef.getSnapshot().context.fields\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingPasskey: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attemptPasskey\",\n        src: \"attemptPasskey\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          flow: \"discoverable\"\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingPasskeyAutoFill: {\n      on: {\n        \"AUTHENTICATE.PASSKEY\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.E)(\"isExampleMode\"),\n          target: \"AttemptingPasskey\",\n          reenter: true\n        },\n        SUBMIT: {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.E)(\"isExampleMode\"),\n          target: \"Attempting\",\n          reenter: true\n        }\n      },\n      invoke: {\n        id: \"attemptPasskeyAutofill\",\n        src: \"attemptPasskey\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          flow: \"autofill\"\n        }),\n        onDone: {\n          actions: [\"sendToNext\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingWeb3: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attemptWeb3\",\n        src: \"attemptWeb3\",\n        input: ({ context, event }) => {\n          (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"AUTHENTICATE.WEB3\");\n          return {\n            parent: context.parent,\n            strategy: event.strategy\n          };\n        },\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/sign-in/router.machine.ts\nvar isCurrentPath = (path) => ({ context }, _params) => {\n  var _a, _b;\n  return (_b = (_a = context.router) == null ? void 0 : _a.match(path)) != null ? _b : false;\n};\nvar needsStatus = (status) => ({ context, event }, _) => {\n  var _a, _b;\n  return ((_a = event == null ? void 0 : event.resource) == null ? void 0 : _a.status) === status || ((_b = context.clerk) == null ? void 0 : _b.client.signIn.status) === status;\n};\nvar SignInRouterMachineId = \"SignInRouter\";\nvar SignInRouterMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    firstFactorMachine: SignInFirstFactorMachine,\n    formMachine: FormMachine,\n    resetPasswordMachine: SignInResetPasswordMachine,\n    startMachine: SignInStartMachine,\n    secondFactorMachine: SignInSecondFactorMachine,\n    thirdPartyMachine: ThirdPartyMachine,\n    webAuthnAutofillSupport: (0,xstate__WEBPACK_IMPORTED_MODULE_17__.fromPromise)(() => (0,_clerk_shared_webauthn__WEBPACK_IMPORTED_MODULE_16__.isWebAuthnAutofillSupported)())\n  },\n  actions: {\n    clearFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(({ context }) => context.formRef, { type: \"ERRORS.CLEAR\" }),\n    navigateInternal: ({ context }, { path, force = false }) => {\n      if (!context.router) {\n        return;\n      }\n      if (!force && shouldUseVirtualRouting()) {\n        return;\n      }\n      if (context.exampleMode) {\n        return;\n      }\n      const resolvedPath = (0,_clerk_shared_url__WEBPACK_IMPORTED_MODULE_18__.joinURL)(context.router.basePath, path);\n      if (resolvedPath === context.router.pathname()) {\n        return;\n      }\n      context.router.shallowPush(resolvedPath);\n    },\n    navigateExternal: ({ context }, { path }) => {\n      var _a;\n      return (_a = context.router) == null ? void 0 : _a.push(path);\n    },\n    raiseNext: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.O)({ type: \"NEXT\" }),\n    setActive: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue, check, context, event }) => {\n      if (check(\"isExampleMode\")) {\n        return;\n      }\n      const id = event == null ? void 0 : event.id;\n      const lastActiveSessionId = context.clerk.client.lastActiveSessionId;\n      const createdSessionId = ((event == null ? void 0 : event.resource) || context.clerk.client.signIn).createdSessionId;\n      const session = id || createdSessionId || lastActiveSessionId || null;\n      const beforeEmit = () => {\n        var _a, _b;\n        return (_b = context.router) == null ? void 0 : _b.push(((_a = context.router) == null ? void 0 : _a.searchParams().get(\"redirect_url\")) || context.clerk.buildAfterSignInUrl());\n      };\n      void context.clerk.setActive({ session, beforeEmit });\n      enqueue.raise({ type: \"RESET\" }, { delay: 2e3 });\n    }),\n    setError: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      error: (_, { error }) => {\n        if (error) {\n          return error;\n        }\n        return new ClerkElementsRuntimeError(\"Unknown error\");\n      }\n    }),\n    setFormErrors: ({ context }, params) => (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(context.formRef, {\n      type: \"ERRORS.SET\",\n      error: params.error\n    }),\n    setFormOAuthErrors: ({ context }) => {\n      const errorOrig = context.clerk.client.signIn.firstFactorVerification.error;\n      if (!errorOrig) {\n        return;\n      }\n      let error;\n      switch (errorOrig.code) {\n        case ERROR_CODES.NOT_ALLOWED_TO_SIGN_UP:\n        case ERROR_CODES.OAUTH_ACCESS_DENIED:\n        case ERROR_CODES.NOT_ALLOWED_ACCESS:\n        case ERROR_CODES.SAML_USER_ATTRIBUTE_MISSING:\n        case ERROR_CODES.OAUTH_EMAIL_DOMAIN_RESERVED_BY_SAML:\n        case ERROR_CODES.USER_LOCKED:\n          error = new ClerkElementsError(errorOrig.code, errorOrig.longMessage || \"\");\n          break;\n        default:\n          error = new ClerkElementsError(\n            \"unable_to_complete\",\n            \"Unable to complete action at this time. If the problem persists please contact support.\"\n          );\n      }\n      context.formRef.send({\n        type: \"ERRORS.SET\",\n        error\n      });\n    },\n    transfer: ({ context }) => {\n      var _a;\n      const searchParams = new URLSearchParams({ __clerk_transfer: \"1\" });\n      (_a = context.router) == null ? void 0 : _a.push(`${context.signUpPath}?${searchParams}`);\n    }\n  },\n  guards: {\n    hasAuthenticatedViaClerkJS: ({ context }) => Boolean(context.clerk.client.signIn.status === null && context.clerk.client.lastActiveSessionId),\n    hasOAuthError: ({ context }) => {\n      var _a, _b, _c, _d;\n      return Boolean((_d = (_c = (_b = (_a = context.clerk) == null ? void 0 : _a.client) == null ? void 0 : _b.signIn) == null ? void 0 : _c.firstFactorVerification) == null ? void 0 : _d.error);\n    },\n    hasResource: ({ context }) => {\n      var _a, _b, _c;\n      return Boolean((_c = (_b = (_a = context.clerk) == null ? void 0 : _a.client) == null ? void 0 : _b.signIn) == null ? void 0 : _c.status);\n    },\n    isLoggedInAndSingleSession: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.D)([\"isLoggedIn\", \"isSingleSessionMode\", (0,xstate__WEBPACK_IMPORTED_MODULE_19__.E)(\"isExampleMode\")]),\n    isActivePathRoot: isCurrentPath(\"/\"),\n    isComplete: ({ context, event }) => {\n      const resource = event == null ? void 0 : event.resource;\n      const signIn = context.clerk.client.signIn;\n      return (resource == null ? void 0 : resource.status) === \"complete\" && Boolean(resource == null ? void 0 : resource.createdSessionId) || signIn.status === \"complete\" && Boolean(signIn.createdSessionId);\n    },\n    isLoggedIn: ({ context }) => {\n      var _a;\n      return Boolean((_a = context.clerk) == null ? void 0 : _a.user);\n    },\n    isSingleSessionMode: ({ context }) => {\n      var _a, _b;\n      return Boolean((_b = (_a = context.clerk) == null ? void 0 : _a.__unstable__environment) == null ? void 0 : _b.authConfig.singleSessionMode);\n    },\n    isExampleMode: ({ context }) => Boolean(context.exampleMode),\n    needsStart: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.F)([(0,xstate__WEBPACK_IMPORTED_MODULE_19__.E)(\"hasResource\"), \"statusNeedsIdentifier\", isCurrentPath(\"/\")]),\n    needsFirstFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.D)([\"statusNeedsFirstFactor\", isCurrentPath(\"/continue\")]),\n    needsSecondFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.D)([\"statusNeedsSecondFactor\", isCurrentPath(\"/continue\")]),\n    needsCallback: isCurrentPath(SSO_CALLBACK_PATH_ROUTE),\n    needsChooseSession: isCurrentPath(CHOOSE_SESSION_PATH_ROUTE),\n    needsNewPassword: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.D)([\"statusNeedsNewPassword\", isCurrentPath(\"/new-password\")]),\n    statusNeedsIdentifier: needsStatus(\"needs_identifier\"),\n    statusNeedsFirstFactor: needsStatus(\"needs_first_factor\"),\n    statusNeedsSecondFactor: needsStatus(\"needs_second_factor\"),\n    statusNeedsNewPassword: needsStatus(\"needs_new_password\")\n  },\n  types: {}\n}).createMachine({\n  id: SignInRouterMachineId,\n  // @ts-expect-error - Set in INIT event\n  context: {},\n  initial: \"Idle\",\n  on: {\n    \"AUTHENTICATE.OAUTH\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(ThirdPartyMachineId, ({ context, event }) => {\n        var _a, _b, _c, _d;\n        return {\n          type: \"REDIRECT\",\n          params: {\n            strategy: event.strategy,\n            redirectUrl: `${((_a = context.router) == null ? void 0 : _a.mode) === ROUTING.virtual ? (_b = context.clerk.__unstable__environment) == null ? void 0 : _b.displayConfig.signInUrl : (_c = context.router) == null ? void 0 : _c.basePath}${SSO_CALLBACK_PATH_ROUTE}`,\n            redirectUrlComplete: ((_d = context.router) == null ? void 0 : _d.searchParams().get(\"redirect_url\")) || context.clerk.buildAfterSignInUrl()\n          }\n        };\n      })\n    },\n    \"AUTHENTICATE.SAML\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(ThirdPartyMachineId, ({ context }) => {\n        var _a, _b, _c, _d, _e;\n        return {\n          type: \"REDIRECT\",\n          params: {\n            strategy: \"saml\",\n            identifier: (_a = context.formRef.getSnapshot().context.fields.get(\"identifier\")) == null ? void 0 : _a.value,\n            redirectUrl: `${((_b = context.router) == null ? void 0 : _b.mode) === ROUTING.virtual ? (_c = context.clerk.__unstable__environment) == null ? void 0 : _c.displayConfig.signInUrl : (_d = context.router) == null ? void 0 : _d.basePath}${SSO_CALLBACK_PATH_ROUTE}`,\n            redirectUrlComplete: ((_e = context.router) == null ? void 0 : _e.searchParams().get(\"redirect_url\")) || context.clerk.buildAfterSignInUrl()\n          }\n        };\n      })\n    },\n    \"FORM.ATTACH\": {\n      description: \"Attach/re-attach the form to the router.\",\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue, event }) => {\n        enqueue.assign({\n          formRef: event.formRef\n        });\n        enqueue.raise({ type: \"RESET.STEP\" });\n      })\n    },\n    \"NAVIGATE.PREVIOUS\": \".Hist\",\n    \"NAVIGATE.START\": \".Start\",\n    LOADING: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => ({\n        loading: {\n          isLoading: event.isLoading,\n          step: event.step,\n          strategy: event.strategy,\n          action: event.action\n        }\n      }))\n    },\n    RESET: \".Idle\"\n  },\n  states: {\n    Idle: {\n      invoke: {\n        id: \"webAuthnAutofill\",\n        src: \"webAuthnAutofillSupport\",\n        onDone: {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ webAuthnAutofillSupport: ({ event }) => event.output })\n        }\n      },\n      on: {\n        INIT: {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => ({\n            clerk: event.clerk,\n            exampleMode: event.exampleMode || false,\n            formRef: event.formRef,\n            loading: {\n              isLoading: false\n            },\n            router: event.router,\n            signUpPath: event.signUpPath || SIGN_UP_DEFAULT_BASE_PATH\n          })),\n          target: \"Init\"\n        }\n      }\n    },\n    Init: {\n      entry: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ context, enqueue, self }) => {\n        var _a, _b;\n        if (!self.getSnapshot().children[ThirdPartyMachineId]) {\n          enqueue.spawnChild(\"thirdPartyMachine\", {\n            id: ThirdPartyMachineId,\n            systemId: ThirdPartyMachineId,\n            input: {\n              basePath: (_b = (_a = context.router) == null ? void 0 : _a.basePath) != null ? _b : SIGN_IN_DEFAULT_BASE_PATH,\n              flow: \"signIn\",\n              formRef: context.formRef,\n              parent: self\n            }\n          });\n        }\n      }),\n      always: [\n        {\n          guard: \"needsCallback\",\n          target: \"Callback\"\n        },\n        {\n          guard: \"needsChooseSession\",\n          target: \"ChooseSession\"\n        },\n        {\n          guard: \"isComplete\",\n          actions: \"setActive\"\n        },\n        {\n          guard: \"isLoggedInAndSingleSession\",\n          actions: [\n            (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(\"Already logged in\"),\n            {\n              type: \"navigateExternal\",\n              params: ({ context }) => {\n                var _a;\n                return {\n                  path: ((_a = context.router) == null ? void 0 : _a.searchParams().get(\"redirect_url\")) || context.clerk.buildAfterSignInUrl()\n                };\n              }\n            }\n          ]\n        },\n        {\n          guard: \"needsStart\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/\" } },\n          target: \"Start\"\n        },\n        {\n          guard: \"needsFirstFactor\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/continue\" } },\n          target: \"FirstFactor\"\n        },\n        {\n          guard: \"needsSecondFactor\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/continue\" } },\n          target: \"SecondFactor\"\n        },\n        {\n          guard: \"needsNewPassword\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/reset-password\" } },\n          target: \"ResetPassword\"\n        },\n        {\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/\" } },\n          target: \"Start\"\n        }\n      ]\n    },\n    Start: {\n      tags: [\"step:start\"],\n      exit: \"clearFormErrors\",\n      invoke: {\n        id: \"start\",\n        src: \"startMachine\",\n        input: ({ context, self }) => {\n          var _a;\n          return {\n            basePath: (_a = context.router) == null ? void 0 : _a.basePath,\n            formRef: context.formRef,\n            parent: self\n          };\n        },\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          target: \"Start\",\n          reenter: true\n        },\n        \"AUTHENTICATE.PASSKEY\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"start\", ({ event }) => event)\n        },\n        \"AUTHENTICATE.PASSKEY.AUTOFILL\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"start\", ({ event }) => event)\n        },\n        \"AUTHENTICATE.WEB3\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"start\", ({ event }) => event)\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsFirstFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"FirstFactor\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ]\n      }\n    },\n    FirstFactor: {\n      tags: [\"step:first-factor\", \"step:verifications\"],\n      invoke: {\n        id: \"firstFactor\",\n        src: \"firstFactorMachine\",\n        input: ({ context, self }) => {\n          var _a;\n          return {\n            formRef: context.formRef,\n            parent: self,\n            basePath: (_a = context.router) == null ? void 0 : _a.basePath\n          };\n        },\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"AUTHENTICATE.PASSKEY\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", ({ event }) => event)\n        },\n        \"RESET.STEP\": {\n          target: \"FirstFactor\",\n          reenter: true\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ],\n        \"STRATEGY.UPDATE\": {\n          description: \"Send event to verification machine to update the current strategy.\",\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", ({ event }) => event),\n          target: \".Idle\"\n        }\n      },\n      initial: \"Idle\",\n      states: {\n        Idle: {\n          on: {\n            \"NAVIGATE.FORGOT_PASSWORD\": {\n              description: \"Navigate to forgot password screen.\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", ({ event }) => event),\n              target: \"ForgotPassword\"\n            },\n            \"NAVIGATE.CHOOSE_STRATEGY\": {\n              description: \"Navigate to choose strategy screen.\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", ({ event }) => event),\n              target: \"ChoosingStrategy\"\n            }\n          }\n        },\n        ChoosingStrategy: {\n          tags: [\"step:choose-strategy\"],\n          on: {\n            \"NAVIGATE.PREVIOUS\": {\n              description: \"Go to Idle, and also tell firstFactor to go to Pending\",\n              target: \"Idle\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", { type: \"NAVIGATE.PREVIOUS\" })\n            }\n          }\n        },\n        ForgotPassword: {\n          tags: [\"step:forgot-password\"],\n          on: {\n            \"NAVIGATE.PREVIOUS\": \"Idle\"\n          }\n        }\n      }\n    },\n    SecondFactor: {\n      tags: [\"step:second-factor\", \"step:verifications\"],\n      invoke: {\n        id: \"secondFactor\",\n        src: \"secondFactorMachine\",\n        input: ({ context, self }) => ({\n          formRef: context.formRef,\n          parent: self\n        }),\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          target: \"SecondFactor\",\n          reenter: true\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ],\n        \"STRATEGY.UPDATE\": {\n          description: \"Send event to verification machine to update the current strategy.\",\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"secondFactor\", ({ event }) => event),\n          target: \".Idle\"\n        }\n      },\n      initial: \"Idle\",\n      states: {\n        Idle: {\n          on: {\n            \"NAVIGATE.CHOOSE_STRATEGY\": {\n              description: \"Navigate to choose strategy screen.\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"secondFactor\", ({ event }) => event),\n              target: \"ChoosingStrategy\"\n            }\n          }\n        },\n        ChoosingStrategy: {\n          tags: [\"step:choose-strategy\"],\n          on: {\n            \"NAVIGATE.PREVIOUS\": {\n              description: \"Go to Idle, and also tell firstFactor to go to Pending\",\n              target: \"Idle\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"secondFactor\", { type: \"NAVIGATE.PREVIOUS\" })\n            }\n          }\n        }\n      }\n    },\n    ResetPassword: {\n      tags: [\"step:reset-password\"],\n      invoke: {\n        id: \"resetPassword\",\n        src: \"resetPasswordMachine\",\n        input: ({ context, self }) => ({\n          formRef: context.formRef,\n          parent: self\n        }),\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          target: \"ResetPassword\",\n          reenter: true\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsFirstFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"FirstFactor\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          }\n        ]\n      }\n    },\n    Callback: {\n      tags: [\"step:callback\"],\n      entry: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(ThirdPartyMachineId, { type: \"CALLBACK\" }),\n      on: {\n        NEXT: [\n          {\n            guard: \"hasOAuthError\",\n            actions: [\"setFormOAuthErrors\", { type: \"navigateInternal\", params: { force: true, path: \"/\" } }],\n            target: \"Start\"\n          },\n          {\n            guard: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.F)([\"isLoggedIn\", \"isComplete\", \"hasAuthenticatedViaClerkJS\"]),\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsIdentifier\",\n            actions: \"transfer\"\n          },\n          {\n            guard: \"statusNeedsFirstFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"FirstFactor\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ]\n      }\n    },\n    ChooseSession: {\n      tags: [\"step:choose-session\"],\n      on: {\n        \"SESSION.SET_ACTIVE\": {\n          actions: {\n            type: \"setActive\",\n            params: ({ event }) => ({ id: event.id })\n          }\n        }\n      }\n    },\n    Error: {\n      tags: [\"step:error\"],\n      on: {\n        NEXT: {\n          target: \"Start\",\n          actions: \"clearFormErrors\"\n        }\n      }\n    },\n    Hist: {\n      type: \"history\",\n      exit: \"clearFormErrors\"\n    }\n  }\n});\n\n// src/internals/machines/utils/formatters.ts\n\nfunction formatName(...args) {\n  switch (args.length) {\n    case 0:\n      return void 0;\n    case 1:\n      return (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__.titleize)(args[0]);\n    default:\n      return args.filter(Boolean).map(_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__.titleize).join(\" \");\n  }\n}\nfunction formatSalutation({\n  firstName,\n  lastName,\n  identifier\n}) {\n  return firstName && formatName(firstName) || lastName && formatName(lastName) || identifier || \"\";\n}\n\n// src/internals/machines/sign-in/router.selectors.ts\nfunction SignInSafeIdentifierSelectorForStrategy(strategy) {\n  return (s) => {\n    var _a, _b, _c;\n    const signIn = (_a = s.context.clerk) == null ? void 0 : _a.client.signIn;\n    if (strategy) {\n      const matchingFactors = [\n        ...(_b = signIn.supportedFirstFactors) != null ? _b : [],\n        ...(_c = signIn.supportedSecondFactors) != null ? _c : []\n      ].filter((f) => f.strategy === strategy);\n      const matchingFactorForIdentifier = signIn.identifier && matchingFactors.length > 0 ? matchingFactors.find((f) => \"safeIdentifier\" in f && f.safeIdentifier === signIn.identifier) : null;\n      const matchingFactorForStrategy = matchingFactors[0];\n      if (matchingFactorForIdentifier && \"safeIdentifier\" in matchingFactorForIdentifier) {\n        return matchingFactorForIdentifier.safeIdentifier;\n      }\n      if (matchingFactorForStrategy && \"safeIdentifier\" in matchingFactorForStrategy) {\n        return matchingFactorForStrategy.safeIdentifier;\n      }\n    }\n    return signIn.identifier || \"\";\n  };\n}\nfunction SignInSalutationSelector(s) {\n  var _a, _b, _c;\n  const signIn = (_a = s.context.clerk) == null ? void 0 : _a.client.signIn;\n  return formatSalutation({\n    firstName: (_b = signIn == null ? void 0 : signIn.userData) == null ? void 0 : _b.firstName,\n    identifier: signIn == null ? void 0 : signIn.identifier,\n    lastName: (_c = signIn == null ? void 0 : signIn.userData) == null ? void 0 : _c.lastName\n  });\n}\n\n// src/internals/machines/sign-in/router.types.ts\nvar SignInRouterSystemId = {\n  start: \"start\",\n  firstFactor: \"firstFactor\",\n  secondFactor: \"secondFactor\",\n  resetPassword: \"resetPassword\"\n};\n\n// src/react/sign-in/choose-strategy.tsx\n\nvar SignInChooseStrategyCtx = createContextForDomValidation(\"SignInChooseStrategyCtx\");\nfunction SignInChooseStrategy({ asChild, children, ...props }) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeStateFirstFactor = useActiveTags(\n    routerRef,\n    [\"step:verifications\", \"step:first-factor\", \"step:choose-strategy\"],\n    ActiveTagsMode.all\n  );\n  const activeStateSecondFactor = useActiveTags(\n    routerRef,\n    [\"step:verifications\", \"step:second-factor\", \"step:choose-strategy\"],\n    ActiveTagsMode.all\n  );\n  const activeState = activeStateFirstFactor || activeStateSecondFactor;\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"div\";\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseStrategyCtx.Provider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { ...props, children }) }) : null;\n}\nfunction SignInForgotPassword({ asChild, children, ...props }) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(\n    routerRef,\n    [\"step:verifications\", \"step:first-factor\", \"step:forgot-password\"],\n    ActiveTagsMode.all\n  );\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"div\";\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseStrategyCtx.Provider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { ...props, children }) }) : null;\n}\nvar SUPPORTED_STRATEGY_NAME = \"SignInSupportedStrategy\";\nvar SignInSupportedStrategy = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ asChild, children, name, ...rest }, forwardedRef) => {\n    const routerRef = SignInRouterCtx.useActorRef();\n    const snapshot = routerRef.getSnapshot();\n    const status = snapshot.context.clerk.client.signIn.status;\n    const supportedFirstFactors = status === \"needs_first_factor\" ? snapshot.context.clerk.client.signIn.supportedFirstFactors || [] : [];\n    const supportedSecondFactors = status === \"needs_second_factor\" ? snapshot.context.clerk.client.signIn.supportedSecondFactors || [] : [];\n    const factor = [...supportedFirstFactors, ...supportedSecondFactors].find((factor2) => name === factor2.strategy);\n    const currentFactor = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(\n      snapshot.children[SignInRouterSystemId.firstFactor] || snapshot.children[SignInRouterSystemId.secondFactor],\n      (state) => {\n        var _a;\n        return (_a = state == null ? void 0 : state.context.currentFactor) == null ? void 0 : _a.strategy;\n      }\n    );\n    const sendUpdateStrategyEvent = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n      () => routerRef.send({ type: \"STRATEGY.UPDATE\", factor }),\n      [routerRef, factor]\n    );\n    if (currentFactor === name) {\n      return null;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    return factor ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStrategyContext.Provider, { value: { strategy: name }, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        ref: forwardedRef,\n        onClick: sendUpdateStrategyEvent,\n        children: children || factor.strategy\n      }\n    ) }) : null;\n  }\n);\nSignInSupportedStrategy.displayName = SUPPORTED_STRATEGY_NAME;\n\n// src/react/sign-in/reset-password.tsx\n\nvar SignInResetPasswordCtx = createContextFromActorRef(\"SignInResetPasswordCtx\");\nfunction SignInResetPassword(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:reset-password\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInResetPasswordInner, { ...props }) : null;\n}\nfunction SignInResetPasswordInner(props) {\n  const ref = useSignInResetPasswordStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInResetPasswordCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-in/start.tsx\n\nvar SignInStartCtx = createContextFromActorRef(\"SignInStartCtx\");\nfunction SignInStart(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:start\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStartInner, { ...props }) : null;\n}\nfunction SignInStartInner(props) {\n  const ref = useSignInStartStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStartCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-in/verifications.tsx\n\n\n\n// src/internals/machines/utils/strategies.ts\nvar matchStrategy = (current, desired) => {\n  if (!current || !desired) {\n    return false;\n  }\n  if (current === desired) {\n    return true;\n  }\n  return current.startsWith(`${desired}_`);\n};\n\n// src/react/sign-in/verifications.tsx\n\nvar SignInFirstFactorCtx = createContextFromActorRef(\"SignInFirstFactorCtx\");\nvar SignInSecondFactorCtx = createContextFromActorRef(\"SignInSecondFactorCtx\");\nvar strategiesSelector = (state) => {\n  var _a;\n  return (_a = state.context.currentFactor) == null ? void 0 : _a.strategy;\n};\nfunction SignInStrategiesProvider({\n  children,\n  preferred,\n  actorRef,\n  ...props\n}) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const current = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(actorRef, strategiesSelector);\n  const isChoosingAltStrategy = useActiveTags(routerRef, [\"step:choose-strategy\", \"step:forgot-password\"]);\n  const isActive = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((name) => current ? matchStrategy(current, name) : false, [current]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(StrategiesContext.Provider, { value: { current, preferred, isActive }, children: isChoosingAltStrategy.active ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: actorRef,\n      ...props,\n      children\n    }\n  ) });\n}\nfunction useFactorCtx() {\n  const firstFactorRef = SignInFirstFactorCtx.useActorRef(true);\n  const secondFactorRef = SignInSecondFactorCtx.useActorRef(true);\n  return firstFactorRef || secondFactorRef;\n}\nfunction SignInStrategy({ children, name }) {\n  const { active } = useStrategy(name);\n  const factorCtx = useFactorCtx();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (factorCtx) {\n      factorCtx.send({ type: \"STRATEGY.REGISTER\", factor: name });\n    }\n    return () => {\n      if ((factorCtx == null ? void 0 : factorCtx.getSnapshot().status) === \"active\") {\n        factorCtx.send({ type: \"STRATEGY.UNREGISTER\", factor: name });\n      }\n    };\n  }, [factorCtx, name]);\n  return active ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStrategyContext.Provider, { value: { strategy: name }, children }) : null;\n}\nfunction SignInVerifications(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const { activeTags: activeRoutes } = useActiveTags(routerRef, [\"step:first-factor\", \"step:second-factor\"]);\n  if (activeRoutes.has(\"step:first-factor\")) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInFirstFactorInner, { ...props });\n  }\n  if (activeRoutes.has(\"step:second-factor\")) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInSecondFactorInner, { ...props });\n  }\n  return null;\n}\nfunction SignInFirstFactor(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:first-factor\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInFirstFactorInner, { ...props }) : null;\n}\nfunction SignInSecondFactor(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:second-factor\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInSecondFactorInner, { ...props }) : null;\n}\nfunction SignInFirstFactorInner(props) {\n  const ref = useSignInFirstFactorStep();\n  if (!ref) {\n    return null;\n  }\n  return ref ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInFirstFactorCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    SignInStrategiesProvider,\n    {\n      actorRef: ref,\n      ...props\n    }\n  ) }) : null;\n}\nfunction SignInSecondFactorInner(props) {\n  const ref = useSignInSecondFactorStep();\n  if (!ref) {\n    return null;\n  }\n  return ref ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInSecondFactorCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    SignInStrategiesProvider,\n    {\n      actorRef: ref,\n      ...props\n    }\n  ) }) : null;\n}\n\n// src/react/sign-in/step.tsx\n\nvar SIGN_IN_STEPS = {\n  start: \"start\",\n  verifications: \"verifications\",\n  \"choose-strategy\": \"choose-strategy\",\n  \"choose-session\": \"choose-session\",\n  \"forgot-password\": \"forgot-password\",\n  \"reset-password\": \"reset-password\"\n};\nfunction SignInStep(props) {\n  var _a;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_8__.useClerk)();\n  (_a = clerk.telemetry) == null ? void 0 : _a.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_13__.eventComponentMounted)(\"Elements_SignInStep\", { name: props.name }));\n  switch (props.name) {\n    case SIGN_IN_STEPS.start:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStart, { ...props });\n    case SIGN_IN_STEPS.verifications:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInVerifications, { ...props });\n    case SIGN_IN_STEPS[\"choose-strategy\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseStrategy, { ...props });\n    case SIGN_IN_STEPS[\"forgot-password\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInForgotPassword, { ...props });\n    case SIGN_IN_STEPS[\"reset-password\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInResetPassword, { ...props });\n    case SIGN_IN_STEPS[\"choose-session\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseSession, { ...props });\n    default:\n      throw new ClerkElementsRuntimeError(`Invalid step name. Use: ${Object.keys(SIGN_IN_STEPS).join(\",\")}.`);\n  }\n}\n\n// src/react/sign-up/step.tsx\n\n\n\n// src/react/sign-up/continue.tsx\n\nvar SignUpContinueCtx = createContextFromActorRef(\"SignUpContinueCtx\");\nfunction SignUpContinue(props) {\n  const routerRef = SignUpRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:continue\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpContinueInner, { ...props }) : null;\n}\nfunction SignUpContinueInner(props) {\n  const ref = useSignUpContinueStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpContinueCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-up/restricted.tsx\n\nfunction SignUpRestricted(props) {\n  const routerRef = SignUpRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:restricted\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: routerRef,\n      ...props\n    }\n  ) : null;\n}\n\n// src/react/sign-up/start.tsx\n\nvar SignUpStartCtx = createContextFromActorRef(\"SignUpStartCtx\");\nfunction SignUpStart(props) {\n  const routerRef = SignUpRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:start\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpStartInner, { ...props }) : null;\n}\nfunction SignUpStartInner(props) {\n  const ref = useSignUpStartStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpStartCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-up/verifications.tsx\n\nvar SignUpVerificationCtx = createContextFromActorRef(\"SignUpVerificationCtx\");\nfunction SignUpVerifications(props) {\n  const ref = SignUpRouterCtx.useActorRef();\n  const activeState = useActiveTags(ref, \"step:verification\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpVerifyInner, { ...props }) : null;\n}\nfunction SignUpVerifyInner(props) {\n  const ref = useSignUpVerificationStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpVerificationCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\nfunction SignUpStrategy({ children, name: tag }) {\n  const ref = SignUpVerificationCtx.useActorRef(true);\n  if (!ref) {\n    throw new Error(\n      '<Strategy> used outside of <SignUp>. Did you mean to `import { Strategy } from \"@clerk/elements/sign-in\"` instead?'\n    );\n  }\n  const { active } = useActiveTags(ref, [\n    `verification:${tag}`,\n    `verification:category:${tag}`\n  ]);\n  return active ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment, { children }) : null;\n}\n\n// src/react/sign-up/step.tsx\n\nvar SIGN_UP_STEPS = {\n  start: \"start\",\n  continue: \"continue\",\n  verifications: \"verifications\",\n  restricted: \"restricted\"\n};\nfunction SignUpStep(props) {\n  var _a;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_8__.useClerk)();\n  (_a = clerk.telemetry) == null ? void 0 : _a.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_13__.eventComponentMounted)(\"Elements_SignUpStep\", { name: props.name }));\n  switch (props.name) {\n    case SIGN_UP_STEPS.start:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpStart, { ...props });\n    case SIGN_UP_STEPS.continue:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpContinue, { ...props });\n    case SIGN_UP_STEPS.verifications:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpVerifications, { ...props });\n    case SIGN_UP_STEPS.restricted:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpRestricted, { ...props });\n    default:\n      throw new ClerkElementsRuntimeError(\n        `Invalid step name. Use 'start', 'continue', 'verifications', or 'restricted'.`\n      );\n  }\n}\n\n// src/react/utils/map-scope-to-strategy.ts\nfunction isProviderStrategyScope(value) {\n  return value.startsWith(\"provider:\");\n}\nfunction mapScopeToStrategy(scope) {\n  if (scope === \"provider:metamask\") {\n    return \"web3_metamask_signature\";\n  }\n  if (scope === \"provider:coinbase_wallet\") {\n    return \"web3_coinbase_wallet_signature\";\n  }\n  if (scope === \"provider:saml\") {\n    return \"saml\";\n  }\n  const scopeWithoutPrefix = scope.replace(\"provider:\", \"\");\n  return `oauth_${scopeWithoutPrefix}`;\n}\n\n// src/react/common/loading.tsx\n\nfunction isSignInScope(scope) {\n  if (!scope) {\n    return true;\n  }\n  if (scope.startsWith(\"step:\")) {\n    return Object.prototype.hasOwnProperty.call(SIGN_IN_STEPS, scope.replace(\"step:\", \"\"));\n  }\n  return true;\n}\nfunction isSignUpScope(scope) {\n  if (!scope) {\n    return true;\n  }\n  if (scope.startsWith(\"step:\")) {\n    return Object.prototype.hasOwnProperty.call(SIGN_UP_STEPS, scope.replace(\"step:\", \"\"));\n  }\n  return true;\n}\nfunction Loading({ children, scope }) {\n  var _a;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_8__.useClerk)();\n  (_a = clerk.telemetry) == null ? void 0 : _a.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_13__.eventComponentMounted)(\"Elements_Loading\", { scope: scope != null ? scope : false }));\n  const signInRouterRef = SignInRouterCtx.useActorRef(true);\n  const signUpRouterRef = SignUpRouterCtx.useActorRef(true);\n  if (!signInRouterRef && !signUpRouterRef) {\n    throw new ClerkElementsRuntimeError(`<Loading> must be used within a <SignIn> or <SignUp> component.`);\n  }\n  if (signInRouterRef) {\n    if (isSignInScope(scope)) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n        SignInLoading,\n        {\n          scope,\n          routerRef: signInRouterRef,\n          children\n        }\n      );\n    } else {\n      throw new ClerkElementsRuntimeError(`Invalid scope \"${scope}\" used for <Loading> inside <SignIn>.`);\n    }\n  }\n  if (signUpRouterRef) {\n    if (isSignUpScope(scope)) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n        SignUpLoading,\n        {\n          scope,\n          routerRef: signUpRouterRef,\n          children\n        }\n      );\n    } else {\n      throw new ClerkElementsRuntimeError(`Invalid scope \"${scope}\" used for <Loading> inside <SignUp>.`);\n    }\n  }\n  throw new ClerkElementsRuntimeError(\"Invalid state for <Loading>. Please open an issue.\");\n}\nfunction SignInLoading({ children, scope, routerRef }) {\n  const [isLoading, { step: loadingStep, strategy, action }] = useLoading(routerRef);\n  const tags = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(routerRef, (s) => s.tags);\n  const isStepLoading = (step) => isLoading && loadingStep === step;\n  const isInferredStepLoading = (step) => tags.has(`step:${step}`) && isStepLoading(step);\n  let loadingResult = false;\n  if (scope === \"global\") {\n    loadingResult = isLoading;\n  } else if (scope && isProviderStrategyScope(scope)) {\n    loadingResult = isLoading && loadingStep === void 0 && strategy === mapScopeToStrategy(scope);\n  } else if (scope) {\n    loadingResult = isStepLoading(scope.replace(\"step:\", \"\")) || scope === action;\n  } else {\n    loadingResult = isInferredStepLoading(\"start\") || isInferredStepLoading(\"verifications\") || isInferredStepLoading(\"choose-strategy\") || isInferredStepLoading(\"forgot-password\") || isInferredStepLoading(\"reset-password\");\n  }\n  return children(loadingResult);\n}\nfunction SignUpLoading({ children, scope, routerRef }) {\n  const [isLoading, { step: loadingStep, strategy, action }] = useLoading(routerRef);\n  const tags = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(routerRef, (s) => s.tags);\n  const isStepLoading = (step) => isLoading && loadingStep === step;\n  const isInferredStepLoading = (step) => tags.has(`step:${step}`) && isStepLoading(step);\n  let loadingResult = false;\n  if (scope === \"global\") {\n    loadingResult = isLoading;\n  } else if (scope && isProviderStrategyScope(scope)) {\n    loadingResult = isLoading && loadingStep === void 0 && strategy === mapScopeToStrategy(scope);\n  } else if (scope) {\n    loadingResult = isStepLoading(scope.replace(\"step:\", \"\")) || scope === action;\n  } else {\n    loadingResult = isInferredStepLoading(\"start\") || isInferredStepLoading(\"continue\") || isInferredStepLoading(\"verifications\");\n  }\n  return children(loadingResult);\n}\n\n\n//# sourceMappingURL=chunk-35XMYW3R.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-35XMYW3R.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-D6Z4L5VX.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@clerk/elements/dist/chunk-D6Z4L5VX.mjs ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Router: function() { return /* reexport safe */ _clerk_shared_router__WEBPACK_IMPORTED_MODULE_2__.Router; },\n/* harmony export */   useClerkRouter: function() { return /* reexport safe */ _clerk_shared_router__WEBPACK_IMPORTED_MODULE_2__.useClerkRouter; },\n/* harmony export */   usePathnameWithoutCatchAll: function() { return /* binding */ usePathnameWithoutCatchAll; },\n/* harmony export */   useVirtualRouter: function() { return /* binding */ useVirtualRouter; }\n/* harmony export */ });\n/* harmony import */ var _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-35XMYW3R.mjs */ \"(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-35XMYW3R.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _clerk_shared_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/router */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/router.mjs\");\n/* harmony import */ var next_compat_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/compat/router */ \"(app-pages-browser)/./node_modules/next/compat/router.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n\n\n// src/react/router/virtual.ts\n\nvar DUMMY_ORIGIN = \"https://clerk.dummy\";\nvar _url, _listeners;\nvar VirtualRouter = class {\n  constructor(path) {\n    this.name = \"VirtualRouter\";\n    this.mode = \"virtual\";\n    (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _url);\n    (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _listeners, /* @__PURE__ */ new Set());\n    const origin = typeof window === \"undefined\" ? DUMMY_ORIGIN : window.location.origin;\n    (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _url, new URL(path != null ? path : \"/\", origin));\n  }\n  push(path) {\n    const newUrl = new URL((0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url).toString());\n    newUrl.pathname = path;\n    (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _url, newUrl);\n    this.emit();\n  }\n  replace(path) {\n    this.push(path);\n  }\n  shallowPush(path) {\n    this.push(path);\n  }\n  pathname() {\n    return (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url).pathname;\n  }\n  searchParams() {\n    return (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url).searchParams;\n  }\n  subscribe(listener) {\n    (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _listeners).add(listener);\n    return () => (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _listeners).delete(listener);\n  }\n  emit() {\n    (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _listeners).forEach((listener) => listener((0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url)));\n  }\n  getSnapshot() {\n    return (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url);\n  }\n};\n_url = new WeakMap();\n_listeners = new WeakMap();\nvar virtualRouter = new VirtualRouter(\"/\");\nvar useVirtualRouter = () => {\n  const url = (0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(\n    virtualRouter.subscribe.bind(virtualRouter),\n    virtualRouter.getSnapshot.bind(virtualRouter)\n  );\n  return {\n    mode: virtualRouter.mode,\n    name: virtualRouter.name,\n    pathname: () => url.pathname,\n    push: virtualRouter.push.bind(virtualRouter),\n    replace: virtualRouter.replace.bind(virtualRouter),\n    searchParams: () => url.searchParams,\n    shallowPush: virtualRouter.shallowPush.bind(virtualRouter)\n  };\n};\n\n// src/react/router/index.ts\n\n\n// src/react/utils/path-inference/next.tsx\n\n\n\n\n// src/react/utils/path-inference/utils.ts\nfunction removeOptionalCatchAllSegment(pathname) {\n  return pathname.replace(/\\/\\[\\[\\.\\.\\..*/, \"\");\n}\n\n// src/react/utils/path-inference/next.tsx\nvar usePathnameWithoutCatchAll = () => {\n  const pathRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  const pagesRouter = (0,next_compat_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n  if (pagesRouter) {\n    if (pathRef.current) {\n      return pathRef.current;\n    } else {\n      pathRef.current = removeOptionalCatchAllSegment(pagesRouter.pathname);\n      return pathRef.current;\n    }\n  }\n  const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_4__.usePathname)() || \"\";\n  const pathParts = pathname.split(\"/\").filter(Boolean);\n  const catchAllParams = Object.values((0,next_navigation__WEBPACK_IMPORTED_MODULE_4__.useParams)() || {}).filter((v) => Array.isArray(v)).flat(Infinity);\n  if (pathRef.current) {\n    return pathRef.current;\n  } else {\n    pathRef.current = `/${pathParts.slice(0, pathParts.length - catchAllParams.length).join(\"/\")}`;\n    return pathRef.current;\n  }\n};\n\n\n//# sourceMappingURL=chunk-D6Z4L5VX.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvZWxlbWVudHMvZGlzdC9jaHVuay1ENlo0TDVWWC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBSThCOztBQUU5QjtBQUM2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGlFQUFZO0FBQ2hCLElBQUksaUVBQVk7QUFDaEI7QUFDQSxJQUFJLGlFQUFZO0FBQ2hCO0FBQ0E7QUFDQSwyQkFBMkIsaUVBQVk7QUFDdkM7QUFDQSxJQUFJLGlFQUFZO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUVBQVk7QUFDdkI7QUFDQTtBQUNBLFdBQVcsaUVBQVk7QUFDdkI7QUFDQTtBQUNBLElBQUksaUVBQVk7QUFDaEIsaUJBQWlCLGlFQUFZO0FBQzdCO0FBQ0E7QUFDQSxJQUFJLGlFQUFZLGtEQUFrRCxpRUFBWTtBQUM5RTtBQUNBO0FBQ0EsV0FBVyxpRUFBWTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFvQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNxRTs7QUFFckU7QUFDK0M7QUFDVTtBQUMvQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQix5Q0FBWTtBQUM5QixzQkFBc0IsNkRBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDREQUFXO0FBQzlCO0FBQ0EsdUNBQXVDLDBEQUFTLFFBQVE7QUFDeEQ7QUFDQTtBQUNBLElBQUk7QUFDSiwwQkFBMEIsdUVBQXVFO0FBQ2pHO0FBQ0E7QUFDQTs7QUFPRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvZWxlbWVudHMvZGlzdC9jaHVuay1ENlo0TDVWWC5tanM/NjBjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBfX3ByaXZhdGVBZGQsXG4gIF9fcHJpdmF0ZUdldCxcbiAgX19wcml2YXRlU2V0XG59IGZyb20gXCIuL2NodW5rLTM1WE1ZVzNSLm1qc1wiO1xuXG4vLyBzcmMvcmVhY3Qvcm91dGVyL3ZpcnR1YWwudHNcbmltcG9ydCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlIH0gZnJvbSBcInJlYWN0XCI7XG52YXIgRFVNTVlfT1JJR0lOID0gXCJodHRwczovL2NsZXJrLmR1bW15XCI7XG52YXIgX3VybCwgX2xpc3RlbmVycztcbnZhciBWaXJ0dWFsUm91dGVyID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcihwYXRoKSB7XG4gICAgdGhpcy5uYW1lID0gXCJWaXJ0dWFsUm91dGVyXCI7XG4gICAgdGhpcy5tb2RlID0gXCJ2aXJ0dWFsXCI7XG4gICAgX19wcml2YXRlQWRkKHRoaXMsIF91cmwpO1xuICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfbGlzdGVuZXJzLCAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpKTtcbiAgICBjb25zdCBvcmlnaW4gPSB0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiID8gRFVNTVlfT1JJR0lOIDogd2luZG93LmxvY2F0aW9uLm9yaWdpbjtcbiAgICBfX3ByaXZhdGVTZXQodGhpcywgX3VybCwgbmV3IFVSTChwYXRoICE9IG51bGwgPyBwYXRoIDogXCIvXCIsIG9yaWdpbikpO1xuICB9XG4gIHB1c2gocGF0aCkge1xuICAgIGNvbnN0IG5ld1VybCA9IG5ldyBVUkwoX19wcml2YXRlR2V0KHRoaXMsIF91cmwpLnRvU3RyaW5nKCkpO1xuICAgIG5ld1VybC5wYXRobmFtZSA9IHBhdGg7XG4gICAgX19wcml2YXRlU2V0KHRoaXMsIF91cmwsIG5ld1VybCk7XG4gICAgdGhpcy5lbWl0KCk7XG4gIH1cbiAgcmVwbGFjZShwYXRoKSB7XG4gICAgdGhpcy5wdXNoKHBhdGgpO1xuICB9XG4gIHNoYWxsb3dQdXNoKHBhdGgpIHtcbiAgICB0aGlzLnB1c2gocGF0aCk7XG4gIH1cbiAgcGF0aG5hbWUoKSB7XG4gICAgcmV0dXJuIF9fcHJpdmF0ZUdldCh0aGlzLCBfdXJsKS5wYXRobmFtZTtcbiAgfVxuICBzZWFyY2hQYXJhbXMoKSB7XG4gICAgcmV0dXJuIF9fcHJpdmF0ZUdldCh0aGlzLCBfdXJsKS5zZWFyY2hQYXJhbXM7XG4gIH1cbiAgc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgX19wcml2YXRlR2V0KHRoaXMsIF9saXN0ZW5lcnMpLmFkZChsaXN0ZW5lcik7XG4gICAgcmV0dXJuICgpID0+IF9fcHJpdmF0ZUdldCh0aGlzLCBfbGlzdGVuZXJzKS5kZWxldGUobGlzdGVuZXIpO1xuICB9XG4gIGVtaXQoKSB7XG4gICAgX19wcml2YXRlR2V0KHRoaXMsIF9saXN0ZW5lcnMpLmZvckVhY2goKGxpc3RlbmVyKSA9PiBsaXN0ZW5lcihfX3ByaXZhdGVHZXQodGhpcywgX3VybCkpKTtcbiAgfVxuICBnZXRTbmFwc2hvdCgpIHtcbiAgICByZXR1cm4gX19wcml2YXRlR2V0KHRoaXMsIF91cmwpO1xuICB9XG59O1xuX3VybCA9IG5ldyBXZWFrTWFwKCk7XG5fbGlzdGVuZXJzID0gbmV3IFdlYWtNYXAoKTtcbnZhciB2aXJ0dWFsUm91dGVyID0gbmV3IFZpcnR1YWxSb3V0ZXIoXCIvXCIpO1xudmFyIHVzZVZpcnR1YWxSb3V0ZXIgPSAoKSA9PiB7XG4gIGNvbnN0IHVybCA9IHVzZVN5bmNFeHRlcm5hbFN0b3JlKFxuICAgIHZpcnR1YWxSb3V0ZXIuc3Vic2NyaWJlLmJpbmQodmlydHVhbFJvdXRlciksXG4gICAgdmlydHVhbFJvdXRlci5nZXRTbmFwc2hvdC5iaW5kKHZpcnR1YWxSb3V0ZXIpXG4gICk7XG4gIHJldHVybiB7XG4gICAgbW9kZTogdmlydHVhbFJvdXRlci5tb2RlLFxuICAgIG5hbWU6IHZpcnR1YWxSb3V0ZXIubmFtZSxcbiAgICBwYXRobmFtZTogKCkgPT4gdXJsLnBhdGhuYW1lLFxuICAgIHB1c2g6IHZpcnR1YWxSb3V0ZXIucHVzaC5iaW5kKHZpcnR1YWxSb3V0ZXIpLFxuICAgIHJlcGxhY2U6IHZpcnR1YWxSb3V0ZXIucmVwbGFjZS5iaW5kKHZpcnR1YWxSb3V0ZXIpLFxuICAgIHNlYXJjaFBhcmFtczogKCkgPT4gdXJsLnNlYXJjaFBhcmFtcyxcbiAgICBzaGFsbG93UHVzaDogdmlydHVhbFJvdXRlci5zaGFsbG93UHVzaC5iaW5kKHZpcnR1YWxSb3V0ZXIpXG4gIH07XG59O1xuXG4vLyBzcmMvcmVhY3Qvcm91dGVyL2luZGV4LnRzXG5pbXBvcnQgeyBSb3V0ZSwgUm91dGVyLCB1c2VDbGVya1JvdXRlciB9IGZyb20gXCJAY2xlcmsvc2hhcmVkL3JvdXRlclwiO1xuXG4vLyBzcmMvcmVhY3QvdXRpbHMvcGF0aC1pbmZlcmVuY2UvbmV4dC50c3hcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L2NvbXBhdC9yb3V0ZXJcIjtcbmltcG9ydCB7IHVzZVBhcmFtcywgdXNlUGF0aG5hbWUgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbi8vIHNyYy9yZWFjdC91dGlscy9wYXRoLWluZmVyZW5jZS91dGlscy50c1xuZnVuY3Rpb24gcmVtb3ZlT3B0aW9uYWxDYXRjaEFsbFNlZ21lbnQocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLnJlcGxhY2UoL1xcL1xcW1xcW1xcLlxcLlxcLi4qLywgXCJcIik7XG59XG5cbi8vIHNyYy9yZWFjdC91dGlscy9wYXRoLWluZmVyZW5jZS9uZXh0LnRzeFxudmFyIHVzZVBhdGhuYW1lV2l0aG91dENhdGNoQWxsID0gKCkgPT4ge1xuICBjb25zdCBwYXRoUmVmID0gUmVhY3QudXNlUmVmKCk7XG4gIGNvbnN0IHBhZ2VzUm91dGVyID0gdXNlUm91dGVyKCk7XG4gIGlmIChwYWdlc1JvdXRlcikge1xuICAgIGlmIChwYXRoUmVmLmN1cnJlbnQpIHtcbiAgICAgIHJldHVybiBwYXRoUmVmLmN1cnJlbnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhdGhSZWYuY3VycmVudCA9IHJlbW92ZU9wdGlvbmFsQ2F0Y2hBbGxTZWdtZW50KHBhZ2VzUm91dGVyLnBhdGhuYW1lKTtcbiAgICAgIHJldHVybiBwYXRoUmVmLmN1cnJlbnQ7XG4gICAgfVxuICB9XG4gIGNvbnN0IHBhdGhuYW1lID0gdXNlUGF0aG5hbWUoKSB8fCBcIlwiO1xuICBjb25zdCBwYXRoUGFydHMgPSBwYXRobmFtZS5zcGxpdChcIi9cIikuZmlsdGVyKEJvb2xlYW4pO1xuICBjb25zdCBjYXRjaEFsbFBhcmFtcyA9IE9iamVjdC52YWx1ZXModXNlUGFyYW1zKCkgfHwge30pLmZpbHRlcigodikgPT4gQXJyYXkuaXNBcnJheSh2KSkuZmxhdChJbmZpbml0eSk7XG4gIGlmIChwYXRoUmVmLmN1cnJlbnQpIHtcbiAgICByZXR1cm4gcGF0aFJlZi5jdXJyZW50O1xuICB9IGVsc2Uge1xuICAgIHBhdGhSZWYuY3VycmVudCA9IGAvJHtwYXRoUGFydHMuc2xpY2UoMCwgcGF0aFBhcnRzLmxlbmd0aCAtIGNhdGNoQWxsUGFyYW1zLmxlbmd0aCkuam9pbihcIi9cIil9YDtcbiAgICByZXR1cm4gcGF0aFJlZi5jdXJyZW50O1xuICB9XG59O1xuXG5leHBvcnQge1xuICB1c2VWaXJ0dWFsUm91dGVyLFxuICBSb3V0ZXIsXG4gIHVzZUNsZXJrUm91dGVyLFxuICB1c2VQYXRobmFtZVdpdGhvdXRDYXRjaEFsbFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUQ2WjRMNVZYLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-D6Z4L5VX.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/elements/dist/react/sign-in/index.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@clerk/elements/dist/react/sign-in/index.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Action: function() { return /* binding */ SignInAction; },\n/* harmony export */   FirstFactor: function() { return /* reexport safe */ _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInFirstFactor; },\n/* harmony export */   Passkey: function() { return /* binding */ SignInPasskey; },\n/* harmony export */   Root: function() { return /* binding */ SignInRoot; },\n/* harmony export */   SafeIdentifier: function() { return /* binding */ SignInSafeIdentifier; },\n/* harmony export */   Salutation: function() { return /* binding */ SignInSalutation; },\n/* harmony export */   SecondFactor: function() { return /* reexport safe */ _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInSecondFactor; },\n/* harmony export */   SessionList: function() { return /* reexport safe */ _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInSessionList; },\n/* harmony export */   SessionListItem: function() { return /* reexport safe */ _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInSessionListItem; },\n/* harmony export */   SignIn: function() { return /* binding */ SignInRoot; },\n/* harmony export */   Step: function() { return /* reexport safe */ _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInStep; },\n/* harmony export */   Strategy: function() { return /* reexport safe */ _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInStrategy; },\n/* harmony export */   SupportedStrategy: function() { return /* reexport safe */ _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInSupportedStrategy; }\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/router */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/router.mjs\");\n/* harmony import */ var _chunk_D6Z4L5VX_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../chunk-D6Z4L5VX.mjs */ \"(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-D6Z4L5VX.mjs\");\n/* harmony import */ var _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../chunk-35XMYW3R.mjs */ \"(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-35XMYW3R.mjs\");\n/* harmony import */ var client_only__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! client-only */ \"(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\n/* harmony import */ var _clerk_shared_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/react */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/react/index.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/telemetry.mjs\");\n/* harmony import */ var _xstate_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @xstate/react */ \"(app-pages-browser)/./node_modules/@xstate/react/dist/xstate-react.development.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-5ea71f04.development.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n\n\n\n// src/react/sign-in/index.ts\n\n\n// src/react/sign-in/root.tsx\n\n\n\n\n\n\n\nvar actor = (0,xstate__WEBPACK_IMPORTED_MODULE_6__.A)(_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInRouterMachine, { inspect: _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.inspect });\nactor.start();\nfunction SignInFlowProvider({ children, exampleMode, fallback, isRootPath }) {\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_1__.useClerk)();\n  const router = (0,_clerk_shared_router__WEBPACK_IMPORTED_MODULE_2__.useClerkRouter)();\n  const formRef = (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.useFormStore)();\n  const isReady = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_8__.useSelector)(actor, (state) => state.value !== \"Idle\");\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    if (!clerk || !router) {\n      return;\n    }\n    const cb = () => {\n      const evt = {\n        type: \"INIT\",\n        clerk,\n        exampleMode,\n        formRef,\n        router,\n        signUpPath: _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SIGN_UP_DEFAULT_BASE_PATH\n      };\n      if (actor.getSnapshot().can(evt)) {\n        actor.send(evt);\n      }\n    };\n    if (\"addOnLoaded\" in clerk) {\n      clerk.addOnLoaded(cb);\n    } else {\n      cb();\n    }\n    if (formRef && actor.getSnapshot().can({ type: \"RESET.STEP\" })) {\n      actor.send({\n        type: \"FORM.ATTACH\",\n        formRef\n      });\n    }\n  }, [clerk, exampleMode, formRef == null ? void 0 : formRef.id, !!router, clerk.loaded]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInRouterCtx.Provider, { actorRef: actor, children: [\n    isRootPath && !isReady && fallback ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.Form, { children: fallback }) : null,\n    clerk.loaded && isReady ? children : null\n  ] });\n}\nfunction SignInRoot({\n  children,\n  exampleMode = false,\n  fallback = null,\n  path: pathProp,\n  routing = _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.ROUTING.path\n}) {\n  var _a;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_1__.useClerk)();\n  const inferredPath = (0,_chunk_D6Z4L5VX_mjs__WEBPACK_IMPORTED_MODULE_9__.usePathnameWithoutCatchAll)();\n  const path = pathProp || inferredPath || _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SIGN_IN_DEFAULT_BASE_PATH;\n  (_a = clerk.telemetry) == null ? void 0 : _a.record(\n    (0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_3__.eventComponentMounted)(\"Elements_SignInRoot\", {\n      exampleMode,\n      fallback: Boolean(fallback),\n      path,\n      routing\n    })\n  );\n  const router = (routing === _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.ROUTING.virtual ? _chunk_D6Z4L5VX_mjs__WEBPACK_IMPORTED_MODULE_9__.useVirtualRouter : _clerk_shared_router__WEBPACK_IMPORTED_MODULE_2__.useClerkHostRouter)();\n  const isRootPath = path === router.pathname();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\n    _clerk_shared_router__WEBPACK_IMPORTED_MODULE_2__.Router,\n    {\n      basePath: path,\n      router,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.FormStoreProvider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\n        SignInFlowProvider,\n        {\n          exampleMode,\n          fallback,\n          isRootPath,\n          children\n        }\n      ) })\n    }\n  );\n}\n\n// src/react/sign-in/action/action.tsx\n\n\n// src/react/sign-in/action/navigate.tsx\n\n\n\nvar SIGN_IN_NAVIGATE_NAME = \"SignInNavigate\";\nvar SignInNavigationEventMap = {\n  start: \"NAVIGATE.START\",\n  previous: \"NAVIGATE.PREVIOUS\",\n  \"choose-strategy\": \"NAVIGATE.CHOOSE_STRATEGY\",\n  \"forgot-password\": \"NAVIGATE.FORGOT_PASSWORD\"\n};\nvar SignInNavigate = react__WEBPACK_IMPORTED_MODULE_4__.forwardRef(\n  ({ asChild, to, ...rest }, forwardedRef) => {\n    const actorRef = _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInRouterCtx.useActorRef();\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    const sendEvent = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(() => {\n      const type = SignInNavigationEventMap[to];\n      if (actorRef.getSnapshot().can({ type })) {\n        actorRef.send({ type });\n      } else {\n        console.warn(\n          `Clerk: <SignIn.Action navigate=\"${to}\"> is an invalid navigation event. You can only navigate to: ${Object.keys(SignInNavigationEventMap).join(\", \")}.`\n        );\n      }\n    }, [actorRef, to]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        onClick: sendEvent,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSignInNavigate.displayName = SIGN_IN_NAVIGATE_NAME;\n\n// src/react/sign-in/action/resend.tsx\n\n\n\n\nvar SIGN_IN_RESEND_NAME = \"SignInResend\";\nvar SignInResend = react__WEBPACK_IMPORTED_MODULE_4__.forwardRef(\n  ({ asChild, fallback, ...rest }, forwardedRef) => {\n    const firstFactorRef = _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInFirstFactorCtx.useActorRef(true);\n    const secondFactorRef = _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInSecondFactorCtx.useActorRef(true);\n    const actorRef = firstFactorRef || secondFactorRef;\n    if (!actorRef) {\n      throw new Error('The resend action must be used within <SignIn.Step name=\"verifications\">.');\n    }\n    const fallbackProps = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_8__.useSelector)(\n      actorRef,\n      (state) => ({\n        resendable: state.context.resendable,\n        resendableAfter: state.context.resendableAfter\n      }),\n      (a, b) => a.resendableAfter === b.resendableAfter && a.resendable === b.resendable\n    );\n    if (fallback && !fallbackProps.resendable) {\n      return typeof fallback === \"function\" ? fallback(fallbackProps) : fallback;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        disabled: !fallbackProps.resendable,\n        onClick: () => actorRef.send({ type: \"RETRY\" }),\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSignInResend.displayName = SIGN_IN_RESEND_NAME;\n\n// src/react/sign-in/action/set-active-session.tsx\n\n\n\nvar DISPLAY_NAME = \"SignInSetActiveSession\";\nvar SignInSetActiveSession = react__WEBPACK_IMPORTED_MODULE_4__.forwardRef(\n  ({ asChild, ...rest }, forwardedRef) => {\n    const actorRef = _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInRouterCtx.useActorRef();\n    const session = (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.useSignInActiveSessionContext)();\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    const sendEvent = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(() => {\n      const event = { type: \"SESSION.SET_ACTIVE\", id: session.id };\n      if (actorRef.getSnapshot().can(event)) {\n        actorRef.send(event);\n      } else {\n        console.warn(\n          `Clerk: <SignIn.Action setActiveSession> is an invalid event. You can only choose an active session from <SignIn.Step name=\"choose-session\">.`\n        );\n      }\n    }, [actorRef, session.id]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        onClick: sendEvent,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSignInSetActiveSession.displayName = DISPLAY_NAME;\n\n// src/react/sign-in/action/action.tsx\n\nvar DISPLAY_NAME2 = \"SignInAction\";\nvar SignInAction = react__WEBPACK_IMPORTED_MODULE_4__.forwardRef((props, forwardedRef) => {\n  const { submit, navigate, resend, setActiveSession, ...rest } = props;\n  let Comp;\n  if (submit) {\n    Comp = _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.Submit;\n  } else if (navigate) {\n    Comp = SignInNavigate;\n  } else if (resend) {\n    Comp = SignInResend;\n  } else if (setActiveSession) {\n    Comp = SignInSetActiveSession;\n  }\n  return Comp ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\n    Comp,\n    {\n      to: navigate,\n      ...rest,\n      ref: forwardedRef\n    }\n  ) : null;\n});\nSignInAction.displayName = DISPLAY_NAME2;\n\n// src/react/sign-in/passkey.tsx\n\n\n\nvar SIGN_IN_PASSKEY_NAME = \"SignInPasskey\";\nvar SignInPasskey = react__WEBPACK_IMPORTED_MODULE_4__.forwardRef(\n  ({ asChild, ...rest }, forwardedRef) => {\n    const actorRef = _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInRouterCtx.useActorRef(true);\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    const sendEvent = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(() => {\n      actorRef == null ? void 0 : actorRef.send({ type: \"AUTHENTICATE.PASSKEY\" });\n    }, [actorRef]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        onClick: sendEvent,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSignInPasskey.displayName = SIGN_IN_PASSKEY_NAME;\n\n// src/react/sign-in/identifiers.tsx\n\nfunction SignInSafeIdentifier({ transform }) {\n  const strategy = (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.useSignInStrategy)();\n  const selector = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(() => (0,_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInSafeIdentifierSelectorForStrategy)(strategy), [strategy]);\n  const safeIdentifier = _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInRouterCtx.useSelector(selector);\n  if (transform) {\n    return transform(safeIdentifier);\n  }\n  return safeIdentifier;\n}\nfunction SignInSalutation() {\n  return _chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInRouterCtx.useSelector(_chunk_35XMYW3R_mjs__WEBPACK_IMPORTED_MODULE_7__.SignInSalutationSelector);\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/elements/dist/react/sign-in/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/authorization.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/authorization.mjs ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCheckAuthorization: function() { return /* binding */ createCheckAuthorization; }\n/* harmony export */ });\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n// src/authorization.ts\nvar TYPES_TO_OBJECTS = {\n  veryStrict: {\n    afterMinutes: 10,\n    level: \"multiFactor\"\n  },\n  strict: {\n    afterMinutes: 10,\n    level: \"secondFactor\"\n  },\n  moderate: {\n    afterMinutes: 60,\n    level: \"secondFactor\"\n  },\n  lax: {\n    afterMinutes: 1440,\n    level: \"secondFactor\"\n  }\n};\nvar ALLOWED_LEVELS = /* @__PURE__ */ new Set([\"firstFactor\", \"secondFactor\", \"multiFactor\"]);\nvar ALLOWED_TYPES = /* @__PURE__ */ new Set([\"veryStrict\", \"strict\", \"moderate\", \"lax\"]);\nvar isValidMaxAge = (maxAge) => typeof maxAge === \"number\" && maxAge > 0;\nvar isValidLevel = (level) => ALLOWED_LEVELS.has(level);\nvar isValidVerificationType = (type) => ALLOWED_TYPES.has(type);\nvar checkOrgAuthorization = (params, options) => {\n  const { orgId, orgRole, orgPermissions } = options;\n  if (!params.role && !params.permission) {\n    return null;\n  }\n  if (!orgId || !orgRole || !orgPermissions) {\n    return null;\n  }\n  if (params.permission) {\n    return orgPermissions.includes(params.permission);\n  }\n  if (params.role) {\n    return orgRole === params.role;\n  }\n  return null;\n};\nvar validateReverificationConfig = (config) => {\n  const convertConfigToObject = (config2) => {\n    if (typeof config2 === \"string\") {\n      return TYPES_TO_OBJECTS[config2];\n    }\n    return config2;\n  };\n  if (typeof config === \"string\" && isValidVerificationType(config)) {\n    return convertConfigToObject.bind(null, config);\n  }\n  if (typeof config === \"object\" && isValidLevel(config.level) && isValidMaxAge(config.afterMinutes)) {\n    return convertConfigToObject.bind(null, config);\n  }\n  return false;\n};\nvar checkStepUpAuthorization = (params, { __experimental_factorVerificationAge }) => {\n  if (!params.__experimental_reverification || !__experimental_factorVerificationAge) {\n    return null;\n  }\n  const isValidReverification = validateReverificationConfig(params.__experimental_reverification);\n  if (!isValidReverification) {\n    return null;\n  }\n  const { level, afterMinutes } = isValidReverification();\n  const [factor1Age, factor2Age] = __experimental_factorVerificationAge;\n  const isValidFactor1 = factor1Age !== -1 ? afterMinutes > factor1Age : null;\n  const isValidFactor2 = factor2Age !== -1 ? afterMinutes > factor2Age : null;\n  switch (level) {\n    case \"firstFactor\":\n      return isValidFactor1;\n    case \"secondFactor\":\n      return factor2Age !== -1 ? isValidFactor2 : isValidFactor1;\n    case \"multiFactor\":\n      return factor2Age === -1 ? isValidFactor1 : isValidFactor1 && isValidFactor2;\n  }\n};\nvar createCheckAuthorization = (options) => {\n  return (params) => {\n    if (!options.userId) {\n      return false;\n    }\n    const orgAuthorization = checkOrgAuthorization(params, options);\n    const stepUpAuthorization = checkStepUpAuthorization(params, options);\n    if ([orgAuthorization, stepUpAuthorization].some((a) => a === null)) {\n      return [orgAuthorization, stepUpAuthorization].some((a) => a === true);\n    }\n    return [orgAuthorization, stepUpAuthorization].every((a) => a === true);\n  };\n};\n\n//# sourceMappingURL=authorization.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvYXV0aG9yaXphdGlvbi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBOEI7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxpQ0FBaUM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxzQ0FBc0M7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLHNCQUFzQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9hdXRob3JpemF0aW9uLm1qcz80YmY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5cbi8vIHNyYy9hdXRob3JpemF0aW9uLnRzXG52YXIgVFlQRVNfVE9fT0JKRUNUUyA9IHtcbiAgdmVyeVN0cmljdDoge1xuICAgIGFmdGVyTWludXRlczogMTAsXG4gICAgbGV2ZWw6IFwibXVsdGlGYWN0b3JcIlxuICB9LFxuICBzdHJpY3Q6IHtcbiAgICBhZnRlck1pbnV0ZXM6IDEwLFxuICAgIGxldmVsOiBcInNlY29uZEZhY3RvclwiXG4gIH0sXG4gIG1vZGVyYXRlOiB7XG4gICAgYWZ0ZXJNaW51dGVzOiA2MCxcbiAgICBsZXZlbDogXCJzZWNvbmRGYWN0b3JcIlxuICB9LFxuICBsYXg6IHtcbiAgICBhZnRlck1pbnV0ZXM6IDE0NDAsXG4gICAgbGV2ZWw6IFwic2Vjb25kRmFjdG9yXCJcbiAgfVxufTtcbnZhciBBTExPV0VEX0xFVkVMUyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KFtcImZpcnN0RmFjdG9yXCIsIFwic2Vjb25kRmFjdG9yXCIsIFwibXVsdGlGYWN0b3JcIl0pO1xudmFyIEFMTE9XRURfVFlQRVMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXCJ2ZXJ5U3RyaWN0XCIsIFwic3RyaWN0XCIsIFwibW9kZXJhdGVcIiwgXCJsYXhcIl0pO1xudmFyIGlzVmFsaWRNYXhBZ2UgPSAobWF4QWdlKSA9PiB0eXBlb2YgbWF4QWdlID09PSBcIm51bWJlclwiICYmIG1heEFnZSA+IDA7XG52YXIgaXNWYWxpZExldmVsID0gKGxldmVsKSA9PiBBTExPV0VEX0xFVkVMUy5oYXMobGV2ZWwpO1xudmFyIGlzVmFsaWRWZXJpZmljYXRpb25UeXBlID0gKHR5cGUpID0+IEFMTE9XRURfVFlQRVMuaGFzKHR5cGUpO1xudmFyIGNoZWNrT3JnQXV0aG9yaXphdGlvbiA9IChwYXJhbXMsIG9wdGlvbnMpID0+IHtcbiAgY29uc3QgeyBvcmdJZCwgb3JnUm9sZSwgb3JnUGVybWlzc2lvbnMgfSA9IG9wdGlvbnM7XG4gIGlmICghcGFyYW1zLnJvbGUgJiYgIXBhcmFtcy5wZXJtaXNzaW9uKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgaWYgKCFvcmdJZCB8fCAhb3JnUm9sZSB8fCAhb3JnUGVybWlzc2lvbnMpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBpZiAocGFyYW1zLnBlcm1pc3Npb24pIHtcbiAgICByZXR1cm4gb3JnUGVybWlzc2lvbnMuaW5jbHVkZXMocGFyYW1zLnBlcm1pc3Npb24pO1xuICB9XG4gIGlmIChwYXJhbXMucm9sZSkge1xuICAgIHJldHVybiBvcmdSb2xlID09PSBwYXJhbXMucm9sZTtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG52YXIgdmFsaWRhdGVSZXZlcmlmaWNhdGlvbkNvbmZpZyA9IChjb25maWcpID0+IHtcbiAgY29uc3QgY29udmVydENvbmZpZ1RvT2JqZWN0ID0gKGNvbmZpZzIpID0+IHtcbiAgICBpZiAodHlwZW9mIGNvbmZpZzIgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHJldHVybiBUWVBFU19UT19PQkpFQ1RTW2NvbmZpZzJdO1xuICAgIH1cbiAgICByZXR1cm4gY29uZmlnMjtcbiAgfTtcbiAgaWYgKHR5cGVvZiBjb25maWcgPT09IFwic3RyaW5nXCIgJiYgaXNWYWxpZFZlcmlmaWNhdGlvblR5cGUoY29uZmlnKSkge1xuICAgIHJldHVybiBjb252ZXJ0Q29uZmlnVG9PYmplY3QuYmluZChudWxsLCBjb25maWcpO1xuICB9XG4gIGlmICh0eXBlb2YgY29uZmlnID09PSBcIm9iamVjdFwiICYmIGlzVmFsaWRMZXZlbChjb25maWcubGV2ZWwpICYmIGlzVmFsaWRNYXhBZ2UoY29uZmlnLmFmdGVyTWludXRlcykpIHtcbiAgICByZXR1cm4gY29udmVydENvbmZpZ1RvT2JqZWN0LmJpbmQobnVsbCwgY29uZmlnKTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xudmFyIGNoZWNrU3RlcFVwQXV0aG9yaXphdGlvbiA9IChwYXJhbXMsIHsgX19leHBlcmltZW50YWxfZmFjdG9yVmVyaWZpY2F0aW9uQWdlIH0pID0+IHtcbiAgaWYgKCFwYXJhbXMuX19leHBlcmltZW50YWxfcmV2ZXJpZmljYXRpb24gfHwgIV9fZXhwZXJpbWVudGFsX2ZhY3RvclZlcmlmaWNhdGlvbkFnZSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IGlzVmFsaWRSZXZlcmlmaWNhdGlvbiA9IHZhbGlkYXRlUmV2ZXJpZmljYXRpb25Db25maWcocGFyYW1zLl9fZXhwZXJpbWVudGFsX3JldmVyaWZpY2F0aW9uKTtcbiAgaWYgKCFpc1ZhbGlkUmV2ZXJpZmljYXRpb24pIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCB7IGxldmVsLCBhZnRlck1pbnV0ZXMgfSA9IGlzVmFsaWRSZXZlcmlmaWNhdGlvbigpO1xuICBjb25zdCBbZmFjdG9yMUFnZSwgZmFjdG9yMkFnZV0gPSBfX2V4cGVyaW1lbnRhbF9mYWN0b3JWZXJpZmljYXRpb25BZ2U7XG4gIGNvbnN0IGlzVmFsaWRGYWN0b3IxID0gZmFjdG9yMUFnZSAhPT0gLTEgPyBhZnRlck1pbnV0ZXMgPiBmYWN0b3IxQWdlIDogbnVsbDtcbiAgY29uc3QgaXNWYWxpZEZhY3RvcjIgPSBmYWN0b3IyQWdlICE9PSAtMSA/IGFmdGVyTWludXRlcyA+IGZhY3RvcjJBZ2UgOiBudWxsO1xuICBzd2l0Y2ggKGxldmVsKSB7XG4gICAgY2FzZSBcImZpcnN0RmFjdG9yXCI6XG4gICAgICByZXR1cm4gaXNWYWxpZEZhY3RvcjE7XG4gICAgY2FzZSBcInNlY29uZEZhY3RvclwiOlxuICAgICAgcmV0dXJuIGZhY3RvcjJBZ2UgIT09IC0xID8gaXNWYWxpZEZhY3RvcjIgOiBpc1ZhbGlkRmFjdG9yMTtcbiAgICBjYXNlIFwibXVsdGlGYWN0b3JcIjpcbiAgICAgIHJldHVybiBmYWN0b3IyQWdlID09PSAtMSA/IGlzVmFsaWRGYWN0b3IxIDogaXNWYWxpZEZhY3RvcjEgJiYgaXNWYWxpZEZhY3RvcjI7XG4gIH1cbn07XG52YXIgY3JlYXRlQ2hlY2tBdXRob3JpemF0aW9uID0gKG9wdGlvbnMpID0+IHtcbiAgcmV0dXJuIChwYXJhbXMpID0+IHtcbiAgICBpZiAoIW9wdGlvbnMudXNlcklkKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IG9yZ0F1dGhvcml6YXRpb24gPSBjaGVja09yZ0F1dGhvcml6YXRpb24ocGFyYW1zLCBvcHRpb25zKTtcbiAgICBjb25zdCBzdGVwVXBBdXRob3JpemF0aW9uID0gY2hlY2tTdGVwVXBBdXRob3JpemF0aW9uKHBhcmFtcywgb3B0aW9ucyk7XG4gICAgaWYgKFtvcmdBdXRob3JpemF0aW9uLCBzdGVwVXBBdXRob3JpemF0aW9uXS5zb21lKChhKSA9PiBhID09PSBudWxsKSkge1xuICAgICAgcmV0dXJuIFtvcmdBdXRob3JpemF0aW9uLCBzdGVwVXBBdXRob3JpemF0aW9uXS5zb21lKChhKSA9PiBhID09PSB0cnVlKTtcbiAgICB9XG4gICAgcmV0dXJuIFtvcmdBdXRob3JpemF0aW9uLCBzdGVwVXBBdXRob3JpemF0aW9uXS5ldmVyeSgoYSkgPT4gYSA9PT0gdHJ1ZSk7XG4gIH07XG59O1xuZXhwb3J0IHtcbiAgY3JlYXRlQ2hlY2tBdXRob3JpemF0aW9uXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aG9yaXphdGlvbi5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/authorization.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/browser.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/browser.mjs ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inBrowser: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__.inBrowser; },\n/* harmony export */   isBrowserOnline: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__.isBrowserOnline; },\n/* harmony export */   isValidBrowser: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidBrowser; },\n/* harmony export */   isValidBrowserOnline: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidBrowserOnline; },\n/* harmony export */   userAgentIsRobot: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__.userAgentIsRobot; }\n/* harmony export */ });\n/* harmony import */ var _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-LJ4R7M7R.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-LJ4R7M7R.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=browser.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvYnJvd3Nlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQU04QjtBQUNBO0FBTzVCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9icm93c2VyLm1qcz8zZDRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGluQnJvd3NlcixcbiAgaXNCcm93c2VyT25saW5lLFxuICBpc1ZhbGlkQnJvd3NlcixcbiAgaXNWYWxpZEJyb3dzZXJPbmxpbmUsXG4gIHVzZXJBZ2VudElzUm9ib3Rcbn0gZnJvbSBcIi4vY2h1bmstTEo0UjdNN1IubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgaW5Ccm93c2VyLFxuICBpc0Jyb3dzZXJPbmxpbmUsXG4gIGlzVmFsaWRCcm93c2VyLFxuICBpc1ZhbGlkQnJvd3Nlck9ubGluZSxcbiAgdXNlckFnZW50SXNSb2JvdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJyb3dzZXIubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/browser.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-2JIRKKG7.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-2JIRKKG7.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildClerkJsScriptAttributes: function() { return /* binding */ buildClerkJsScriptAttributes; },\n/* harmony export */   clerkJsScriptUrl: function() { return /* binding */ clerkJsScriptUrl; },\n/* harmony export */   loadClerkJsScript: function() { return /* binding */ loadClerkJsScript; },\n/* harmony export */   setClerkJsLoadingErrorPackageName: function() { return /* binding */ setClerkJsLoadingErrorPackageName; }\n/* harmony export */ });\n/* harmony import */ var _chunk_6BC7W54O_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-6BC7W54O.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6BC7W54O.mjs\");\n/* harmony import */ var _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-6NDGN2IU.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs\");\n/* harmony import */ var _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-Q2DOGLDC.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-Q2DOGLDC.mjs\");\n/* harmony import */ var _chunk_DSMUR7RM_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-DSMUR7RM.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-DSMUR7RM.mjs\");\n/* harmony import */ var _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-T4WHYQYX.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-T4WHYQYX.mjs\");\n/* harmony import */ var _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-L2BNNARM.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-L2BNNARM.mjs\");\n\n\n\n\n\n\n\n// src/loadClerkJsScript.ts\nvar FAILED_TO_LOAD_ERROR = \"Clerk: Failed to load Clerk\";\nvar { isDevOrStagingUrl } = (0,_chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_5__.createDevOrStagingUrlCache)();\nvar errorThrower = (0,_chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_4__.buildErrorThrower)({ packageName: \"@clerk/shared\" });\nfunction setClerkJsLoadingErrorPackageName(packageName) {\n  errorThrower.setPackageName({ packageName });\n}\nvar loadClerkJsScript = async (opts) => {\n  const existingScript = document.querySelector(\"script[data-clerk-js-script]\");\n  if (existingScript) {\n    return new Promise((resolve, reject) => {\n      existingScript.addEventListener(\"load\", () => {\n        resolve(existingScript);\n      });\n      existingScript.addEventListener(\"error\", () => {\n        reject(FAILED_TO_LOAD_ERROR);\n      });\n    });\n  }\n  if (!(opts == null ? void 0 : opts.publishableKey)) {\n    errorThrower.throwMissingPublishableKeyError();\n    return;\n  }\n  return (0,_chunk_DSMUR7RM_mjs__WEBPACK_IMPORTED_MODULE_3__.loadScript)(clerkJsScriptUrl(opts), {\n    async: true,\n    crossOrigin: \"anonymous\",\n    nonce: opts.nonce,\n    beforeLoad: applyClerkJsScriptAttributes(opts)\n  }).catch(() => {\n    throw new Error(FAILED_TO_LOAD_ERROR);\n  });\n};\nvar clerkJsScriptUrl = (opts) => {\n  var _a, _b;\n  const { clerkJSUrl, clerkJSVariant, clerkJSVersion, proxyUrl, domain, publishableKey } = opts;\n  if (clerkJSUrl) {\n    return clerkJSUrl;\n  }\n  let scriptHost = \"\";\n  if (!!proxyUrl && (0,_chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_1__.isValidProxyUrl)(proxyUrl)) {\n    scriptHost = (0,_chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_1__.proxyUrlToAbsoluteURL)(proxyUrl).replace(/http(s)?:\\/\\//, \"\");\n  } else if (domain && !isDevOrStagingUrl(((_a = (0,_chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_5__.parsePublishableKey)(publishableKey)) == null ? void 0 : _a.frontendApi) || \"\")) {\n    scriptHost = (0,_chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_2__.addClerkPrefix)(domain);\n  } else {\n    scriptHost = ((_b = (0,_chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_5__.parsePublishableKey)(publishableKey)) == null ? void 0 : _b.frontendApi) || \"\";\n  }\n  const variant = clerkJSVariant ? `${clerkJSVariant.replace(/\\.+$/, \"\")}.` : \"\";\n  const version = (0,_chunk_6BC7W54O_mjs__WEBPACK_IMPORTED_MODULE_0__.versionSelector)(clerkJSVersion);\n  return `https://${scriptHost}/npm/@clerk/clerk-js@${version}/dist/clerk.${variant}browser.js`;\n};\nvar buildClerkJsScriptAttributes = (options) => {\n  const obj = {};\n  if (options.publishableKey) {\n    obj[\"data-clerk-publishable-key\"] = options.publishableKey;\n  }\n  if (options.proxyUrl) {\n    obj[\"data-clerk-proxy-url\"] = options.proxyUrl;\n  }\n  if (options.domain) {\n    obj[\"data-clerk-domain\"] = options.domain;\n  }\n  if (options.nonce) {\n    obj.nonce = options.nonce;\n  }\n  return obj;\n};\nvar applyClerkJsScriptAttributes = (options) => (script) => {\n  const attributes = buildClerkJsScriptAttributes(options);\n  for (const attribute in attributes) {\n    script.setAttribute(attribute, attributes[attribute]);\n  }\n};\n\n\n//# sourceMappingURL=chunk-2JIRKKG7.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstMkpJUktLRzcubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFFOEI7QUFJQTtBQUdBO0FBR0E7QUFHQTtBQUlBOztBQUU5QjtBQUNBO0FBQ0EsTUFBTSxvQkFBb0IsRUFBRSwrRUFBMEI7QUFDdEQsbUJBQW1CLHNFQUFpQixHQUFHLDhCQUE4QjtBQUNyRTtBQUNBLGdDQUFnQyxhQUFhO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLCtEQUFVO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsK0VBQStFO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9FQUFlO0FBQ25DLGlCQUFpQiwwRUFBcUI7QUFDdEMsSUFBSSw2Q0FBNkMsd0VBQW1CO0FBQ3BFLGlCQUFpQixtRUFBYztBQUMvQixJQUFJO0FBQ0osd0JBQXdCLHdFQUFtQjtBQUMzQztBQUNBLHNDQUFzQyxtQ0FBbUM7QUFDekUsa0JBQWtCLG9FQUFlO0FBQ2pDLG9CQUFvQixXQUFXLHVCQUF1QixRQUFRLGNBQWMsUUFBUTtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQU9FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay0ySklSS0tHNy5tanM/NDk1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICB2ZXJzaW9uU2VsZWN0b3Jcbn0gZnJvbSBcIi4vY2h1bmstNkJDN1c1NE8ubWpzXCI7XG5pbXBvcnQge1xuICBpc1ZhbGlkUHJveHlVcmwsXG4gIHByb3h5VXJsVG9BYnNvbHV0ZVVSTFxufSBmcm9tIFwiLi9jaHVuay02TkRHTjJJVS5tanNcIjtcbmltcG9ydCB7XG4gIGFkZENsZXJrUHJlZml4XG59IGZyb20gXCIuL2NodW5rLVEyRE9HTERDLm1qc1wiO1xuaW1wb3J0IHtcbiAgbG9hZFNjcmlwdFxufSBmcm9tIFwiLi9jaHVuay1EU01VUjdSTS5tanNcIjtcbmltcG9ydCB7XG4gIGJ1aWxkRXJyb3JUaHJvd2VyXG59IGZyb20gXCIuL2NodW5rLVQ0V0hZUVlYLm1qc1wiO1xuaW1wb3J0IHtcbiAgY3JlYXRlRGV2T3JTdGFnaW5nVXJsQ2FjaGUsXG4gIHBhcnNlUHVibGlzaGFibGVLZXlcbn0gZnJvbSBcIi4vY2h1bmstTDJCTk5BUk0ubWpzXCI7XG5cbi8vIHNyYy9sb2FkQ2xlcmtKc1NjcmlwdC50c1xudmFyIEZBSUxFRF9UT19MT0FEX0VSUk9SID0gXCJDbGVyazogRmFpbGVkIHRvIGxvYWQgQ2xlcmtcIjtcbnZhciB7IGlzRGV2T3JTdGFnaW5nVXJsIH0gPSBjcmVhdGVEZXZPclN0YWdpbmdVcmxDYWNoZSgpO1xudmFyIGVycm9yVGhyb3dlciA9IGJ1aWxkRXJyb3JUaHJvd2VyKHsgcGFja2FnZU5hbWU6IFwiQGNsZXJrL3NoYXJlZFwiIH0pO1xuZnVuY3Rpb24gc2V0Q2xlcmtKc0xvYWRpbmdFcnJvclBhY2thZ2VOYW1lKHBhY2thZ2VOYW1lKSB7XG4gIGVycm9yVGhyb3dlci5zZXRQYWNrYWdlTmFtZSh7IHBhY2thZ2VOYW1lIH0pO1xufVxudmFyIGxvYWRDbGVya0pzU2NyaXB0ID0gYXN5bmMgKG9wdHMpID0+IHtcbiAgY29uc3QgZXhpc3RpbmdTY3JpcHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic2NyaXB0W2RhdGEtY2xlcmstanMtc2NyaXB0XVwiKTtcbiAgaWYgKGV4aXN0aW5nU2NyaXB0KSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGV4aXN0aW5nU2NyaXB0LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IHtcbiAgICAgICAgcmVzb2x2ZShleGlzdGluZ1NjcmlwdCk7XG4gICAgICB9KTtcbiAgICAgIGV4aXN0aW5nU2NyaXB0LmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLCAoKSA9PiB7XG4gICAgICAgIHJlamVjdChGQUlMRURfVE9fTE9BRF9FUlJPUik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBpZiAoIShvcHRzID09IG51bGwgPyB2b2lkIDAgOiBvcHRzLnB1Ymxpc2hhYmxlS2V5KSkge1xuICAgIGVycm9yVGhyb3dlci50aHJvd01pc3NpbmdQdWJsaXNoYWJsZUtleUVycm9yKCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIHJldHVybiBsb2FkU2NyaXB0KGNsZXJrSnNTY3JpcHRVcmwob3B0cyksIHtcbiAgICBhc3luYzogdHJ1ZSxcbiAgICBjcm9zc09yaWdpbjogXCJhbm9ueW1vdXNcIixcbiAgICBub25jZTogb3B0cy5ub25jZSxcbiAgICBiZWZvcmVMb2FkOiBhcHBseUNsZXJrSnNTY3JpcHRBdHRyaWJ1dGVzKG9wdHMpXG4gIH0pLmNhdGNoKCgpID0+IHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoRkFJTEVEX1RPX0xPQURfRVJST1IpO1xuICB9KTtcbn07XG52YXIgY2xlcmtKc1NjcmlwdFVybCA9IChvcHRzKSA9PiB7XG4gIHZhciBfYSwgX2I7XG4gIGNvbnN0IHsgY2xlcmtKU1VybCwgY2xlcmtKU1ZhcmlhbnQsIGNsZXJrSlNWZXJzaW9uLCBwcm94eVVybCwgZG9tYWluLCBwdWJsaXNoYWJsZUtleSB9ID0gb3B0cztcbiAgaWYgKGNsZXJrSlNVcmwpIHtcbiAgICByZXR1cm4gY2xlcmtKU1VybDtcbiAgfVxuICBsZXQgc2NyaXB0SG9zdCA9IFwiXCI7XG4gIGlmICghIXByb3h5VXJsICYmIGlzVmFsaWRQcm94eVVybChwcm94eVVybCkpIHtcbiAgICBzY3JpcHRIb3N0ID0gcHJveHlVcmxUb0Fic29sdXRlVVJMKHByb3h5VXJsKS5yZXBsYWNlKC9odHRwKHMpPzpcXC9cXC8vLCBcIlwiKTtcbiAgfSBlbHNlIGlmIChkb21haW4gJiYgIWlzRGV2T3JTdGFnaW5nVXJsKCgoX2EgPSBwYXJzZVB1Ymxpc2hhYmxlS2V5KHB1Ymxpc2hhYmxlS2V5KSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmZyb250ZW5kQXBpKSB8fCBcIlwiKSkge1xuICAgIHNjcmlwdEhvc3QgPSBhZGRDbGVya1ByZWZpeChkb21haW4pO1xuICB9IGVsc2Uge1xuICAgIHNjcmlwdEhvc3QgPSAoKF9iID0gcGFyc2VQdWJsaXNoYWJsZUtleShwdWJsaXNoYWJsZUtleSkpID09IG51bGwgPyB2b2lkIDAgOiBfYi5mcm9udGVuZEFwaSkgfHwgXCJcIjtcbiAgfVxuICBjb25zdCB2YXJpYW50ID0gY2xlcmtKU1ZhcmlhbnQgPyBgJHtjbGVya0pTVmFyaWFudC5yZXBsYWNlKC9cXC4rJC8sIFwiXCIpfS5gIDogXCJcIjtcbiAgY29uc3QgdmVyc2lvbiA9IHZlcnNpb25TZWxlY3RvcihjbGVya0pTVmVyc2lvbik7XG4gIHJldHVybiBgaHR0cHM6Ly8ke3NjcmlwdEhvc3R9L25wbS9AY2xlcmsvY2xlcmstanNAJHt2ZXJzaW9ufS9kaXN0L2NsZXJrLiR7dmFyaWFudH1icm93c2VyLmpzYDtcbn07XG52YXIgYnVpbGRDbGVya0pzU2NyaXB0QXR0cmlidXRlcyA9IChvcHRpb25zKSA9PiB7XG4gIGNvbnN0IG9iaiA9IHt9O1xuICBpZiAob3B0aW9ucy5wdWJsaXNoYWJsZUtleSkge1xuICAgIG9ialtcImRhdGEtY2xlcmstcHVibGlzaGFibGUta2V5XCJdID0gb3B0aW9ucy5wdWJsaXNoYWJsZUtleTtcbiAgfVxuICBpZiAob3B0aW9ucy5wcm94eVVybCkge1xuICAgIG9ialtcImRhdGEtY2xlcmstcHJveHktdXJsXCJdID0gb3B0aW9ucy5wcm94eVVybDtcbiAgfVxuICBpZiAob3B0aW9ucy5kb21haW4pIHtcbiAgICBvYmpbXCJkYXRhLWNsZXJrLWRvbWFpblwiXSA9IG9wdGlvbnMuZG9tYWluO1xuICB9XG4gIGlmIChvcHRpb25zLm5vbmNlKSB7XG4gICAgb2JqLm5vbmNlID0gb3B0aW9ucy5ub25jZTtcbiAgfVxuICByZXR1cm4gb2JqO1xufTtcbnZhciBhcHBseUNsZXJrSnNTY3JpcHRBdHRyaWJ1dGVzID0gKG9wdGlvbnMpID0+IChzY3JpcHQpID0+IHtcbiAgY29uc3QgYXR0cmlidXRlcyA9IGJ1aWxkQ2xlcmtKc1NjcmlwdEF0dHJpYnV0ZXMob3B0aW9ucyk7XG4gIGZvciAoY29uc3QgYXR0cmlidXRlIGluIGF0dHJpYnV0ZXMpIHtcbiAgICBzY3JpcHQuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZSwgYXR0cmlidXRlc1thdHRyaWJ1dGVdKTtcbiAgfVxufTtcblxuZXhwb3J0IHtcbiAgc2V0Q2xlcmtKc0xvYWRpbmdFcnJvclBhY2thZ2VOYW1lLFxuICBsb2FkQ2xlcmtKc1NjcmlwdCxcbiAgY2xlcmtKc1NjcmlwdFVybCxcbiAgYnVpbGRDbGVya0pzU2NyaXB0QXR0cmlidXRlc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTJKSVJLS0c3Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-2JIRKKG7.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-4LL2VPJL.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-4LL2VPJL.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fastDeepMergeAndKeep: function() { return /* binding */ fastDeepMergeAndKeep; },\n/* harmony export */   fastDeepMergeAndReplace: function() { return /* binding */ fastDeepMergeAndReplace; }\n/* harmony export */ });\n// src/fastDeepMerge.ts\nvar fastDeepMergeAndReplace = (source, target) => {\n  if (!source || !target) {\n    return;\n  }\n  for (const key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key) && source[key] !== null && typeof source[key] === `object`) {\n      if (target[key] === void 0) {\n        target[key] = new (Object.getPrototypeOf(source[key])).constructor();\n      }\n      fastDeepMergeAndReplace(source[key], target[key]);\n    } else if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\nvar fastDeepMergeAndKeep = (source, target) => {\n  if (!source || !target) {\n    return;\n  }\n  for (const key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key) && source[key] !== null && typeof source[key] === `object`) {\n      if (target[key] === void 0) {\n        target[key] = new (Object.getPrototypeOf(source[key])).constructor();\n      }\n      fastDeepMergeAndKeep(source[key], target[key]);\n    } else if (Object.prototype.hasOwnProperty.call(source, key) && target[key] === void 0) {\n      target[key] = source[key];\n    }\n  }\n};\n\n\n//# sourceMappingURL=chunk-4LL2VPJL.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNExMMlZQSkwubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay00TEwyVlBKTC5tanM/OWQ5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZmFzdERlZXBNZXJnZS50c1xudmFyIGZhc3REZWVwTWVyZ2VBbmRSZXBsYWNlID0gKHNvdXJjZSwgdGFyZ2V0KSA9PiB7XG4gIGlmICghc291cmNlIHx8ICF0YXJnZXQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkgJiYgc291cmNlW2tleV0gIT09IG51bGwgJiYgdHlwZW9mIHNvdXJjZVtrZXldID09PSBgb2JqZWN0YCkge1xuICAgICAgaWYgKHRhcmdldFtrZXldID09PSB2b2lkIDApIHtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSBuZXcgKE9iamVjdC5nZXRQcm90b3R5cGVPZihzb3VyY2Vba2V5XSkpLmNvbnN0cnVjdG9yKCk7XG4gICAgICB9XG4gICAgICBmYXN0RGVlcE1lcmdlQW5kUmVwbGFjZShzb3VyY2Vba2V5XSwgdGFyZ2V0W2tleV0pO1xuICAgIH0gZWxzZSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICB9XG4gIH1cbn07XG52YXIgZmFzdERlZXBNZXJnZUFuZEtlZXAgPSAoc291cmNlLCB0YXJnZXQpID0+IHtcbiAgaWYgKCFzb3VyY2UgfHwgIXRhcmdldCkge1xuICAgIHJldHVybjtcbiAgfVxuICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSAmJiBzb3VyY2Vba2V5XSAhPT0gbnVsbCAmJiB0eXBlb2Ygc291cmNlW2tleV0gPT09IGBvYmplY3RgKSB7XG4gICAgICBpZiAodGFyZ2V0W2tleV0gPT09IHZvaWQgMCkge1xuICAgICAgICB0YXJnZXRba2V5XSA9IG5ldyAoT2JqZWN0LmdldFByb3RvdHlwZU9mKHNvdXJjZVtrZXldKSkuY29uc3RydWN0b3IoKTtcbiAgICAgIH1cbiAgICAgIGZhc3REZWVwTWVyZ2VBbmRLZWVwKHNvdXJjZVtrZXldLCB0YXJnZXRba2V5XSk7XG4gICAgfSBlbHNlIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpICYmIHRhcmdldFtrZXldID09PSB2b2lkIDApIHtcbiAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQge1xuICBmYXN0RGVlcE1lcmdlQW5kUmVwbGFjZSxcbiAgZmFzdERlZXBNZXJnZUFuZEtlZXBcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay00TEwyVlBKTC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-4LL2VPJL.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callWithRetry: function() { return /* binding */ callWithRetry; }\n/* harmony export */ });\n// src/callWithRetry.ts\nfunction wait(ms) {\n  return new Promise((res) => setTimeout(res, ms));\n}\nvar MAX_NUMBER_OF_RETRIES = 5;\nasync function callWithRetry(fn, attempt = 1, maxAttempts = MAX_NUMBER_OF_RETRIES) {\n  try {\n    return await fn();\n  } catch (e) {\n    if (attempt >= maxAttempts) {\n      throw e;\n    }\n    await wait(2 ** attempt * 100);\n    return callWithRetry(fn, attempt + 1, maxAttempts);\n  }\n}\n\n\n//# sourceMappingURL=chunk-4PW5MDZA.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNFBXNU1EWkEubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay00UFc1TURaQS5tanM/MDA0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY2FsbFdpdGhSZXRyeS50c1xuZnVuY3Rpb24gd2FpdChtcykge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlcykgPT4gc2V0VGltZW91dChyZXMsIG1zKSk7XG59XG52YXIgTUFYX05VTUJFUl9PRl9SRVRSSUVTID0gNTtcbmFzeW5jIGZ1bmN0aW9uIGNhbGxXaXRoUmV0cnkoZm4sIGF0dGVtcHQgPSAxLCBtYXhBdHRlbXB0cyA9IE1BWF9OVU1CRVJfT0ZfUkVUUklFUykge1xuICB0cnkge1xuICAgIHJldHVybiBhd2FpdCBmbigpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGF0dGVtcHQgPj0gbWF4QXR0ZW1wdHMpIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICAgIGF3YWl0IHdhaXQoMiAqKiBhdHRlbXB0ICogMTAwKTtcbiAgICByZXR1cm4gY2FsbFdpdGhSZXRyeShmbiwgYXR0ZW1wdCArIDEsIG1heEF0dGVtcHRzKTtcbiAgfVxufVxuXG5leHBvcnQge1xuICBjYWxsV2l0aFJldHJ5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNFBXNU1EWkEubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-5JU2E5TY.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-5JU2E5TY.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extension: function() { return /* binding */ extension; },\n/* harmony export */   readJSONFile: function() { return /* binding */ readJSONFile; }\n/* harmony export */ });\n// src/file.ts\nfunction readJSONFile(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", function() {\n      const result = JSON.parse(reader.result);\n      resolve(result);\n    });\n    reader.addEventListener(\"error\", reject);\n    reader.readAsText(file);\n  });\n}\nvar MimeTypeToExtensionMap = Object.freeze({\n  \"image/png\": \"png\",\n  \"image/jpeg\": \"jpg\",\n  \"image/gif\": \"gif\",\n  \"image/webp\": \"webp\",\n  \"image/x-icon\": \"ico\",\n  \"image/vnd.microsoft.icon\": \"ico\"\n});\nvar extension = (mimeType) => {\n  return MimeTypeToExtensionMap[mimeType];\n};\n\n\n//# sourceMappingURL=chunk-5JU2E5TY.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNUpVMkU1VFkubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFLRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNUpVMkU1VFkubWpzPzIzYmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2ZpbGUudHNcbmZ1bmN0aW9uIHJlYWRKU09ORmlsZShmaWxlKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgICByZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBKU09OLnBhcnNlKHJlYWRlci5yZXN1bHQpO1xuICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgIH0pO1xuICAgIHJlYWRlci5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgcmVqZWN0KTtcbiAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTtcbiAgfSk7XG59XG52YXIgTWltZVR5cGVUb0V4dGVuc2lvbk1hcCA9IE9iamVjdC5mcmVlemUoe1xuICBcImltYWdlL3BuZ1wiOiBcInBuZ1wiLFxuICBcImltYWdlL2pwZWdcIjogXCJqcGdcIixcbiAgXCJpbWFnZS9naWZcIjogXCJnaWZcIixcbiAgXCJpbWFnZS93ZWJwXCI6IFwid2VicFwiLFxuICBcImltYWdlL3gtaWNvblwiOiBcImljb1wiLFxuICBcImltYWdlL3ZuZC5taWNyb3NvZnQuaWNvblwiOiBcImljb1wiXG59KTtcbnZhciBleHRlbnNpb24gPSAobWltZVR5cGUpID0+IHtcbiAgcmV0dXJuIE1pbWVUeXBlVG9FeHRlbnNpb25NYXBbbWltZVR5cGVdO1xufTtcblxuZXhwb3J0IHtcbiAgcmVhZEpTT05GaWxlLFxuICBleHRlbnNpb25cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay01SlUyRTVUWS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-5JU2E5TY.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6BC7W54O.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-6BC7W54O.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMajorVersion: function() { return /* binding */ getMajorVersion; },\n/* harmony export */   versionSelector: function() { return /* binding */ versionSelector; }\n/* harmony export */ });\n// src/versionSelector.ts\nvar versionSelector = (clerkJSVersion, packageVersion = \"5.26.5\") => {\n  if (clerkJSVersion) {\n    return clerkJSVersion;\n  }\n  const prereleaseTag = getPrereleaseTag(packageVersion);\n  if (prereleaseTag) {\n    if (prereleaseTag === \"snapshot\") {\n      return \"5.26.5\";\n    }\n    return prereleaseTag;\n  }\n  return getMajorVersion(packageVersion);\n};\nvar getPrereleaseTag = (packageVersion) => {\n  var _a;\n  return (_a = packageVersion.trim().replace(/^v/, \"\").match(/-(.+?)(\\.|$)/)) == null ? void 0 : _a[1];\n};\nvar getMajorVersion = (packageVersion) => packageVersion.trim().replace(/^v/, \"\").split(\".\")[0];\n\n\n//# sourceMappingURL=chunk-6BC7W54O.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNkJDN1c1NE8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLTZCQzdXNTRPLm1qcz9hMDhlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy92ZXJzaW9uU2VsZWN0b3IudHNcbnZhciB2ZXJzaW9uU2VsZWN0b3IgPSAoY2xlcmtKU1ZlcnNpb24sIHBhY2thZ2VWZXJzaW9uID0gXCI1LjI2LjVcIikgPT4ge1xuICBpZiAoY2xlcmtKU1ZlcnNpb24pIHtcbiAgICByZXR1cm4gY2xlcmtKU1ZlcnNpb247XG4gIH1cbiAgY29uc3QgcHJlcmVsZWFzZVRhZyA9IGdldFByZXJlbGVhc2VUYWcocGFja2FnZVZlcnNpb24pO1xuICBpZiAocHJlcmVsZWFzZVRhZykge1xuICAgIGlmIChwcmVyZWxlYXNlVGFnID09PSBcInNuYXBzaG90XCIpIHtcbiAgICAgIHJldHVybiBcIjUuMjYuNVwiO1xuICAgIH1cbiAgICByZXR1cm4gcHJlcmVsZWFzZVRhZztcbiAgfVxuICByZXR1cm4gZ2V0TWFqb3JWZXJzaW9uKHBhY2thZ2VWZXJzaW9uKTtcbn07XG52YXIgZ2V0UHJlcmVsZWFzZVRhZyA9IChwYWNrYWdlVmVyc2lvbikgPT4ge1xuICB2YXIgX2E7XG4gIHJldHVybiAoX2EgPSBwYWNrYWdlVmVyc2lvbi50cmltKCkucmVwbGFjZSgvXnYvLCBcIlwiKS5tYXRjaCgvLSguKz8pKFxcLnwkKS8pKSA9PSBudWxsID8gdm9pZCAwIDogX2FbMV07XG59O1xudmFyIGdldE1ham9yVmVyc2lvbiA9IChwYWNrYWdlVmVyc2lvbikgPT4gcGFja2FnZVZlcnNpb24udHJpbSgpLnJlcGxhY2UoL152LywgXCJcIikuc3BsaXQoXCIuXCIpWzBdO1xuXG5leHBvcnQge1xuICB2ZXJzaW9uU2VsZWN0b3IsXG4gIGdldE1ham9yVmVyc2lvblxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTZCQzdXNTRPLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6BC7W54O.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpOrHttps: function() { return /* binding */ isHttpOrHttps; },\n/* harmony export */   isProxyUrlRelative: function() { return /* binding */ isProxyUrlRelative; },\n/* harmony export */   isValidProxyUrl: function() { return /* binding */ isValidProxyUrl; },\n/* harmony export */   proxyUrlToAbsoluteURL: function() { return /* binding */ proxyUrlToAbsoluteURL; }\n/* harmony export */ });\n// src/proxy.ts\nfunction isValidProxyUrl(key) {\n  if (!key) {\n    return true;\n  }\n  return isHttpOrHttps(key) || isProxyUrlRelative(key);\n}\nfunction isHttpOrHttps(key) {\n  return /^http(s)?:\\/\\//.test(key || \"\");\n}\nfunction isProxyUrlRelative(key) {\n  return key.startsWith(\"/\");\n}\nfunction proxyUrlToAbsoluteURL(url) {\n  if (!url) {\n    return \"\";\n  }\n  return isProxyUrlRelative(url) ? new URL(url, window.location.origin).toString() : url;\n}\n\n\n//# sourceMappingURL=chunk-6NDGN2IU.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNk5ER04ySVUubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFPRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNk5ER04ySVUubWpzPzc5YjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3Byb3h5LnRzXG5mdW5jdGlvbiBpc1ZhbGlkUHJveHlVcmwoa2V5KSB7XG4gIGlmICgha2V5KSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIGlzSHR0cE9ySHR0cHMoa2V5KSB8fCBpc1Byb3h5VXJsUmVsYXRpdmUoa2V5KTtcbn1cbmZ1bmN0aW9uIGlzSHR0cE9ySHR0cHMoa2V5KSB7XG4gIHJldHVybiAvXmh0dHAocyk/OlxcL1xcLy8udGVzdChrZXkgfHwgXCJcIik7XG59XG5mdW5jdGlvbiBpc1Byb3h5VXJsUmVsYXRpdmUoa2V5KSB7XG4gIHJldHVybiBrZXkuc3RhcnRzV2l0aChcIi9cIik7XG59XG5mdW5jdGlvbiBwcm94eVVybFRvQWJzb2x1dGVVUkwodXJsKSB7XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbiAgcmV0dXJuIGlzUHJveHlVcmxSZWxhdGl2ZSh1cmwpID8gbmV3IFVSTCh1cmwsIHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4pLnRvU3RyaW5nKCkgOiB1cmw7XG59XG5cbmV4cG9ydCB7XG4gIGlzVmFsaWRQcm94eVVybCxcbiAgaXNIdHRwT3JIdHRwcyxcbiAgaXNQcm94eVVybFJlbGF0aXZlLFxuICBwcm94eVVybFRvQWJzb2x1dGVVUkxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay02TkRHTjJJVS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6NISCHKC.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-6NISCHKC.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deriveState: function() { return /* binding */ deriveState; }\n/* harmony export */ });\n// src/deriveState.ts\nvar deriveState = (clerkLoaded, state, initialState) => {\n  if (!clerkLoaded && initialState) {\n    return deriveFromSsrInitialState(initialState);\n  }\n  return deriveFromClientSideState(state);\n};\nvar deriveFromSsrInitialState = (initialState) => {\n  const userId = initialState.userId;\n  const user = initialState.user;\n  const sessionId = initialState.sessionId;\n  const session = initialState.session;\n  const organization = initialState.organization;\n  const orgId = initialState.orgId;\n  const orgRole = initialState.orgRole;\n  const orgPermissions = initialState.orgPermissions;\n  const orgSlug = initialState.orgSlug;\n  const actor = initialState.actor;\n  return {\n    userId,\n    user,\n    sessionId,\n    session,\n    organization,\n    orgId,\n    orgRole,\n    orgPermissions,\n    orgSlug,\n    actor\n  };\n};\nvar deriveFromClientSideState = (state) => {\n  var _a;\n  const userId = state.user ? state.user.id : state.user;\n  const user = state.user;\n  const sessionId = state.session ? state.session.id : state.session;\n  const session = state.session;\n  const actor = session == null ? void 0 : session.actor;\n  const organization = state.organization;\n  const orgId = state.organization ? state.organization.id : state.organization;\n  const orgSlug = organization == null ? void 0 : organization.slug;\n  const membership = organization ? (_a = user == null ? void 0 : user.organizationMemberships) == null ? void 0 : _a.find((om) => om.organization.id === orgId) : organization;\n  const orgPermissions = membership ? membership.permissions : membership;\n  const orgRole = membership ? membership.role : membership;\n  return {\n    userId,\n    user,\n    sessionId,\n    session,\n    organization,\n    orgId,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    actor\n  };\n};\n\n\n//# sourceMappingURL=chunk-6NISCHKC.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNk5JU0NIS0MubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLTZOSVNDSEtDLm1qcz8wNWVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9kZXJpdmVTdGF0ZS50c1xudmFyIGRlcml2ZVN0YXRlID0gKGNsZXJrTG9hZGVkLCBzdGF0ZSwgaW5pdGlhbFN0YXRlKSA9PiB7XG4gIGlmICghY2xlcmtMb2FkZWQgJiYgaW5pdGlhbFN0YXRlKSB7XG4gICAgcmV0dXJuIGRlcml2ZUZyb21Tc3JJbml0aWFsU3RhdGUoaW5pdGlhbFN0YXRlKTtcbiAgfVxuICByZXR1cm4gZGVyaXZlRnJvbUNsaWVudFNpZGVTdGF0ZShzdGF0ZSk7XG59O1xudmFyIGRlcml2ZUZyb21Tc3JJbml0aWFsU3RhdGUgPSAoaW5pdGlhbFN0YXRlKSA9PiB7XG4gIGNvbnN0IHVzZXJJZCA9IGluaXRpYWxTdGF0ZS51c2VySWQ7XG4gIGNvbnN0IHVzZXIgPSBpbml0aWFsU3RhdGUudXNlcjtcbiAgY29uc3Qgc2Vzc2lvbklkID0gaW5pdGlhbFN0YXRlLnNlc3Npb25JZDtcbiAgY29uc3Qgc2Vzc2lvbiA9IGluaXRpYWxTdGF0ZS5zZXNzaW9uO1xuICBjb25zdCBvcmdhbml6YXRpb24gPSBpbml0aWFsU3RhdGUub3JnYW5pemF0aW9uO1xuICBjb25zdCBvcmdJZCA9IGluaXRpYWxTdGF0ZS5vcmdJZDtcbiAgY29uc3Qgb3JnUm9sZSA9IGluaXRpYWxTdGF0ZS5vcmdSb2xlO1xuICBjb25zdCBvcmdQZXJtaXNzaW9ucyA9IGluaXRpYWxTdGF0ZS5vcmdQZXJtaXNzaW9ucztcbiAgY29uc3Qgb3JnU2x1ZyA9IGluaXRpYWxTdGF0ZS5vcmdTbHVnO1xuICBjb25zdCBhY3RvciA9IGluaXRpYWxTdGF0ZS5hY3RvcjtcbiAgcmV0dXJuIHtcbiAgICB1c2VySWQsXG4gICAgdXNlcixcbiAgICBzZXNzaW9uSWQsXG4gICAgc2Vzc2lvbixcbiAgICBvcmdhbml6YXRpb24sXG4gICAgb3JnSWQsXG4gICAgb3JnUm9sZSxcbiAgICBvcmdQZXJtaXNzaW9ucyxcbiAgICBvcmdTbHVnLFxuICAgIGFjdG9yXG4gIH07XG59O1xudmFyIGRlcml2ZUZyb21DbGllbnRTaWRlU3RhdGUgPSAoc3RhdGUpID0+IHtcbiAgdmFyIF9hO1xuICBjb25zdCB1c2VySWQgPSBzdGF0ZS51c2VyID8gc3RhdGUudXNlci5pZCA6IHN0YXRlLnVzZXI7XG4gIGNvbnN0IHVzZXIgPSBzdGF0ZS51c2VyO1xuICBjb25zdCBzZXNzaW9uSWQgPSBzdGF0ZS5zZXNzaW9uID8gc3RhdGUuc2Vzc2lvbi5pZCA6IHN0YXRlLnNlc3Npb247XG4gIGNvbnN0IHNlc3Npb24gPSBzdGF0ZS5zZXNzaW9uO1xuICBjb25zdCBhY3RvciA9IHNlc3Npb24gPT0gbnVsbCA/IHZvaWQgMCA6IHNlc3Npb24uYWN0b3I7XG4gIGNvbnN0IG9yZ2FuaXphdGlvbiA9IHN0YXRlLm9yZ2FuaXphdGlvbjtcbiAgY29uc3Qgb3JnSWQgPSBzdGF0ZS5vcmdhbml6YXRpb24gPyBzdGF0ZS5vcmdhbml6YXRpb24uaWQgOiBzdGF0ZS5vcmdhbml6YXRpb247XG4gIGNvbnN0IG9yZ1NsdWcgPSBvcmdhbml6YXRpb24gPT0gbnVsbCA/IHZvaWQgMCA6IG9yZ2FuaXphdGlvbi5zbHVnO1xuICBjb25zdCBtZW1iZXJzaGlwID0gb3JnYW5pemF0aW9uID8gKF9hID0gdXNlciA9PSBudWxsID8gdm9pZCAwIDogdXNlci5vcmdhbml6YXRpb25NZW1iZXJzaGlwcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmZpbmQoKG9tKSA9PiBvbS5vcmdhbml6YXRpb24uaWQgPT09IG9yZ0lkKSA6IG9yZ2FuaXphdGlvbjtcbiAgY29uc3Qgb3JnUGVybWlzc2lvbnMgPSBtZW1iZXJzaGlwID8gbWVtYmVyc2hpcC5wZXJtaXNzaW9ucyA6IG1lbWJlcnNoaXA7XG4gIGNvbnN0IG9yZ1JvbGUgPSBtZW1iZXJzaGlwID8gbWVtYmVyc2hpcC5yb2xlIDogbWVtYmVyc2hpcDtcbiAgcmV0dXJuIHtcbiAgICB1c2VySWQsXG4gICAgdXNlcixcbiAgICBzZXNzaW9uSWQsXG4gICAgc2Vzc2lvbixcbiAgICBvcmdhbml6YXRpb24sXG4gICAgb3JnSWQsXG4gICAgb3JnUm9sZSxcbiAgICBvcmdTbHVnLFxuICAgIG9yZ1Blcm1pc3Npb25zLFxuICAgIGFjdG9yXG4gIH07XG59O1xuXG5leHBvcnQge1xuICBkZXJpdmVTdGF0ZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTZOSVNDSEtDLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6NISCHKC.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __export: function() { return /* binding */ __export; },\n/* harmony export */   __privateAdd: function() { return /* binding */ __privateAdd; },\n/* harmony export */   __privateGet: function() { return /* binding */ __privateGet; },\n/* harmony export */   __privateMethod: function() { return /* binding */ __privateMethod; },\n/* harmony export */   __privateSet: function() { return /* binding */ __privateSet; },\n/* harmony export */   __reExport: function() { return /* binding */ __reExport; }\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\n\n\n//# sourceMappingURL=chunk-7ELT755Q.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstN0VMVDc1NVEubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrQ0FBa0M7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw0RkFBNEY7QUFDekg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVNFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay03RUxUNzU1US5tanM/MjI0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIF9fZ2V0T3duUHJvcE5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgX19oYXNPd25Qcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBfX3R5cGVFcnJvciA9IChtc2cpID0+IHtcbiAgdGhyb3cgVHlwZUVycm9yKG1zZyk7XG59O1xudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XG4gIGZvciAodmFyIG5hbWUgaW4gYWxsKVxuICAgIF9fZGVmUHJvcCh0YXJnZXQsIG5hbWUsIHsgZ2V0OiBhbGxbbmFtZV0sIGVudW1lcmFibGU6IHRydWUgfSk7XG59O1xudmFyIF9fY29weVByb3BzID0gKHRvLCBmcm9tLCBleGNlcHQsIGRlc2MpID0+IHtcbiAgaWYgKGZyb20gJiYgdHlwZW9mIGZyb20gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGZyb20gPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGZvciAobGV0IGtleSBvZiBfX2dldE93blByb3BOYW1lcyhmcm9tKSlcbiAgICAgIGlmICghX19oYXNPd25Qcm9wLmNhbGwodG8sIGtleSkgJiYga2V5ICE9PSBleGNlcHQpXG4gICAgICAgIF9fZGVmUHJvcCh0bywga2V5LCB7IGdldDogKCkgPT4gZnJvbVtrZXldLCBlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZSB9KTtcbiAgfVxuICByZXR1cm4gdG87XG59O1xudmFyIF9fcmVFeHBvcnQgPSAodGFyZ2V0LCBtb2QsIHNlY29uZFRhcmdldCkgPT4gKF9fY29weVByb3BzKHRhcmdldCwgbW9kLCBcImRlZmF1bHRcIiksIHNlY29uZFRhcmdldCAmJiBfX2NvcHlQcm9wcyhzZWNvbmRUYXJnZXQsIG1vZCwgXCJkZWZhdWx0XCIpKTtcbnZhciBfX2FjY2Vzc0NoZWNrID0gKG9iaiwgbWVtYmVyLCBtc2cpID0+IG1lbWJlci5oYXMob2JqKSB8fCBfX3R5cGVFcnJvcihcIkNhbm5vdCBcIiArIG1zZyk7XG52YXIgX19wcml2YXRlR2V0ID0gKG9iaiwgbWVtYmVyLCBnZXR0ZXIpID0+IChfX2FjY2Vzc0NoZWNrKG9iaiwgbWVtYmVyLCBcInJlYWQgZnJvbSBwcml2YXRlIGZpZWxkXCIpLCBnZXR0ZXIgPyBnZXR0ZXIuY2FsbChvYmopIDogbWVtYmVyLmdldChvYmopKTtcbnZhciBfX3ByaXZhdGVBZGQgPSAob2JqLCBtZW1iZXIsIHZhbHVlKSA9PiBtZW1iZXIuaGFzKG9iaikgPyBfX3R5cGVFcnJvcihcIkNhbm5vdCBhZGQgdGhlIHNhbWUgcHJpdmF0ZSBtZW1iZXIgbW9yZSB0aGFuIG9uY2VcIikgOiBtZW1iZXIgaW5zdGFuY2VvZiBXZWFrU2V0ID8gbWVtYmVyLmFkZChvYmopIDogbWVtYmVyLnNldChvYmosIHZhbHVlKTtcbnZhciBfX3ByaXZhdGVTZXQgPSAob2JqLCBtZW1iZXIsIHZhbHVlLCBzZXR0ZXIpID0+IChfX2FjY2Vzc0NoZWNrKG9iaiwgbWVtYmVyLCBcIndyaXRlIHRvIHByaXZhdGUgZmllbGRcIiksIHNldHRlciA/IHNldHRlci5jYWxsKG9iaiwgdmFsdWUpIDogbWVtYmVyLnNldChvYmosIHZhbHVlKSwgdmFsdWUpO1xudmFyIF9fcHJpdmF0ZU1ldGhvZCA9IChvYmosIG1lbWJlciwgbWV0aG9kKSA9PiAoX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJhY2Nlc3MgcHJpdmF0ZSBtZXRob2RcIiksIG1ldGhvZCk7XG5cbmV4cG9ydCB7XG4gIF9fZXhwb3J0LFxuICBfX3JlRXhwb3J0LFxuICBfX3ByaXZhdGVHZXQsXG4gIF9fcHJpdmF0ZUFkZCxcbiAgX19wcml2YXRlU2V0LFxuICBfX3ByaXZhdGVNZXRob2Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay03RUxUNzU1US5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-CFXQSUF6.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-CFXQSUF6.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyFunctionToObj: function() { return /* binding */ applyFunctionToObj; },\n/* harmony export */   filterProps: function() { return /* binding */ filterProps; },\n/* harmony export */   removeUndefined: function() { return /* binding */ removeUndefined; },\n/* harmony export */   without: function() { return /* binding */ without; }\n/* harmony export */ });\n// src/object.ts\nvar without = (obj, ...props) => {\n  const copy = { ...obj };\n  for (const prop of props) {\n    delete copy[prop];\n  }\n  return copy;\n};\nvar removeUndefined = (obj) => {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if (value !== void 0 && value !== null) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n};\nvar applyFunctionToObj = (obj, fn) => {\n  const result = {};\n  for (const key in obj) {\n    result[key] = fn(obj[key], key);\n  }\n  return result;\n};\nvar filterProps = (obj, filter) => {\n  const result = {};\n  for (const key in obj) {\n    if (obj[key] && filter(obj[key])) {\n      result[key] = obj[key];\n    }\n  }\n  return result;\n};\n\n\n//# sourceMappingURL=chunk-CFXQSUF6.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstQ0ZYUVNVRjYubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLElBQUk7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQU9FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1DRlhRU1VGNi5tanM/NTU4NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvb2JqZWN0LnRzXG52YXIgd2l0aG91dCA9IChvYmosIC4uLnByb3BzKSA9PiB7XG4gIGNvbnN0IGNvcHkgPSB7IC4uLm9iaiB9O1xuICBmb3IgKGNvbnN0IHByb3Agb2YgcHJvcHMpIHtcbiAgICBkZWxldGUgY29weVtwcm9wXTtcbiAgfVxuICByZXR1cm4gY29weTtcbn07XG52YXIgcmVtb3ZlVW5kZWZpbmVkID0gKG9iaikgPT4ge1xuICByZXR1cm4gT2JqZWN0LmVudHJpZXMob2JqKS5yZWR1Y2UoKGFjYywgW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgaWYgKHZhbHVlICE9PSB2b2lkIDAgJiYgdmFsdWUgIT09IG51bGwpIHtcbiAgICAgIGFjY1trZXldID0gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbn07XG52YXIgYXBwbHlGdW5jdGlvblRvT2JqID0gKG9iaiwgZm4pID0+IHtcbiAgY29uc3QgcmVzdWx0ID0ge307XG4gIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgIHJlc3VsdFtrZXldID0gZm4ob2JqW2tleV0sIGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgZmlsdGVyUHJvcHMgPSAob2JqLCBmaWx0ZXIpID0+IHtcbiAgY29uc3QgcmVzdWx0ID0ge307XG4gIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgIGlmIChvYmpba2V5XSAmJiBmaWx0ZXIob2JqW2tleV0pKSB7XG4gICAgICByZXN1bHRba2V5XSA9IG9ialtrZXldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuZXhwb3J0IHtcbiAgd2l0aG91dCxcbiAgcmVtb3ZlVW5kZWZpbmVkLFxuICBhcHBseUZ1bmN0aW9uVG9PYmosXG4gIGZpbHRlclByb3BzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstQ0ZYUVNVRjYubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-CFXQSUF6.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: function() { return /* binding */ logger; }\n/* harmony export */ });\n// src/logger.ts\nvar loggedMessages = /* @__PURE__ */ new Set();\nvar logger = {\n  /**\n   * A custom logger that ensures messages are logged only once.\n   * Reduces noise and duplicated messages when logs are in a hot codepath.\n   */\n  warnOnce: (msg) => {\n    if (loggedMessages.has(msg)) {\n      return;\n    }\n    loggedMessages.add(msg);\n    console.warn(msg);\n  },\n  logOnce: (msg) => {\n    if (loggedMessages.has(msg)) {\n      return;\n    }\n    console.log(msg);\n    loggedMessages.add(msg);\n  }\n};\n\n\n//# sourceMappingURL=chunk-CYDR2ZSA.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstQ1lEUjJaU0EubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1DWURSMlpTQS5tanM/YTI5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbG9nZ2VyLnRzXG52YXIgbG9nZ2VkTWVzc2FnZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xudmFyIGxvZ2dlciA9IHtcbiAgLyoqXG4gICAqIEEgY3VzdG9tIGxvZ2dlciB0aGF0IGVuc3VyZXMgbWVzc2FnZXMgYXJlIGxvZ2dlZCBvbmx5IG9uY2UuXG4gICAqIFJlZHVjZXMgbm9pc2UgYW5kIGR1cGxpY2F0ZWQgbWVzc2FnZXMgd2hlbiBsb2dzIGFyZSBpbiBhIGhvdCBjb2RlcGF0aC5cbiAgICovXG4gIHdhcm5PbmNlOiAobXNnKSA9PiB7XG4gICAgaWYgKGxvZ2dlZE1lc3NhZ2VzLmhhcyhtc2cpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxvZ2dlZE1lc3NhZ2VzLmFkZChtc2cpO1xuICAgIGNvbnNvbGUud2Fybihtc2cpO1xuICB9LFxuICBsb2dPbmNlOiAobXNnKSA9PiB7XG4gICAgaWYgKGxvZ2dlZE1lc3NhZ2VzLmhhcyhtc2cpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnNvbGUubG9nKG1zZyk7XG4gICAgbG9nZ2VkTWVzc2FnZXMuYWRkKG1zZyk7XG4gIH1cbn07XG5cbmV4cG9ydCB7XG4gIGxvZ2dlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUNZRFIyWlNBLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-DSMUR7RM.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-DSMUR7RM.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadScript: function() { return /* binding */ loadScript; }\n/* harmony export */ });\n// src/loadScript.ts\nvar NO_DOCUMENT_ERROR = \"loadScript cannot be called when document does not exist\";\nvar NO_SRC_ERROR = \"loadScript cannot be called without a src\";\nasync function loadScript(src = \"\", opts) {\n  const { async, defer, beforeLoad, crossOrigin, nonce } = opts || {};\n  return new Promise((resolve, reject) => {\n    if (!src) {\n      reject(NO_SRC_ERROR);\n    }\n    if (!document || !document.body) {\n      reject(NO_DOCUMENT_ERROR);\n    }\n    const script = document.createElement(\"script\");\n    crossOrigin && script.setAttribute(\"crossorigin\", crossOrigin);\n    script.async = async || false;\n    script.defer = defer || false;\n    script.addEventListener(\"load\", () => {\n      script.remove();\n      resolve(script);\n    });\n    script.addEventListener(\"error\", () => {\n      script.remove();\n      reject();\n    });\n    script.src = src;\n    script.nonce = nonce;\n    beforeLoad == null ? void 0 : beforeLoad(script);\n    document.body.appendChild(script);\n  });\n}\n\n\n//# sourceMappingURL=chunk-DSMUR7RM.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstRFNNVVI3Uk0ubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsK0NBQStDO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1EU01VUjdSTS5tanM/ZGI2MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbG9hZFNjcmlwdC50c1xudmFyIE5PX0RPQ1VNRU5UX0VSUk9SID0gXCJsb2FkU2NyaXB0IGNhbm5vdCBiZSBjYWxsZWQgd2hlbiBkb2N1bWVudCBkb2VzIG5vdCBleGlzdFwiO1xudmFyIE5PX1NSQ19FUlJPUiA9IFwibG9hZFNjcmlwdCBjYW5ub3QgYmUgY2FsbGVkIHdpdGhvdXQgYSBzcmNcIjtcbmFzeW5jIGZ1bmN0aW9uIGxvYWRTY3JpcHQoc3JjID0gXCJcIiwgb3B0cykge1xuICBjb25zdCB7IGFzeW5jLCBkZWZlciwgYmVmb3JlTG9hZCwgY3Jvc3NPcmlnaW4sIG5vbmNlIH0gPSBvcHRzIHx8IHt9O1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmICghc3JjKSB7XG4gICAgICByZWplY3QoTk9fU1JDX0VSUk9SKTtcbiAgICB9XG4gICAgaWYgKCFkb2N1bWVudCB8fCAhZG9jdW1lbnQuYm9keSkge1xuICAgICAgcmVqZWN0KE5PX0RPQ1VNRU5UX0VSUk9SKTtcbiAgICB9XG4gICAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcbiAgICBjcm9zc09yaWdpbiAmJiBzY3JpcHQuc2V0QXR0cmlidXRlKFwiY3Jvc3NvcmlnaW5cIiwgY3Jvc3NPcmlnaW4pO1xuICAgIHNjcmlwdC5hc3luYyA9IGFzeW5jIHx8IGZhbHNlO1xuICAgIHNjcmlwdC5kZWZlciA9IGRlZmVyIHx8IGZhbHNlO1xuICAgIHNjcmlwdC5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiB7XG4gICAgICBzY3JpcHQucmVtb3ZlKCk7XG4gICAgICByZXNvbHZlKHNjcmlwdCk7XG4gICAgfSk7XG4gICAgc2NyaXB0LmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLCAoKSA9PiB7XG4gICAgICBzY3JpcHQucmVtb3ZlKCk7XG4gICAgICByZWplY3QoKTtcbiAgICB9KTtcbiAgICBzY3JpcHQuc3JjID0gc3JjO1xuICAgIHNjcmlwdC5ub25jZSA9IG5vbmNlO1xuICAgIGJlZm9yZUxvYWQgPT0gbnVsbCA/IHZvaWQgMCA6IGJlZm9yZUxvYWQoc2NyaXB0KTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gIH0pO1xufVxuXG5leHBvcnQge1xuICBsb2FkU2NyaXB0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstRFNNVVI3Uk0ubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-DSMUR7RM.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-FSKKI4LG.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-FSKKI4LG.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addYears: function() { return /* binding */ addYears; },\n/* harmony export */   dateTo12HourTime: function() { return /* binding */ dateTo12HourTime; },\n/* harmony export */   differenceInCalendarDays: function() { return /* binding */ differenceInCalendarDays; },\n/* harmony export */   formatRelative: function() { return /* binding */ formatRelative; },\n/* harmony export */   normalizeDate: function() { return /* binding */ normalizeDate; }\n/* harmony export */ });\n// src/date.ts\nvar MILLISECONDS_IN_DAY = 864e5;\nfunction dateTo12HourTime(date) {\n  if (!date) {\n    return \"\";\n  }\n  return date.toLocaleString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"numeric\",\n    hour12: true\n  });\n}\nfunction differenceInCalendarDays(a, b, { absolute = true } = {}) {\n  if (!a || !b) {\n    return 0;\n  }\n  const utcA = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utcB = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n  const diff = Math.floor((utcB - utcA) / MILLISECONDS_IN_DAY);\n  return absolute ? Math.abs(diff) : diff;\n}\nfunction normalizeDate(d) {\n  try {\n    return new Date(d || /* @__PURE__ */ new Date());\n  } catch (e) {\n    return /* @__PURE__ */ new Date();\n  }\n}\nfunction formatRelative(props) {\n  const { date, relativeTo } = props;\n  if (!date || !relativeTo) {\n    return null;\n  }\n  const a = normalizeDate(date);\n  const b = normalizeDate(relativeTo);\n  const differenceInDays = differenceInCalendarDays(b, a, { absolute: false });\n  if (differenceInDays < -6) {\n    return { relativeDateCase: \"other\", date: a };\n  }\n  if (differenceInDays < -1) {\n    return { relativeDateCase: \"previous6Days\", date: a };\n  }\n  if (differenceInDays === -1) {\n    return { relativeDateCase: \"lastDay\", date: a };\n  }\n  if (differenceInDays === 0) {\n    return { relativeDateCase: \"sameDay\", date: a };\n  }\n  if (differenceInDays === 1) {\n    return { relativeDateCase: \"nextDay\", date: a };\n  }\n  if (differenceInDays < 7) {\n    return { relativeDateCase: \"next6Days\", date: a };\n  }\n  return { relativeDateCase: \"other\", date: a };\n}\nfunction addYears(initialDate, yearsToAdd) {\n  const date = normalizeDate(initialDate);\n  date.setFullYear(date.getFullYear() + yearsToAdd);\n  return date;\n}\n\n\n//# sourceMappingURL=chunk-FSKKI4LG.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstRlNLS0k0TEcubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSwwQ0FBMEMsa0JBQWtCLElBQUk7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsbUJBQW1CO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsaUJBQWlCO0FBQzdFO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBUUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUZTS0tJNExHLm1qcz8wYjQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9kYXRlLnRzXG52YXIgTUlMTElTRUNPTkRTX0lOX0RBWSA9IDg2NGU1O1xuZnVuY3Rpb24gZGF0ZVRvMTJIb3VyVGltZShkYXRlKSB7XG4gIGlmICghZGF0ZSkge1xuICAgIHJldHVybiBcIlwiO1xuICB9XG4gIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKFwiZW4tVVNcIiwge1xuICAgIGhvdXI6IFwiMi1kaWdpdFwiLFxuICAgIG1pbnV0ZTogXCJudW1lcmljXCIsXG4gICAgaG91cjEyOiB0cnVlXG4gIH0pO1xufVxuZnVuY3Rpb24gZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKGEsIGIsIHsgYWJzb2x1dGUgPSB0cnVlIH0gPSB7fSkge1xuICBpZiAoIWEgfHwgIWIpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuICBjb25zdCB1dGNBID0gRGF0ZS5VVEMoYS5nZXRGdWxsWWVhcigpLCBhLmdldE1vbnRoKCksIGEuZ2V0RGF0ZSgpKTtcbiAgY29uc3QgdXRjQiA9IERhdGUuVVRDKGIuZ2V0RnVsbFllYXIoKSwgYi5nZXRNb250aCgpLCBiLmdldERhdGUoKSk7XG4gIGNvbnN0IGRpZmYgPSBNYXRoLmZsb29yKCh1dGNCIC0gdXRjQSkgLyBNSUxMSVNFQ09ORFNfSU5fREFZKTtcbiAgcmV0dXJuIGFic29sdXRlID8gTWF0aC5hYnMoZGlmZikgOiBkaWZmO1xufVxuZnVuY3Rpb24gbm9ybWFsaXplRGF0ZShkKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKGQgfHwgLyogQF9fUFVSRV9fICovIG5ldyBEYXRlKCkpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBuZXcgRGF0ZSgpO1xuICB9XG59XG5mdW5jdGlvbiBmb3JtYXRSZWxhdGl2ZShwcm9wcykge1xuICBjb25zdCB7IGRhdGUsIHJlbGF0aXZlVG8gfSA9IHByb3BzO1xuICBpZiAoIWRhdGUgfHwgIXJlbGF0aXZlVG8pIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCBhID0gbm9ybWFsaXplRGF0ZShkYXRlKTtcbiAgY29uc3QgYiA9IG5vcm1hbGl6ZURhdGUocmVsYXRpdmVUbyk7XG4gIGNvbnN0IGRpZmZlcmVuY2VJbkRheXMgPSBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMoYiwgYSwgeyBhYnNvbHV0ZTogZmFsc2UgfSk7XG4gIGlmIChkaWZmZXJlbmNlSW5EYXlzIDwgLTYpIHtcbiAgICByZXR1cm4geyByZWxhdGl2ZURhdGVDYXNlOiBcIm90aGVyXCIsIGRhdGU6IGEgfTtcbiAgfVxuICBpZiAoZGlmZmVyZW5jZUluRGF5cyA8IC0xKSB7XG4gICAgcmV0dXJuIHsgcmVsYXRpdmVEYXRlQ2FzZTogXCJwcmV2aW91czZEYXlzXCIsIGRhdGU6IGEgfTtcbiAgfVxuICBpZiAoZGlmZmVyZW5jZUluRGF5cyA9PT0gLTEpIHtcbiAgICByZXR1cm4geyByZWxhdGl2ZURhdGVDYXNlOiBcImxhc3REYXlcIiwgZGF0ZTogYSB9O1xuICB9XG4gIGlmIChkaWZmZXJlbmNlSW5EYXlzID09PSAwKSB7XG4gICAgcmV0dXJuIHsgcmVsYXRpdmVEYXRlQ2FzZTogXCJzYW1lRGF5XCIsIGRhdGU6IGEgfTtcbiAgfVxuICBpZiAoZGlmZmVyZW5jZUluRGF5cyA9PT0gMSkge1xuICAgIHJldHVybiB7IHJlbGF0aXZlRGF0ZUNhc2U6IFwibmV4dERheVwiLCBkYXRlOiBhIH07XG4gIH1cbiAgaWYgKGRpZmZlcmVuY2VJbkRheXMgPCA3KSB7XG4gICAgcmV0dXJuIHsgcmVsYXRpdmVEYXRlQ2FzZTogXCJuZXh0NkRheXNcIiwgZGF0ZTogYSB9O1xuICB9XG4gIHJldHVybiB7IHJlbGF0aXZlRGF0ZUNhc2U6IFwib3RoZXJcIiwgZGF0ZTogYSB9O1xufVxuZnVuY3Rpb24gYWRkWWVhcnMoaW5pdGlhbERhdGUsIHllYXJzVG9BZGQpIHtcbiAgY29uc3QgZGF0ZSA9IG5vcm1hbGl6ZURhdGUoaW5pdGlhbERhdGUpO1xuICBkYXRlLnNldEZ1bGxZZWFyKGRhdGUuZ2V0RnVsbFllYXIoKSArIHllYXJzVG9BZGQpO1xuICByZXR1cm4gZGF0ZTtcbn1cblxuZXhwb3J0IHtcbiAgZGF0ZVRvMTJIb3VyVGltZSxcbiAgZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzLFxuICBub3JtYWxpemVEYXRlLFxuICBmb3JtYXRSZWxhdGl2ZSxcbiAgYWRkWWVhcnNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1GU0tLSTRMRy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-FSKKI4LG.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURRENT_DEV_INSTANCE_SUFFIXES: function() { return /* binding */ CURRENT_DEV_INSTANCE_SUFFIXES; },\n/* harmony export */   DEV_OR_STAGING_SUFFIXES: function() { return /* binding */ DEV_OR_STAGING_SUFFIXES; },\n/* harmony export */   LEGACY_DEV_INSTANCE_SUFFIXES: function() { return /* binding */ LEGACY_DEV_INSTANCE_SUFFIXES; },\n/* harmony export */   LOCAL_API_URL: function() { return /* binding */ LOCAL_API_URL; },\n/* harmony export */   LOCAL_ENV_SUFFIXES: function() { return /* binding */ LOCAL_ENV_SUFFIXES; },\n/* harmony export */   PROD_API_URL: function() { return /* binding */ PROD_API_URL; },\n/* harmony export */   STAGING_API_URL: function() { return /* binding */ STAGING_API_URL; },\n/* harmony export */   STAGING_ENV_SUFFIXES: function() { return /* binding */ STAGING_ENV_SUFFIXES; },\n/* harmony export */   iconImageUrl: function() { return /* binding */ iconImageUrl; }\n/* harmony export */ });\n// src/constants.ts\nvar LEGACY_DEV_INSTANCE_SUFFIXES = [\".lcl.dev\", \".lclstage.dev\", \".lclclerk.com\"];\nvar CURRENT_DEV_INSTANCE_SUFFIXES = [\".accounts.dev\", \".accountsstage.dev\", \".accounts.lclclerk.com\"];\nvar DEV_OR_STAGING_SUFFIXES = [\n  \".lcl.dev\",\n  \".stg.dev\",\n  \".lclstage.dev\",\n  \".stgstage.dev\",\n  \".dev.lclclerk.com\",\n  \".stg.lclclerk.com\",\n  \".accounts.lclclerk.com\",\n  \"accountsstage.dev\",\n  \"accounts.dev\"\n];\nvar LOCAL_ENV_SUFFIXES = [\".lcl.dev\", \"lclstage.dev\", \".lclclerk.com\", \".accounts.lclclerk.com\"];\nvar STAGING_ENV_SUFFIXES = [\".accountsstage.dev\"];\nvar LOCAL_API_URL = \"https://api.lclclerk.com\";\nvar STAGING_API_URL = \"https://api.clerkstage.dev\";\nvar PROD_API_URL = \"https://api.clerk.com\";\nfunction iconImageUrl(id, format = \"svg\") {\n  return `https://img.clerk.com/static/${id}.${format}`;\n}\n\n\n//# sourceMappingURL=chunk-I6MTSTOF.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSTZNVFNUT0YubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsR0FBRyxHQUFHLE9BQU87QUFDdEQ7O0FBWUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUk2TVRTVE9GLm1qcz8xYjM5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb25zdGFudHMudHNcbnZhciBMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTID0gW1wiLmxjbC5kZXZcIiwgXCIubGNsc3RhZ2UuZGV2XCIsIFwiLmxjbGNsZXJrLmNvbVwiXTtcbnZhciBDVVJSRU5UX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyA9IFtcIi5hY2NvdW50cy5kZXZcIiwgXCIuYWNjb3VudHNzdGFnZS5kZXZcIiwgXCIuYWNjb3VudHMubGNsY2xlcmsuY29tXCJdO1xudmFyIERFVl9PUl9TVEFHSU5HX1NVRkZJWEVTID0gW1xuICBcIi5sY2wuZGV2XCIsXG4gIFwiLnN0Zy5kZXZcIixcbiAgXCIubGNsc3RhZ2UuZGV2XCIsXG4gIFwiLnN0Z3N0YWdlLmRldlwiLFxuICBcIi5kZXYubGNsY2xlcmsuY29tXCIsXG4gIFwiLnN0Zy5sY2xjbGVyay5jb21cIixcbiAgXCIuYWNjb3VudHMubGNsY2xlcmsuY29tXCIsXG4gIFwiYWNjb3VudHNzdGFnZS5kZXZcIixcbiAgXCJhY2NvdW50cy5kZXZcIlxuXTtcbnZhciBMT0NBTF9FTlZfU1VGRklYRVMgPSBbXCIubGNsLmRldlwiLCBcImxjbHN0YWdlLmRldlwiLCBcIi5sY2xjbGVyay5jb21cIiwgXCIuYWNjb3VudHMubGNsY2xlcmsuY29tXCJdO1xudmFyIFNUQUdJTkdfRU5WX1NVRkZJWEVTID0gW1wiLmFjY291bnRzc3RhZ2UuZGV2XCJdO1xudmFyIExPQ0FMX0FQSV9VUkwgPSBcImh0dHBzOi8vYXBpLmxjbGNsZXJrLmNvbVwiO1xudmFyIFNUQUdJTkdfQVBJX1VSTCA9IFwiaHR0cHM6Ly9hcGkuY2xlcmtzdGFnZS5kZXZcIjtcbnZhciBQUk9EX0FQSV9VUkwgPSBcImh0dHBzOi8vYXBpLmNsZXJrLmNvbVwiO1xuZnVuY3Rpb24gaWNvbkltYWdlVXJsKGlkLCBmb3JtYXQgPSBcInN2Z1wiKSB7XG4gIHJldHVybiBgaHR0cHM6Ly9pbWcuY2xlcmsuY29tL3N0YXRpYy8ke2lkfS4ke2Zvcm1hdH1gO1xufVxuXG5leHBvcnQge1xuICBMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTLFxuICBDVVJSRU5UX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyxcbiAgREVWX09SX1NUQUdJTkdfU1VGRklYRVMsXG4gIExPQ0FMX0VOVl9TVUZGSVhFUyxcbiAgU1RBR0lOR19FTlZfU1VGRklYRVMsXG4gIExPQ0FMX0FQSV9VUkwsXG4gIFNUQUdJTkdfQVBJX1VSTCxcbiAgUFJPRF9BUElfVVJMLFxuICBpY29uSW1hZ2VVcmxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1JNk1UU1RPRi5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deprecated: function() { return /* binding */ deprecated; },\n/* harmony export */   deprecatedObjectProperty: function() { return /* binding */ deprecatedObjectProperty; },\n/* harmony export */   deprecatedProperty: function() { return /* binding */ deprecatedProperty; },\n/* harmony export */   isDevelopmentEnvironment: function() { return /* binding */ isDevelopmentEnvironment; },\n/* harmony export */   isProductionEnvironment: function() { return /* binding */ isProductionEnvironment; },\n/* harmony export */   isTestEnvironment: function() { return /* binding */ isTestEnvironment; }\n/* harmony export */ });\n// src/utils/runtimeEnvironment.ts\nvar isDevelopmentEnvironment = () => {\n  try {\n    return \"development\" === \"development\";\n  } catch (err) {\n  }\n  return false;\n};\nvar isTestEnvironment = () => {\n  try {\n    return \"development\" === \"test\";\n  } catch (err) {\n  }\n  return false;\n};\nvar isProductionEnvironment = () => {\n  try {\n    return \"development\" === \"production\";\n  } catch (err) {\n  }\n  return false;\n};\n\n// src/deprecated.ts\nvar displayedWarnings = /* @__PURE__ */ new Set();\nvar deprecated = (fnName, warning, key) => {\n  const hideWarning = isTestEnvironment() || isProductionEnvironment();\n  const messageId = key != null ? key : fnName;\n  if (displayedWarnings.has(messageId) || hideWarning) {\n    return;\n  }\n  displayedWarnings.add(messageId);\n  console.warn(\n    `Clerk - DEPRECATION WARNING: \"${fnName}\" is deprecated and will be removed in the next major release.\n${warning}`\n  );\n};\nvar deprecatedProperty = (cls, propName, warning, isStatic = false) => {\n  const target = isStatic ? cls : cls.prototype;\n  let value = target[propName];\n  Object.defineProperty(target, propName, {\n    get() {\n      deprecated(propName, warning, `${cls.name}:${propName}`);\n      return value;\n    },\n    set(v) {\n      value = v;\n    }\n  });\n};\nvar deprecatedObjectProperty = (obj, propName, warning, key) => {\n  let value = obj[propName];\n  Object.defineProperty(obj, propName, {\n    get() {\n      deprecated(propName, warning, key);\n      return value;\n    },\n    set(v) {\n      value = v;\n    }\n  });\n};\n\n\n//# sourceMappingURL=chunk-IC4FGZI3.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSUM0RkdaSTMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBb0I7QUFDL0IsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGFBQW9CO0FBQy9CLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxhQUFvQjtBQUMvQixJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLE9BQU87QUFDNUMsRUFBRSxRQUFRO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsU0FBUyxHQUFHLFNBQVM7QUFDNUQ7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFTRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSUM0RkdaSTMubWpzPzAyMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL3J1bnRpbWVFbnZpcm9ubWVudC50c1xudmFyIGlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudCA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIjtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufTtcbnZhciBpc1Rlc3RFbnZpcm9ubWVudCA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwidGVzdFwiO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xudmFyIGlzUHJvZHVjdGlvbkVudmlyb25tZW50ID0gKCkgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCI7XG4gIH0gY2F0Y2ggKGVycikge1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbi8vIHNyYy9kZXByZWNhdGVkLnRzXG52YXIgZGlzcGxheWVkV2FybmluZ3MgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xudmFyIGRlcHJlY2F0ZWQgPSAoZm5OYW1lLCB3YXJuaW5nLCBrZXkpID0+IHtcbiAgY29uc3QgaGlkZVdhcm5pbmcgPSBpc1Rlc3RFbnZpcm9ubWVudCgpIHx8IGlzUHJvZHVjdGlvbkVudmlyb25tZW50KCk7XG4gIGNvbnN0IG1lc3NhZ2VJZCA9IGtleSAhPSBudWxsID8ga2V5IDogZm5OYW1lO1xuICBpZiAoZGlzcGxheWVkV2FybmluZ3MuaGFzKG1lc3NhZ2VJZCkgfHwgaGlkZVdhcm5pbmcpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgZGlzcGxheWVkV2FybmluZ3MuYWRkKG1lc3NhZ2VJZCk7XG4gIGNvbnNvbGUud2FybihcbiAgICBgQ2xlcmsgLSBERVBSRUNBVElPTiBXQVJOSU5HOiBcIiR7Zm5OYW1lfVwiIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCBtYWpvciByZWxlYXNlLlxuJHt3YXJuaW5nfWBcbiAgKTtcbn07XG52YXIgZGVwcmVjYXRlZFByb3BlcnR5ID0gKGNscywgcHJvcE5hbWUsIHdhcm5pbmcsIGlzU3RhdGljID0gZmFsc2UpID0+IHtcbiAgY29uc3QgdGFyZ2V0ID0gaXNTdGF0aWMgPyBjbHMgOiBjbHMucHJvdG90eXBlO1xuICBsZXQgdmFsdWUgPSB0YXJnZXRbcHJvcE5hbWVdO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wTmFtZSwge1xuICAgIGdldCgpIHtcbiAgICAgIGRlcHJlY2F0ZWQocHJvcE5hbWUsIHdhcm5pbmcsIGAke2Nscy5uYW1lfToke3Byb3BOYW1lfWApO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0KHYpIHtcbiAgICAgIHZhbHVlID0gdjtcbiAgICB9XG4gIH0pO1xufTtcbnZhciBkZXByZWNhdGVkT2JqZWN0UHJvcGVydHkgPSAob2JqLCBwcm9wTmFtZSwgd2FybmluZywga2V5KSA9PiB7XG4gIGxldCB2YWx1ZSA9IG9ialtwcm9wTmFtZV07XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIHByb3BOYW1lLCB7XG4gICAgZ2V0KCkge1xuICAgICAgZGVwcmVjYXRlZChwcm9wTmFtZSwgd2FybmluZywga2V5KTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldCh2KSB7XG4gICAgICB2YWx1ZSA9IHY7XG4gICAgfVxuICB9KTtcbn07XG5cbmV4cG9ydCB7XG4gIGlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudCxcbiAgaXNUZXN0RW52aXJvbm1lbnQsXG4gIGlzUHJvZHVjdGlvbkVudmlyb25tZW50LFxuICBkZXByZWNhdGVkLFxuICBkZXByZWNhdGVkUHJvcGVydHksXG4gIGRlcHJlY2F0ZWRPYmplY3RQcm9wZXJ0eVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUlDNEZHWkkzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEV_BROWSER_JWT_HEADER: function() { return /* binding */ DEV_BROWSER_JWT_HEADER; },\n/* harmony export */   DEV_BROWSER_JWT_KEY: function() { return /* binding */ DEV_BROWSER_JWT_KEY; },\n/* harmony export */   extractDevBrowserJWTFromURL: function() { return /* binding */ extractDevBrowserJWTFromURL; },\n/* harmony export */   setDevBrowserJWTInURL: function() { return /* binding */ setDevBrowserJWTInURL; }\n/* harmony export */ });\n// src/devBrowser.ts\nvar DEV_BROWSER_JWT_KEY = \"__clerk_db_jwt\";\nvar DEV_BROWSER_JWT_HEADER = \"Clerk-Db-Jwt\";\nfunction setDevBrowserJWTInURL(url, jwt) {\n  const resultURL = new URL(url);\n  const jwtFromSearch = resultURL.searchParams.get(DEV_BROWSER_JWT_KEY);\n  resultURL.searchParams.delete(DEV_BROWSER_JWT_KEY);\n  const jwtToSet = jwtFromSearch || jwt;\n  if (jwtToSet) {\n    resultURL.searchParams.set(DEV_BROWSER_JWT_KEY, jwtToSet);\n  }\n  return resultURL;\n}\nfunction extractDevBrowserJWTFromURL(url) {\n  const jwt = readDevBrowserJwtFromSearchParams(url);\n  const cleanUrl = removeDevBrowserJwt(url);\n  if (cleanUrl.href !== url.href && typeof globalThis.history !== \"undefined\") {\n    globalThis.history.replaceState(null, \"\", removeDevBrowserJwt(url));\n  }\n  return jwt;\n}\nvar readDevBrowserJwtFromSearchParams = (url) => {\n  return url.searchParams.get(DEV_BROWSER_JWT_KEY) || \"\";\n};\nvar removeDevBrowserJwt = (url) => {\n  return removeDevBrowserJwtFromURLSearchParams(removeLegacyDevBrowserJwt(url));\n};\nvar removeDevBrowserJwtFromURLSearchParams = (_url) => {\n  const url = new URL(_url);\n  url.searchParams.delete(DEV_BROWSER_JWT_KEY);\n  return url;\n};\nvar removeLegacyDevBrowserJwt = (_url) => {\n  const DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\\[(.*)\\]/;\n  const DEV_BROWSER_JWT_LEGACY_KEY = \"__dev_session\";\n  const url = new URL(_url);\n  url.searchParams.delete(DEV_BROWSER_JWT_LEGACY_KEY);\n  url.hash = decodeURI(url.hash).replace(DEV_BROWSER_JWT_MARKER_REGEXP, \"\");\n  if (url.href.endsWith(\"#\")) {\n    url.hash = \"\";\n  }\n  return url;\n};\n\n\n//# sourceMappingURL=chunk-K64INQ4C.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSzY0SU5RNEMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFPRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSzY0SU5RNEMubWpzP2I0OWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2RldkJyb3dzZXIudHNcbnZhciBERVZfQlJPV1NFUl9KV1RfS0VZID0gXCJfX2NsZXJrX2RiX2p3dFwiO1xudmFyIERFVl9CUk9XU0VSX0pXVF9IRUFERVIgPSBcIkNsZXJrLURiLUp3dFwiO1xuZnVuY3Rpb24gc2V0RGV2QnJvd3NlckpXVEluVVJMKHVybCwgand0KSB7XG4gIGNvbnN0IHJlc3VsdFVSTCA9IG5ldyBVUkwodXJsKTtcbiAgY29uc3Qgand0RnJvbVNlYXJjaCA9IHJlc3VsdFVSTC5zZWFyY2hQYXJhbXMuZ2V0KERFVl9CUk9XU0VSX0pXVF9LRVkpO1xuICByZXN1bHRVUkwuc2VhcmNoUGFyYW1zLmRlbGV0ZShERVZfQlJPV1NFUl9KV1RfS0VZKTtcbiAgY29uc3Qgand0VG9TZXQgPSBqd3RGcm9tU2VhcmNoIHx8IGp3dDtcbiAgaWYgKGp3dFRvU2V0KSB7XG4gICAgcmVzdWx0VVJMLnNlYXJjaFBhcmFtcy5zZXQoREVWX0JST1dTRVJfSldUX0tFWSwgand0VG9TZXQpO1xuICB9XG4gIHJldHVybiByZXN1bHRVUkw7XG59XG5mdW5jdGlvbiBleHRyYWN0RGV2QnJvd3NlckpXVEZyb21VUkwodXJsKSB7XG4gIGNvbnN0IGp3dCA9IHJlYWREZXZCcm93c2VySnd0RnJvbVNlYXJjaFBhcmFtcyh1cmwpO1xuICBjb25zdCBjbGVhblVybCA9IHJlbW92ZURldkJyb3dzZXJKd3QodXJsKTtcbiAgaWYgKGNsZWFuVXJsLmhyZWYgIT09IHVybC5ocmVmICYmIHR5cGVvZiBnbG9iYWxUaGlzLmhpc3RvcnkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBnbG9iYWxUaGlzLmhpc3RvcnkucmVwbGFjZVN0YXRlKG51bGwsIFwiXCIsIHJlbW92ZURldkJyb3dzZXJKd3QodXJsKSk7XG4gIH1cbiAgcmV0dXJuIGp3dDtcbn1cbnZhciByZWFkRGV2QnJvd3Nlckp3dEZyb21TZWFyY2hQYXJhbXMgPSAodXJsKSA9PiB7XG4gIHJldHVybiB1cmwuc2VhcmNoUGFyYW1zLmdldChERVZfQlJPV1NFUl9KV1RfS0VZKSB8fCBcIlwiO1xufTtcbnZhciByZW1vdmVEZXZCcm93c2VySnd0ID0gKHVybCkgPT4ge1xuICByZXR1cm4gcmVtb3ZlRGV2QnJvd3Nlckp3dEZyb21VUkxTZWFyY2hQYXJhbXMocmVtb3ZlTGVnYWN5RGV2QnJvd3Nlckp3dCh1cmwpKTtcbn07XG52YXIgcmVtb3ZlRGV2QnJvd3Nlckp3dEZyb21VUkxTZWFyY2hQYXJhbXMgPSAoX3VybCkgPT4ge1xuICBjb25zdCB1cmwgPSBuZXcgVVJMKF91cmwpO1xuICB1cmwuc2VhcmNoUGFyYW1zLmRlbGV0ZShERVZfQlJPV1NFUl9KV1RfS0VZKTtcbiAgcmV0dXJuIHVybDtcbn07XG52YXIgcmVtb3ZlTGVnYWN5RGV2QnJvd3Nlckp3dCA9IChfdXJsKSA9PiB7XG4gIGNvbnN0IERFVl9CUk9XU0VSX0pXVF9NQVJLRVJfUkVHRVhQID0gL19fY2xlcmtfZGJfand0XFxbKC4qKVxcXS87XG4gIGNvbnN0IERFVl9CUk9XU0VSX0pXVF9MRUdBQ1lfS0VZID0gXCJfX2Rldl9zZXNzaW9uXCI7XG4gIGNvbnN0IHVybCA9IG5ldyBVUkwoX3VybCk7XG4gIHVybC5zZWFyY2hQYXJhbXMuZGVsZXRlKERFVl9CUk9XU0VSX0pXVF9MRUdBQ1lfS0VZKTtcbiAgdXJsLmhhc2ggPSBkZWNvZGVVUkkodXJsLmhhc2gpLnJlcGxhY2UoREVWX0JST1dTRVJfSldUX01BUktFUl9SRUdFWFAsIFwiXCIpO1xuICBpZiAodXJsLmhyZWYuZW5kc1dpdGgoXCIjXCIpKSB7XG4gICAgdXJsLmhhc2ggPSBcIlwiO1xuICB9XG4gIHJldHVybiB1cmw7XG59O1xuXG5leHBvcnQge1xuICBERVZfQlJPV1NFUl9KV1RfS0VZLFxuICBERVZfQlJPV1NFUl9KV1RfSEVBREVSLFxuICBzZXREZXZCcm93c2VySldUSW5VUkwsXG4gIGV4dHJhY3REZXZCcm93c2VySldURnJvbVVSTFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUs2NElOUTRDLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicBtoa: function() { return /* binding */ isomorphicBtoa; }\n/* harmony export */ });\n// src/isomorphicBtoa.ts\nvar isomorphicBtoa = (data) => {\n  if (typeof btoa !== \"undefined\" && typeof btoa === \"function\") {\n    return btoa(data);\n  } else if (typeof global !== \"undefined\" && global.Buffer) {\n    return new global.Buffer(data).toString(\"base64\");\n  }\n  return data;\n};\n\n\n//# sourceMappingURL=chunk-KOH7GTJO.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstS09IN0dUSk8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstS09IN0dUSk8ubWpzP2I1MTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2lzb21vcnBoaWNCdG9hLnRzXG52YXIgaXNvbW9ycGhpY0J0b2EgPSAoZGF0YSkgPT4ge1xuICBpZiAodHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJldHVybiBidG9hKGRhdGEpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLkJ1ZmZlcikge1xuICAgIHJldHVybiBuZXcgZ2xvYmFsLkJ1ZmZlcihkYXRhKS50b1N0cmluZyhcImJhc2U2NFwiKTtcbiAgfVxuICByZXR1cm4gZGF0YTtcbn07XG5cbmV4cG9ydCB7XG4gIGlzb21vcnBoaWNCdG9hXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstS09IN0dUSk8ubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-L2BNNARM.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-L2BNNARM.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPublishableKey: function() { return /* binding */ buildPublishableKey; },\n/* harmony export */   createDevOrStagingUrlCache: function() { return /* binding */ createDevOrStagingUrlCache; },\n/* harmony export */   getCookieSuffix: function() { return /* binding */ getCookieSuffix; },\n/* harmony export */   getSuffixedCookieName: function() { return /* binding */ getSuffixedCookieName; },\n/* harmony export */   isDevelopmentFromPublishableKey: function() { return /* binding */ isDevelopmentFromPublishableKey; },\n/* harmony export */   isDevelopmentFromSecretKey: function() { return /* binding */ isDevelopmentFromSecretKey; },\n/* harmony export */   isProductionFromPublishableKey: function() { return /* binding */ isProductionFromPublishableKey; },\n/* harmony export */   isProductionFromSecretKey: function() { return /* binding */ isProductionFromSecretKey; },\n/* harmony export */   isPublishableKey: function() { return /* binding */ isPublishableKey; },\n/* harmony export */   parsePublishableKey: function() { return /* binding */ parsePublishableKey; }\n/* harmony export */ });\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n\n\n\n\n// src/keys.ts\nvar PUBLISHABLE_KEY_LIVE_PREFIX = \"pk_live_\";\nvar PUBLISHABLE_KEY_TEST_PREFIX = \"pk_test_\";\nvar PUBLISHABLE_FRONTEND_API_DEV_REGEX = /^(([a-z]+)-){2}([0-9]{1,2})\\.clerk\\.accounts([a-z.]*)(dev|com)$/i;\nfunction buildPublishableKey(frontendApi) {\n  const isDevKey = PUBLISHABLE_FRONTEND_API_DEV_REGEX.test(frontendApi) || frontendApi.startsWith(\"clerk.\") && _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__.LEGACY_DEV_INSTANCE_SUFFIXES.some((s) => frontendApi.endsWith(s));\n  const keyPrefix = isDevKey ? PUBLISHABLE_KEY_TEST_PREFIX : PUBLISHABLE_KEY_LIVE_PREFIX;\n  return `${keyPrefix}${(0,_chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__.isomorphicBtoa)(`${frontendApi}$`)}`;\n}\nfunction parsePublishableKey(key, options = {}) {\n  key = key || \"\";\n  if (!key || !isPublishableKey(key)) {\n    if (options.fatal) {\n      throw new Error(\"Publishable key not valid.\");\n    }\n    return null;\n  }\n  const instanceType = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) ? \"production\" : \"development\";\n  let frontendApi = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2]);\n  frontendApi = frontendApi.slice(0, -1);\n  if (options.proxyUrl) {\n    frontendApi = options.proxyUrl;\n  } else if (instanceType !== \"development\" && options.domain) {\n    frontendApi = `clerk.${options.domain}`;\n  }\n  return {\n    instanceType,\n    frontendApi\n  };\n}\nfunction isPublishableKey(key) {\n  key = key || \"\";\n  const hasValidPrefix = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) || key.startsWith(PUBLISHABLE_KEY_TEST_PREFIX);\n  const hasValidFrontendApiPostfix = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2] || \"\").endsWith(\"$\");\n  return hasValidPrefix && hasValidFrontendApiPostfix;\n}\nfunction createDevOrStagingUrlCache() {\n  const devOrStagingUrlCache = /* @__PURE__ */ new Map();\n  return {\n    isDevOrStagingUrl: (url) => {\n      if (!url) {\n        return false;\n      }\n      const hostname = typeof url === \"string\" ? url : url.hostname;\n      let res = devOrStagingUrlCache.get(hostname);\n      if (res === void 0) {\n        res = _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__.DEV_OR_STAGING_SUFFIXES.some((s) => hostname.endsWith(s));\n        devOrStagingUrlCache.set(hostname, res);\n      }\n      return res;\n    }\n  };\n}\nfunction isDevelopmentFromPublishableKey(apiKey) {\n  return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"pk_test_\");\n}\nfunction isProductionFromPublishableKey(apiKey) {\n  return apiKey.startsWith(\"live_\") || apiKey.startsWith(\"pk_live_\");\n}\nfunction isDevelopmentFromSecretKey(apiKey) {\n  return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"sk_test_\");\n}\nfunction isProductionFromSecretKey(apiKey) {\n  return apiKey.startsWith(\"live_\") || apiKey.startsWith(\"sk_live_\");\n}\nasync function getCookieSuffix(publishableKey, subtle = globalThis.crypto.subtle) {\n  const data = new TextEncoder().encode(publishableKey);\n  const digest = await subtle.digest(\"sha-1\", data);\n  const stringDigest = String.fromCharCode(...new Uint8Array(digest));\n  return (0,_chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__.isomorphicBtoa)(stringDigest).replace(/\\+/gi, \"-\").replace(/\\//gi, \"_\").substring(0, 8);\n}\nvar getSuffixedCookieName = (cookieName, cookieSuffix) => {\n  return `${cookieName}_${cookieSuffix}`;\n};\n\n\n//# sourceMappingURL=chunk-L2BNNARM.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstTDJCTk5BUk0ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFOEI7QUFHQTtBQUlBOztBQUU5QjtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsRUFBRSxPQUFPLElBQUk7QUFDcEU7QUFDQSwrR0FBK0csNkVBQTRCO0FBQzNJO0FBQ0EsWUFBWSxVQUFVLEVBQUUsbUVBQWMsSUFBSSxZQUFZLElBQUk7QUFDMUQ7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtRUFBYztBQUNsQztBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osMkJBQTJCLGVBQWU7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLG1FQUFjO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsd0VBQXVCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxtRUFBYztBQUN2QjtBQUNBO0FBQ0EsWUFBWSxXQUFXLEdBQUcsYUFBYTtBQUN2Qzs7QUFhRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstTDJCTk5BUk0ubWpzP2I3NmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgaXNvbW9ycGhpY0F0b2Jcbn0gZnJvbSBcIi4vY2h1bmstVEVUR1RFSTIubWpzXCI7XG5pbXBvcnQge1xuICBpc29tb3JwaGljQnRvYVxufSBmcm9tIFwiLi9jaHVuay1LT0g3R1RKTy5tanNcIjtcbmltcG9ydCB7XG4gIERFVl9PUl9TVEFHSU5HX1NVRkZJWEVTLFxuICBMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTXG59IGZyb20gXCIuL2NodW5rLUk2TVRTVE9GLm1qc1wiO1xuXG4vLyBzcmMva2V5cy50c1xudmFyIFBVQkxJU0hBQkxFX0tFWV9MSVZFX1BSRUZJWCA9IFwicGtfbGl2ZV9cIjtcbnZhciBQVUJMSVNIQUJMRV9LRVlfVEVTVF9QUkVGSVggPSBcInBrX3Rlc3RfXCI7XG52YXIgUFVCTElTSEFCTEVfRlJPTlRFTkRfQVBJX0RFVl9SRUdFWCA9IC9eKChbYS16XSspLSl7Mn0oWzAtOV17MSwyfSlcXC5jbGVya1xcLmFjY291bnRzKFthLXouXSopKGRldnxjb20pJC9pO1xuZnVuY3Rpb24gYnVpbGRQdWJsaXNoYWJsZUtleShmcm9udGVuZEFwaSkge1xuICBjb25zdCBpc0RldktleSA9IFBVQkxJU0hBQkxFX0ZST05URU5EX0FQSV9ERVZfUkVHRVgudGVzdChmcm9udGVuZEFwaSkgfHwgZnJvbnRlbmRBcGkuc3RhcnRzV2l0aChcImNsZXJrLlwiKSAmJiBMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTLnNvbWUoKHMpID0+IGZyb250ZW5kQXBpLmVuZHNXaXRoKHMpKTtcbiAgY29uc3Qga2V5UHJlZml4ID0gaXNEZXZLZXkgPyBQVUJMSVNIQUJMRV9LRVlfVEVTVF9QUkVGSVggOiBQVUJMSVNIQUJMRV9LRVlfTElWRV9QUkVGSVg7XG4gIHJldHVybiBgJHtrZXlQcmVmaXh9JHtpc29tb3JwaGljQnRvYShgJHtmcm9udGVuZEFwaX0kYCl9YDtcbn1cbmZ1bmN0aW9uIHBhcnNlUHVibGlzaGFibGVLZXkoa2V5LCBvcHRpb25zID0ge30pIHtcbiAga2V5ID0ga2V5IHx8IFwiXCI7XG4gIGlmICgha2V5IHx8ICFpc1B1Ymxpc2hhYmxlS2V5KGtleSkpIHtcbiAgICBpZiAob3B0aW9ucy5mYXRhbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUHVibGlzaGFibGUga2V5IG5vdCB2YWxpZC5cIik7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IGluc3RhbmNlVHlwZSA9IGtleS5zdGFydHNXaXRoKFBVQkxJU0hBQkxFX0tFWV9MSVZFX1BSRUZJWCkgPyBcInByb2R1Y3Rpb25cIiA6IFwiZGV2ZWxvcG1lbnRcIjtcbiAgbGV0IGZyb250ZW5kQXBpID0gaXNvbW9ycGhpY0F0b2Ioa2V5LnNwbGl0KFwiX1wiKVsyXSk7XG4gIGZyb250ZW5kQXBpID0gZnJvbnRlbmRBcGkuc2xpY2UoMCwgLTEpO1xuICBpZiAob3B0aW9ucy5wcm94eVVybCkge1xuICAgIGZyb250ZW5kQXBpID0gb3B0aW9ucy5wcm94eVVybDtcbiAgfSBlbHNlIGlmIChpbnN0YW5jZVR5cGUgIT09IFwiZGV2ZWxvcG1lbnRcIiAmJiBvcHRpb25zLmRvbWFpbikge1xuICAgIGZyb250ZW5kQXBpID0gYGNsZXJrLiR7b3B0aW9ucy5kb21haW59YDtcbiAgfVxuICByZXR1cm4ge1xuICAgIGluc3RhbmNlVHlwZSxcbiAgICBmcm9udGVuZEFwaVxuICB9O1xufVxuZnVuY3Rpb24gaXNQdWJsaXNoYWJsZUtleShrZXkpIHtcbiAga2V5ID0ga2V5IHx8IFwiXCI7XG4gIGNvbnN0IGhhc1ZhbGlkUHJlZml4ID0ga2V5LnN0YXJ0c1dpdGgoUFVCTElTSEFCTEVfS0VZX0xJVkVfUFJFRklYKSB8fCBrZXkuc3RhcnRzV2l0aChQVUJMSVNIQUJMRV9LRVlfVEVTVF9QUkVGSVgpO1xuICBjb25zdCBoYXNWYWxpZEZyb250ZW5kQXBpUG9zdGZpeCA9IGlzb21vcnBoaWNBdG9iKGtleS5zcGxpdChcIl9cIilbMl0gfHwgXCJcIikuZW5kc1dpdGgoXCIkXCIpO1xuICByZXR1cm4gaGFzVmFsaWRQcmVmaXggJiYgaGFzVmFsaWRGcm9udGVuZEFwaVBvc3RmaXg7XG59XG5mdW5jdGlvbiBjcmVhdGVEZXZPclN0YWdpbmdVcmxDYWNoZSgpIHtcbiAgY29uc3QgZGV2T3JTdGFnaW5nVXJsQ2FjaGUgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICByZXR1cm4ge1xuICAgIGlzRGV2T3JTdGFnaW5nVXJsOiAodXJsKSA9PiB7XG4gICAgICBpZiAoIXVybCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBjb25zdCBob3N0bmFtZSA9IHR5cGVvZiB1cmwgPT09IFwic3RyaW5nXCIgPyB1cmwgOiB1cmwuaG9zdG5hbWU7XG4gICAgICBsZXQgcmVzID0gZGV2T3JTdGFnaW5nVXJsQ2FjaGUuZ2V0KGhvc3RuYW1lKTtcbiAgICAgIGlmIChyZXMgPT09IHZvaWQgMCkge1xuICAgICAgICByZXMgPSBERVZfT1JfU1RBR0lOR19TVUZGSVhFUy5zb21lKChzKSA9PiBob3N0bmFtZS5lbmRzV2l0aChzKSk7XG4gICAgICAgIGRldk9yU3RhZ2luZ1VybENhY2hlLnNldChob3N0bmFtZSwgcmVzKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXM7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gaXNEZXZlbG9wbWVudEZyb21QdWJsaXNoYWJsZUtleShhcGlLZXkpIHtcbiAgcmV0dXJuIGFwaUtleS5zdGFydHNXaXRoKFwidGVzdF9cIikgfHwgYXBpS2V5LnN0YXJ0c1dpdGgoXCJwa190ZXN0X1wiKTtcbn1cbmZ1bmN0aW9uIGlzUHJvZHVjdGlvbkZyb21QdWJsaXNoYWJsZUtleShhcGlLZXkpIHtcbiAgcmV0dXJuIGFwaUtleS5zdGFydHNXaXRoKFwibGl2ZV9cIikgfHwgYXBpS2V5LnN0YXJ0c1dpdGgoXCJwa19saXZlX1wiKTtcbn1cbmZ1bmN0aW9uIGlzRGV2ZWxvcG1lbnRGcm9tU2VjcmV0S2V5KGFwaUtleSkge1xuICByZXR1cm4gYXBpS2V5LnN0YXJ0c1dpdGgoXCJ0ZXN0X1wiKSB8fCBhcGlLZXkuc3RhcnRzV2l0aChcInNrX3Rlc3RfXCIpO1xufVxuZnVuY3Rpb24gaXNQcm9kdWN0aW9uRnJvbVNlY3JldEtleShhcGlLZXkpIHtcbiAgcmV0dXJuIGFwaUtleS5zdGFydHNXaXRoKFwibGl2ZV9cIikgfHwgYXBpS2V5LnN0YXJ0c1dpdGgoXCJza19saXZlX1wiKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGdldENvb2tpZVN1ZmZpeChwdWJsaXNoYWJsZUtleSwgc3VidGxlID0gZ2xvYmFsVGhpcy5jcnlwdG8uc3VidGxlKSB7XG4gIGNvbnN0IGRhdGEgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUocHVibGlzaGFibGVLZXkpO1xuICBjb25zdCBkaWdlc3QgPSBhd2FpdCBzdWJ0bGUuZGlnZXN0KFwic2hhLTFcIiwgZGF0YSk7XG4gIGNvbnN0IHN0cmluZ0RpZ2VzdCA9IFN0cmluZy5mcm9tQ2hhckNvZGUoLi4ubmV3IFVpbnQ4QXJyYXkoZGlnZXN0KSk7XG4gIHJldHVybiBpc29tb3JwaGljQnRvYShzdHJpbmdEaWdlc3QpLnJlcGxhY2UoL1xcKy9naSwgXCItXCIpLnJlcGxhY2UoL1xcLy9naSwgXCJfXCIpLnN1YnN0cmluZygwLCA4KTtcbn1cbnZhciBnZXRTdWZmaXhlZENvb2tpZU5hbWUgPSAoY29va2llTmFtZSwgY29va2llU3VmZml4KSA9PiB7XG4gIHJldHVybiBgJHtjb29raWVOYW1lfV8ke2Nvb2tpZVN1ZmZpeH1gO1xufTtcblxuZXhwb3J0IHtcbiAgYnVpbGRQdWJsaXNoYWJsZUtleSxcbiAgcGFyc2VQdWJsaXNoYWJsZUtleSxcbiAgaXNQdWJsaXNoYWJsZUtleSxcbiAgY3JlYXRlRGV2T3JTdGFnaW5nVXJsQ2FjaGUsXG4gIGlzRGV2ZWxvcG1lbnRGcm9tUHVibGlzaGFibGVLZXksXG4gIGlzUHJvZHVjdGlvbkZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXksXG4gIGlzUHJvZHVjdGlvbkZyb21TZWNyZXRLZXksXG4gIGdldENvb2tpZVN1ZmZpeCxcbiAgZ2V0U3VmZml4ZWRDb29raWVOYW1lXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstTDJCTk5BUk0ubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-L2BNNARM.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-LJ4R7M7R.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-LJ4R7M7R.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inBrowser: function() { return /* binding */ inBrowser; },\n/* harmony export */   isBrowserOnline: function() { return /* binding */ isBrowserOnline; },\n/* harmony export */   isValidBrowser: function() { return /* binding */ isValidBrowser; },\n/* harmony export */   isValidBrowserOnline: function() { return /* binding */ isValidBrowserOnline; },\n/* harmony export */   userAgentIsRobot: function() { return /* binding */ userAgentIsRobot; }\n/* harmony export */ });\n// src/browser.ts\nfunction inBrowser() {\n  return typeof window !== \"undefined\";\n}\nvar botAgents = [\n  \"bot\",\n  \"spider\",\n  \"crawl\",\n  \"APIs-Google\",\n  \"AdsBot\",\n  \"Googlebot\",\n  \"mediapartners\",\n  \"Google Favicon\",\n  \"FeedFetcher\",\n  \"Google-Read-Aloud\",\n  \"DuplexWeb-Google\",\n  \"googleweblight\",\n  \"bing\",\n  \"yandex\",\n  \"baidu\",\n  \"duckduck\",\n  \"yahoo\",\n  \"ecosia\",\n  \"ia_archiver\",\n  \"facebook\",\n  \"instagram\",\n  \"pinterest\",\n  \"reddit\",\n  \"slack\",\n  \"twitter\",\n  \"whatsapp\",\n  \"youtube\",\n  \"semrush\"\n];\nvar botAgentRegex = new RegExp(botAgents.join(\"|\"), \"i\");\nfunction userAgentIsRobot(userAgent) {\n  return !userAgent ? false : botAgentRegex.test(userAgent);\n}\nfunction isValidBrowser() {\n  const navigator = inBrowser() ? window == null ? void 0 : window.navigator : null;\n  if (!navigator) {\n    return false;\n  }\n  return !userAgentIsRobot(navigator == null ? void 0 : navigator.userAgent) && !(navigator == null ? void 0 : navigator.webdriver);\n}\nfunction isBrowserOnline() {\n  var _a, _b;\n  const navigator = inBrowser() ? window == null ? void 0 : window.navigator : null;\n  if (!navigator) {\n    return false;\n  }\n  const isNavigatorOnline = navigator == null ? void 0 : navigator.onLine;\n  const isExperimentalConnectionOnline = ((_a = navigator == null ? void 0 : navigator.connection) == null ? void 0 : _a.rtt) !== 0 && ((_b = navigator == null ? void 0 : navigator.connection) == null ? void 0 : _b.downlink) !== 0;\n  return isExperimentalConnectionOnline && isNavigatorOnline;\n}\nfunction isValidBrowserOnline() {\n  return isBrowserOnline() && isValidBrowser();\n}\n\n\n//# sourceMappingURL=chunk-LJ4R7M7R.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstTEo0UjdNN1IubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBUUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUxKNFI3TTdSLm1qcz9mZWEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9icm93c2VyLnRzXG5mdW5jdGlvbiBpbkJyb3dzZXIoKSB7XG4gIHJldHVybiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiO1xufVxudmFyIGJvdEFnZW50cyA9IFtcbiAgXCJib3RcIixcbiAgXCJzcGlkZXJcIixcbiAgXCJjcmF3bFwiLFxuICBcIkFQSXMtR29vZ2xlXCIsXG4gIFwiQWRzQm90XCIsXG4gIFwiR29vZ2xlYm90XCIsXG4gIFwibWVkaWFwYXJ0bmVyc1wiLFxuICBcIkdvb2dsZSBGYXZpY29uXCIsXG4gIFwiRmVlZEZldGNoZXJcIixcbiAgXCJHb29nbGUtUmVhZC1BbG91ZFwiLFxuICBcIkR1cGxleFdlYi1Hb29nbGVcIixcbiAgXCJnb29nbGV3ZWJsaWdodFwiLFxuICBcImJpbmdcIixcbiAgXCJ5YW5kZXhcIixcbiAgXCJiYWlkdVwiLFxuICBcImR1Y2tkdWNrXCIsXG4gIFwieWFob29cIixcbiAgXCJlY29zaWFcIixcbiAgXCJpYV9hcmNoaXZlclwiLFxuICBcImZhY2Vib29rXCIsXG4gIFwiaW5zdGFncmFtXCIsXG4gIFwicGludGVyZXN0XCIsXG4gIFwicmVkZGl0XCIsXG4gIFwic2xhY2tcIixcbiAgXCJ0d2l0dGVyXCIsXG4gIFwid2hhdHNhcHBcIixcbiAgXCJ5b3V0dWJlXCIsXG4gIFwic2VtcnVzaFwiXG5dO1xudmFyIGJvdEFnZW50UmVnZXggPSBuZXcgUmVnRXhwKGJvdEFnZW50cy5qb2luKFwifFwiKSwgXCJpXCIpO1xuZnVuY3Rpb24gdXNlckFnZW50SXNSb2JvdCh1c2VyQWdlbnQpIHtcbiAgcmV0dXJuICF1c2VyQWdlbnQgPyBmYWxzZSA6IGJvdEFnZW50UmVnZXgudGVzdCh1c2VyQWdlbnQpO1xufVxuZnVuY3Rpb24gaXNWYWxpZEJyb3dzZXIoKSB7XG4gIGNvbnN0IG5hdmlnYXRvciA9IGluQnJvd3NlcigpID8gd2luZG93ID09IG51bGwgPyB2b2lkIDAgOiB3aW5kb3cubmF2aWdhdG9yIDogbnVsbDtcbiAgaWYgKCFuYXZpZ2F0b3IpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuICF1c2VyQWdlbnRJc1JvYm90KG5hdmlnYXRvciA9PSBudWxsID8gdm9pZCAwIDogbmF2aWdhdG9yLnVzZXJBZ2VudCkgJiYgIShuYXZpZ2F0b3IgPT0gbnVsbCA/IHZvaWQgMCA6IG5hdmlnYXRvci53ZWJkcml2ZXIpO1xufVxuZnVuY3Rpb24gaXNCcm93c2VyT25saW5lKCkge1xuICB2YXIgX2EsIF9iO1xuICBjb25zdCBuYXZpZ2F0b3IgPSBpbkJyb3dzZXIoKSA/IHdpbmRvdyA9PSBudWxsID8gdm9pZCAwIDogd2luZG93Lm5hdmlnYXRvciA6IG51bGw7XG4gIGlmICghbmF2aWdhdG9yKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGNvbnN0IGlzTmF2aWdhdG9yT25saW5lID0gbmF2aWdhdG9yID09IG51bGwgPyB2b2lkIDAgOiBuYXZpZ2F0b3Iub25MaW5lO1xuICBjb25zdCBpc0V4cGVyaW1lbnRhbENvbm5lY3Rpb25PbmxpbmUgPSAoKF9hID0gbmF2aWdhdG9yID09IG51bGwgPyB2b2lkIDAgOiBuYXZpZ2F0b3IuY29ubmVjdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnJ0dCkgIT09IDAgJiYgKChfYiA9IG5hdmlnYXRvciA9PSBudWxsID8gdm9pZCAwIDogbmF2aWdhdG9yLmNvbm5lY3Rpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYi5kb3dubGluaykgIT09IDA7XG4gIHJldHVybiBpc0V4cGVyaW1lbnRhbENvbm5lY3Rpb25PbmxpbmUgJiYgaXNOYXZpZ2F0b3JPbmxpbmU7XG59XG5mdW5jdGlvbiBpc1ZhbGlkQnJvd3Nlck9ubGluZSgpIHtcbiAgcmV0dXJuIGlzQnJvd3Nlck9ubGluZSgpICYmIGlzVmFsaWRCcm93c2VyKCk7XG59XG5cbmV4cG9ydCB7XG4gIGluQnJvd3NlcixcbiAgdXNlckFnZW50SXNSb2JvdCxcbiAgaXNWYWxpZEJyb3dzZXIsXG4gIGlzQnJvd3Nlck9ubGluZSxcbiAgaXNWYWxpZEJyb3dzZXJPbmxpbmVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1MSjRSN003Ui5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-LJ4R7M7R.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-Q2DOGLDC.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-Q2DOGLDC.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: function() { return /* binding */ addClerkPrefix; },\n/* harmony export */   cleanDoubleSlashes: function() { return /* binding */ cleanDoubleSlashes; },\n/* harmony export */   getClerkJsMajorVersionOrTag: function() { return /* binding */ getClerkJsMajorVersionOrTag; },\n/* harmony export */   getScriptUrl: function() { return /* binding */ getScriptUrl; },\n/* harmony export */   hasLeadingSlash: function() { return /* binding */ hasLeadingSlash; },\n/* harmony export */   hasTrailingSlash: function() { return /* binding */ hasTrailingSlash; },\n/* harmony export */   isAbsoluteUrl: function() { return /* binding */ isAbsoluteUrl; },\n/* harmony export */   isCurrentDevAccountPortalOrigin: function() { return /* binding */ isCurrentDevAccountPortalOrigin; },\n/* harmony export */   isLegacyDevAccountPortalOrigin: function() { return /* binding */ isLegacyDevAccountPortalOrigin; },\n/* harmony export */   isNonEmptyURL: function() { return /* binding */ isNonEmptyURL; },\n/* harmony export */   isStaging: function() { return /* binding */ isStaging; },\n/* harmony export */   joinURL: function() { return /* binding */ joinURL; },\n/* harmony export */   parseSearchParams: function() { return /* binding */ parseSearchParams; },\n/* harmony export */   stripScheme: function() { return /* binding */ stripScheme; },\n/* harmony export */   withLeadingSlash: function() { return /* binding */ withLeadingSlash; },\n/* harmony export */   withTrailingSlash: function() { return /* binding */ withTrailingSlash; },\n/* harmony export */   withoutLeadingSlash: function() { return /* binding */ withoutLeadingSlash; },\n/* harmony export */   withoutTrailingSlash: function() { return /* binding */ withoutTrailingSlash; }\n/* harmony export */ });\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n\n\n// src/utils/instance.ts\nfunction isStaging(frontendApi) {\n  return frontendApi.endsWith(\".lclstage.dev\") || frontendApi.endsWith(\".stgstage.dev\") || frontendApi.endsWith(\".clerkstage.dev\") || frontendApi.endsWith(\".accountsstage.dev\");\n}\n\n// src/url.ts\nfunction parseSearchParams(queryString = \"\") {\n  if (queryString.startsWith(\"?\")) {\n    queryString = queryString.slice(1);\n  }\n  return new URLSearchParams(queryString);\n}\nfunction stripScheme(url = \"\") {\n  return (url || \"\").replace(/^.+:\\/\\//, \"\");\n}\nfunction addClerkPrefix(str) {\n  if (!str) {\n    return \"\";\n  }\n  let regex;\n  if (str.match(/^(clerk\\.)+\\w*$/)) {\n    regex = /(clerk\\.)*(?=clerk\\.)/;\n  } else if (str.match(/\\.clerk.accounts/)) {\n    return str;\n  } else {\n    regex = /^(clerk\\.)*/gi;\n  }\n  const stripped = str.replace(regex, \"\");\n  return `clerk.${stripped}`;\n}\nvar getClerkJsMajorVersionOrTag = (frontendApi, version) => {\n  if (!version && isStaging(frontendApi)) {\n    return \"canary\";\n  }\n  if (!version) {\n    return \"latest\";\n  }\n  return version.split(\".\")[0] || \"latest\";\n};\nvar getScriptUrl = (frontendApi, { clerkJSVersion }) => {\n  const noSchemeFrontendApi = frontendApi.replace(/http(s)?:\\/\\//, \"\");\n  const major = getClerkJsMajorVersionOrTag(frontendApi, clerkJSVersion);\n  return `https://${noSchemeFrontendApi}/npm/@clerk/clerk-js@${clerkJSVersion || major}/dist/clerk.browser.js`;\n};\nfunction isLegacyDevAccountPortalOrigin(host) {\n  return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.LEGACY_DEV_INSTANCE_SUFFIXES.some((legacyDevSuffix) => {\n    return host.startsWith(\"accounts.\") && host.endsWith(legacyDevSuffix);\n  });\n}\nfunction isCurrentDevAccountPortalOrigin(host) {\n  return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.CURRENT_DEV_INSTANCE_SUFFIXES.some((currentDevSuffix) => {\n    return host.endsWith(currentDevSuffix) && !host.endsWith(\".clerk\" + currentDevSuffix);\n  });\n}\nvar TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\nfunction hasTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\");\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\nfunction withTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\") ? input : input + \"/\";\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n    if (!path) {\n      return fragment;\n    }\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return s0 + \"/\" + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction withoutTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || \"/\";\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return (s0.slice(0, -1) || \"/\") + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction hasLeadingSlash(input = \"\") {\n  return input.startsWith(\"/\");\n}\nfunction withoutLeadingSlash(input = \"\") {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || \"/\";\n}\nfunction withLeadingSlash(input = \"\") {\n  return hasLeadingSlash(input) ? input : \"/\" + input;\n}\nfunction cleanDoubleSlashes(input = \"\") {\n  return input.split(\"://\").map((string_) => string_.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n}\nfunction isNonEmptyURL(url) {\n  return url && url !== \"/\";\n}\nvar JOIN_LEADING_SLASH_RE = /^\\.?\\//;\nfunction joinURL(base, ...input) {\n  let url = base || \"\";\n  for (const segment of input.filter((url2) => isNonEmptyURL(url2))) {\n    if (url) {\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, \"\");\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n  return url;\n}\nvar ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nvar isAbsoluteUrl = (url) => ABSOLUTE_URL_REGEX.test(url);\n\n\n//# sourceMappingURL=chunk-Q2DOGLDC.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-Q2DOGLDC.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QE2A7CJI.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-QE2A7CJI.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelToSnake: function() { return /* binding */ camelToSnake; },\n/* harmony export */   deepCamelToSnake: function() { return /* binding */ deepCamelToSnake; },\n/* harmony export */   deepSnakeToCamel: function() { return /* binding */ deepSnakeToCamel; },\n/* harmony export */   getNonUndefinedValues: function() { return /* binding */ getNonUndefinedValues; },\n/* harmony export */   isIPV4Address: function() { return /* binding */ isIPV4Address; },\n/* harmony export */   isTruthy: function() { return /* binding */ isTruthy; },\n/* harmony export */   snakeToCamel: function() { return /* binding */ snakeToCamel; },\n/* harmony export */   titleize: function() { return /* binding */ titleize; },\n/* harmony export */   toSentence: function() { return /* binding */ toSentence; }\n/* harmony export */ });\n// src/underscore.ts\nvar toSentence = (items) => {\n  if (items.length == 0) {\n    return \"\";\n  }\n  if (items.length == 1) {\n    return items[0];\n  }\n  let sentence = items.slice(0, -1).join(\", \");\n  sentence += `, or ${items.slice(-1)}`;\n  return sentence;\n};\nvar IP_V4_ADDRESS_REGEX = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\nfunction isIPV4Address(str) {\n  return IP_V4_ADDRESS_REGEX.test(str || \"\");\n}\nfunction titleize(str) {\n  const s = str || \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\nfunction snakeToCamel(str) {\n  return str ? str.replace(/([-_][a-z])/g, (match) => match.toUpperCase().replace(/-|_/, \"\")) : \"\";\n}\nfunction camelToSnake(str) {\n  return str ? str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`) : \"\";\n}\nvar createDeepObjectTransformer = (transform) => {\n  const deepTransform = (obj) => {\n    if (!obj) {\n      return obj;\n    }\n    if (Array.isArray(obj)) {\n      return obj.map((el) => {\n        if (typeof el === \"object\" || Array.isArray(el)) {\n          return deepTransform(el);\n        }\n        return el;\n      });\n    }\n    const copy = { ...obj };\n    const keys = Object.keys(copy);\n    for (const oldName of keys) {\n      const newName = transform(oldName.toString());\n      if (newName !== oldName) {\n        copy[newName] = copy[oldName];\n        delete copy[oldName];\n      }\n      if (typeof copy[newName] === \"object\") {\n        copy[newName] = deepTransform(copy[newName]);\n      }\n    }\n    return copy;\n  };\n  return deepTransform;\n};\nvar deepCamelToSnake = createDeepObjectTransformer(camelToSnake);\nvar deepSnakeToCamel = createDeepObjectTransformer(snakeToCamel);\nfunction isTruthy(value) {\n  if (typeof value === `boolean`) {\n    return value;\n  }\n  if (value === void 0 || value === null) {\n    return false;\n  }\n  if (typeof value === `string`) {\n    if (value.toLowerCase() === `true`) {\n      return true;\n    }\n    if (value.toLowerCase() === `false`) {\n      return false;\n    }\n  }\n  const number = parseInt(value, 10);\n  if (isNaN(number)) {\n    return false;\n  }\n  if (number > 0) {\n    return true;\n  }\n  return false;\n}\nfunction getNonUndefinedValues(obj) {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if (value !== void 0) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n\n\n//# sourceMappingURL=chunk-QE2A7CJI.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstUUUyQTdDSkkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixnQkFBZ0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxxQkFBcUI7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLElBQUk7QUFDUDs7QUFZRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstUUUyQTdDSkkubWpzP2RhYmQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3VuZGVyc2NvcmUudHNcbnZhciB0b1NlbnRlbmNlID0gKGl0ZW1zKSA9PiB7XG4gIGlmIChpdGVtcy5sZW5ndGggPT0gMCkge1xuICAgIHJldHVybiBcIlwiO1xuICB9XG4gIGlmIChpdGVtcy5sZW5ndGggPT0gMSkge1xuICAgIHJldHVybiBpdGVtc1swXTtcbiAgfVxuICBsZXQgc2VudGVuY2UgPSBpdGVtcy5zbGljZSgwLCAtMSkuam9pbihcIiwgXCIpO1xuICBzZW50ZW5jZSArPSBgLCBvciAke2l0ZW1zLnNsaWNlKC0xKX1gO1xuICByZXR1cm4gc2VudGVuY2U7XG59O1xudmFyIElQX1Y0X0FERFJFU1NfUkVHRVggPSAvXigyNVswLTVdfDJbMC00XVswLTldfFswMV0/WzAtOV1bMC05XT8pXFwuKDI1WzAtNV18MlswLTRdWzAtOV18WzAxXT9bMC05XVswLTldPylcXC4oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KVxcLigyNVswLTVdfDJbMC00XVswLTldfFswMV0/WzAtOV1bMC05XT8pJC87XG5mdW5jdGlvbiBpc0lQVjRBZGRyZXNzKHN0cikge1xuICByZXR1cm4gSVBfVjRfQUREUkVTU19SRUdFWC50ZXN0KHN0ciB8fCBcIlwiKTtcbn1cbmZ1bmN0aW9uIHRpdGxlaXplKHN0cikge1xuICBjb25zdCBzID0gc3RyIHx8IFwiXCI7XG4gIHJldHVybiBzLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcy5zbGljZSgxKTtcbn1cbmZ1bmN0aW9uIHNuYWtlVG9DYW1lbChzdHIpIHtcbiAgcmV0dXJuIHN0ciA/IHN0ci5yZXBsYWNlKC8oWy1fXVthLXpdKS9nLCAobWF0Y2gpID0+IG1hdGNoLnRvVXBwZXJDYXNlKCkucmVwbGFjZSgvLXxfLywgXCJcIikpIDogXCJcIjtcbn1cbmZ1bmN0aW9uIGNhbWVsVG9TbmFrZShzdHIpIHtcbiAgcmV0dXJuIHN0ciA/IHN0ci5yZXBsYWNlKC9bQS1aXS9nLCAobGV0dGVyKSA9PiBgXyR7bGV0dGVyLnRvTG93ZXJDYXNlKCl9YCkgOiBcIlwiO1xufVxudmFyIGNyZWF0ZURlZXBPYmplY3RUcmFuc2Zvcm1lciA9ICh0cmFuc2Zvcm0pID0+IHtcbiAgY29uc3QgZGVlcFRyYW5zZm9ybSA9IChvYmopID0+IHtcbiAgICBpZiAoIW9iaikge1xuICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgICAgcmV0dXJuIG9iai5tYXAoKGVsKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgZWwgPT09IFwib2JqZWN0XCIgfHwgQXJyYXkuaXNBcnJheShlbCkpIHtcbiAgICAgICAgICByZXR1cm4gZGVlcFRyYW5zZm9ybShlbCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVsO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IGNvcHkgPSB7IC4uLm9iaiB9O1xuICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhjb3B5KTtcbiAgICBmb3IgKGNvbnN0IG9sZE5hbWUgb2Yga2V5cykge1xuICAgICAgY29uc3QgbmV3TmFtZSA9IHRyYW5zZm9ybShvbGROYW1lLnRvU3RyaW5nKCkpO1xuICAgICAgaWYgKG5ld05hbWUgIT09IG9sZE5hbWUpIHtcbiAgICAgICAgY29weVtuZXdOYW1lXSA9IGNvcHlbb2xkTmFtZV07XG4gICAgICAgIGRlbGV0ZSBjb3B5W29sZE5hbWVdO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBjb3B5W25ld05hbWVdID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIGNvcHlbbmV3TmFtZV0gPSBkZWVwVHJhbnNmb3JtKGNvcHlbbmV3TmFtZV0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29weTtcbiAgfTtcbiAgcmV0dXJuIGRlZXBUcmFuc2Zvcm07XG59O1xudmFyIGRlZXBDYW1lbFRvU25ha2UgPSBjcmVhdGVEZWVwT2JqZWN0VHJhbnNmb3JtZXIoY2FtZWxUb1NuYWtlKTtcbnZhciBkZWVwU25ha2VUb0NhbWVsID0gY3JlYXRlRGVlcE9iamVjdFRyYW5zZm9ybWVyKHNuYWtlVG9DYW1lbCk7XG5mdW5jdGlvbiBpc1RydXRoeSh2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSBgYm9vbGVhbmApIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgaWYgKHZhbHVlID09PSB2b2lkIDAgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gYHN0cmluZ2ApIHtcbiAgICBpZiAodmFsdWUudG9Mb3dlckNhc2UoKSA9PT0gYHRydWVgKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKHZhbHVlLnRvTG93ZXJDYXNlKCkgPT09IGBmYWxzZWApIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgY29uc3QgbnVtYmVyID0gcGFyc2VJbnQodmFsdWUsIDEwKTtcbiAgaWYgKGlzTmFOKG51bWJlcikpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKG51bWJlciA+IDApIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBnZXROb25VbmRlZmluZWRWYWx1ZXMob2JqKSB7XG4gIHJldHVybiBPYmplY3QuZW50cmllcyhvYmopLnJlZHVjZSgoYWNjLCBba2V5LCB2YWx1ZV0pID0+IHtcbiAgICBpZiAodmFsdWUgIT09IHZvaWQgMCkge1xuICAgICAgYWNjW2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xufVxuXG5leHBvcnQge1xuICB0b1NlbnRlbmNlLFxuICBpc0lQVjRBZGRyZXNzLFxuICB0aXRsZWl6ZSxcbiAgc25ha2VUb0NhbWVsLFxuICBjYW1lbFRvU25ha2UsXG4gIGRlZXBDYW1lbFRvU25ha2UsXG4gIGRlZXBTbmFrZVRvQ2FtZWwsXG4gIGlzVHJ1dGh5LFxuICBnZXROb25VbmRlZmluZWRWYWx1ZXNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1RRTJBN0NKSS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QE2A7CJI.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QPSU45F4.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-QPSU45F4.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiUrlFromPublishableKey: function() { return /* binding */ apiUrlFromPublishableKey; }\n/* harmony export */ });\n/* harmony import */ var _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-L2BNNARM.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-L2BNNARM.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n\n\n\n// src/apiUrlFromPublishableKey.ts\nvar apiUrlFromPublishableKey = (publishableKey) => {\n  var _a;\n  const frontendApi = (_a = (0,_chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey)(publishableKey)) == null ? void 0 : _a.frontendApi;\n  if ((frontendApi == null ? void 0 : frontendApi.startsWith(\"clerk.\")) && _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.LEGACY_DEV_INSTANCE_SUFFIXES.some((suffix) => frontendApi == null ? void 0 : frontendApi.endsWith(suffix))) {\n    return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.PROD_API_URL;\n  }\n  if (_chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.LOCAL_ENV_SUFFIXES.some((suffix) => frontendApi == null ? void 0 : frontendApi.endsWith(suffix))) {\n    return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.LOCAL_API_URL;\n  }\n  if (_chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.STAGING_ENV_SUFFIXES.some((suffix) => frontendApi == null ? void 0 : frontendApi.endsWith(suffix))) {\n    return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.STAGING_API_URL;\n  }\n  return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.PROD_API_URL;\n};\n\n\n//# sourceMappingURL=chunk-QPSU45F4.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstUVBTVTQ1RjQubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUU4QjtBQVFBOztBQUU5QjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsd0VBQW1CO0FBQy9DLDJFQUEyRSw2RUFBNEI7QUFDdkcsV0FBVyw2REFBWTtBQUN2QjtBQUNBLE1BQU0sbUVBQWtCO0FBQ3hCLFdBQVcsOERBQWE7QUFDeEI7QUFDQSxNQUFNLHFFQUFvQjtBQUMxQixXQUFXLGdFQUFlO0FBQzFCO0FBQ0EsU0FBUyw2REFBWTtBQUNyQjs7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstUVBTVTQ1RjQubWpzPzZhOTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgcGFyc2VQdWJsaXNoYWJsZUtleVxufSBmcm9tIFwiLi9jaHVuay1MMkJOTkFSTS5tanNcIjtcbmltcG9ydCB7XG4gIExFR0FDWV9ERVZfSU5TVEFOQ0VfU1VGRklYRVMsXG4gIExPQ0FMX0FQSV9VUkwsXG4gIExPQ0FMX0VOVl9TVUZGSVhFUyxcbiAgUFJPRF9BUElfVVJMLFxuICBTVEFHSU5HX0FQSV9VUkwsXG4gIFNUQUdJTkdfRU5WX1NVRkZJWEVTXG59IGZyb20gXCIuL2NodW5rLUk2TVRTVE9GLm1qc1wiO1xuXG4vLyBzcmMvYXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5LnRzXG52YXIgYXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5ID0gKHB1Ymxpc2hhYmxlS2V5KSA9PiB7XG4gIHZhciBfYTtcbiAgY29uc3QgZnJvbnRlbmRBcGkgPSAoX2EgPSBwYXJzZVB1Ymxpc2hhYmxlS2V5KHB1Ymxpc2hhYmxlS2V5KSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmZyb250ZW5kQXBpO1xuICBpZiAoKGZyb250ZW5kQXBpID09IG51bGwgPyB2b2lkIDAgOiBmcm9udGVuZEFwaS5zdGFydHNXaXRoKFwiY2xlcmsuXCIpKSAmJiBMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTLnNvbWUoKHN1ZmZpeCkgPT4gZnJvbnRlbmRBcGkgPT0gbnVsbCA/IHZvaWQgMCA6IGZyb250ZW5kQXBpLmVuZHNXaXRoKHN1ZmZpeCkpKSB7XG4gICAgcmV0dXJuIFBST0RfQVBJX1VSTDtcbiAgfVxuICBpZiAoTE9DQUxfRU5WX1NVRkZJWEVTLnNvbWUoKHN1ZmZpeCkgPT4gZnJvbnRlbmRBcGkgPT0gbnVsbCA/IHZvaWQgMCA6IGZyb250ZW5kQXBpLmVuZHNXaXRoKHN1ZmZpeCkpKSB7XG4gICAgcmV0dXJuIExPQ0FMX0FQSV9VUkw7XG4gIH1cbiAgaWYgKFNUQUdJTkdfRU5WX1NVRkZJWEVTLnNvbWUoKHN1ZmZpeCkgPT4gZnJvbnRlbmRBcGkgPT0gbnVsbCA/IHZvaWQgMCA6IGZyb250ZW5kQXBpLmVuZHNXaXRoKHN1ZmZpeCkpKSB7XG4gICAgcmV0dXJuIFNUQUdJTkdfQVBJX1VSTDtcbiAgfVxuICByZXR1cm4gUFJPRF9BUElfVVJMO1xufTtcblxuZXhwb3J0IHtcbiAgYXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstUVBTVTQ1RjQubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QPSU45F4.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-RSOCGYTF.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-RSOCGYTF.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalStorageBroadcastChannel: function() { return /* binding */ LocalStorageBroadcastChannel; }\n/* harmony export */ });\n// src/localStorageBroadcastChannel.ts\nvar KEY_PREFIX = \"__lsbc__\";\nvar LocalStorageBroadcastChannel = class {\n  constructor(name) {\n    this.eventTarget = window;\n    this.postMessage = (data) => {\n      if (typeof window === \"undefined\") {\n        return;\n      }\n      try {\n        window.localStorage.setItem(this.channelKey, JSON.stringify(data));\n        window.localStorage.removeItem(this.channelKey);\n      } catch (e) {\n      }\n    };\n    this.addEventListener = (eventName, listener) => {\n      this.eventTarget.addEventListener(this.prefixEventName(eventName), (e) => {\n        listener(e);\n      });\n    };\n    this.setupLocalStorageListener = () => {\n      const notifyListeners = (e) => {\n        if (e.key !== this.channelKey || !e.newValue) {\n          return;\n        }\n        try {\n          const data = JSON.parse(e.newValue || \"\");\n          const event = new MessageEvent(this.prefixEventName(\"message\"), {\n            data\n          });\n          this.eventTarget.dispatchEvent(event);\n        } catch (e2) {\n        }\n      };\n      window.addEventListener(\"storage\", notifyListeners);\n    };\n    this.channelKey = KEY_PREFIX + name;\n    this.setupLocalStorageListener();\n  }\n  prefixEventName(eventName) {\n    return this.channelKey + eventName;\n  }\n};\n\n\n//# sourceMappingURL=chunk-RSOCGYTF.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstUlNPQ0dZVEYubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1SU09DR1lURi5tanM/M2RmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbG9jYWxTdG9yYWdlQnJvYWRjYXN0Q2hhbm5lbC50c1xudmFyIEtFWV9QUkVGSVggPSBcIl9fbHNiY19fXCI7XG52YXIgTG9jYWxTdG9yYWdlQnJvYWRjYXN0Q2hhbm5lbCA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IobmFtZSkge1xuICAgIHRoaXMuZXZlbnRUYXJnZXQgPSB3aW5kb3c7XG4gICAgdGhpcy5wb3N0TWVzc2FnZSA9IChkYXRhKSA9PiB7XG4gICAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5jaGFubmVsS2V5LCBKU09OLnN0cmluZ2lmeShkYXRhKSk7XG4gICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLmNoYW5uZWxLZXkpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyID0gKGV2ZW50TmFtZSwgbGlzdGVuZXIpID0+IHtcbiAgICAgIHRoaXMuZXZlbnRUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLnByZWZpeEV2ZW50TmFtZShldmVudE5hbWUpLCAoZSkgPT4ge1xuICAgICAgICBsaXN0ZW5lcihlKTtcbiAgICAgIH0pO1xuICAgIH07XG4gICAgdGhpcy5zZXR1cExvY2FsU3RvcmFnZUxpc3RlbmVyID0gKCkgPT4ge1xuICAgICAgY29uc3Qgbm90aWZ5TGlzdGVuZXJzID0gKGUpID0+IHtcbiAgICAgICAgaWYgKGUua2V5ICE9PSB0aGlzLmNoYW5uZWxLZXkgfHwgIWUubmV3VmFsdWUpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShlLm5ld1ZhbHVlIHx8IFwiXCIpO1xuICAgICAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IE1lc3NhZ2VFdmVudCh0aGlzLnByZWZpeEV2ZW50TmFtZShcIm1lc3NhZ2VcIiksIHtcbiAgICAgICAgICAgIGRhdGFcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB0aGlzLmV2ZW50VGFyZ2V0LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICAgICAgICB9IGNhdGNoIChlMikge1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzdG9yYWdlXCIsIG5vdGlmeUxpc3RlbmVycyk7XG4gICAgfTtcbiAgICB0aGlzLmNoYW5uZWxLZXkgPSBLRVlfUFJFRklYICsgbmFtZTtcbiAgICB0aGlzLnNldHVwTG9jYWxTdG9yYWdlTGlzdGVuZXIoKTtcbiAgfVxuICBwcmVmaXhFdmVudE5hbWUoZXZlbnROYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuY2hhbm5lbEtleSArIGV2ZW50TmFtZTtcbiAgfVxufTtcblxuZXhwb3J0IHtcbiAgTG9jYWxTdG9yYWdlQnJvYWRjYXN0Q2hhbm5lbFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVJTT0NHWVRGLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-RSOCGYTF.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-T4WHYQYX.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-T4WHYQYX.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: function() { return /* binding */ ClerkAPIResponseError; },\n/* harmony export */   ClerkRuntimeError: function() { return /* binding */ ClerkRuntimeError; },\n/* harmony export */   EmailLinkError: function() { return /* binding */ EmailLinkError; },\n/* harmony export */   EmailLinkErrorCode: function() { return /* binding */ EmailLinkErrorCode; },\n/* harmony export */   buildErrorThrower: function() { return /* binding */ buildErrorThrower; },\n/* harmony export */   is4xxError: function() { return /* binding */ is4xxError; },\n/* harmony export */   isCaptchaError: function() { return /* binding */ isCaptchaError; },\n/* harmony export */   isClerkAPIResponseError: function() { return /* binding */ isClerkAPIResponseError; },\n/* harmony export */   isClerkRuntimeError: function() { return /* binding */ isClerkRuntimeError; },\n/* harmony export */   isEmailLinkError: function() { return /* binding */ isEmailLinkError; },\n/* harmony export */   isKnownError: function() { return /* binding */ isKnownError; },\n/* harmony export */   isMetamaskError: function() { return /* binding */ isMetamaskError; },\n/* harmony export */   isNetworkError: function() { return /* binding */ isNetworkError; },\n/* harmony export */   isPasswordPwnedError: function() { return /* binding */ isPasswordPwnedError; },\n/* harmony export */   isUnauthorizedError: function() { return /* binding */ isUnauthorizedError; },\n/* harmony export */   isUserLockedError: function() { return /* binding */ isUserLockedError; },\n/* harmony export */   parseError: function() { return /* binding */ parseError; },\n/* harmony export */   parseErrors: function() { return /* binding */ parseErrors; }\n/* harmony export */ });\n// src/error.ts\nfunction isUnauthorizedError(e) {\n  var _a, _b;\n  const status = e == null ? void 0 : e.status;\n  const code = (_b = (_a = e == null ? void 0 : e.errors) == null ? void 0 : _a[0]) == null ? void 0 : _b.code;\n  return code === \"authentication_invalid\" && status === 401;\n}\nfunction isCaptchaError(e) {\n  return [\"captcha_invalid\", \"captcha_not_enabled\", \"captcha_missing_token\"].includes(e.errors[0].code);\n}\nfunction is4xxError(e) {\n  const status = e == null ? void 0 : e.status;\n  return !!status && status >= 400 && status < 500;\n}\nfunction isNetworkError(e) {\n  const message = (`${e.message}${e.name}` || \"\").toLowerCase().replace(/\\s+/g, \"\");\n  return message.includes(\"networkerror\");\n}\nfunction isKnownError(error) {\n  return isClerkAPIResponseError(error) || isMetamaskError(error) || isClerkRuntimeError(error);\n}\nfunction isClerkAPIResponseError(err) {\n  return \"clerkError\" in err;\n}\nfunction isClerkRuntimeError(err) {\n  return \"clerkRuntimeError\" in err;\n}\nfunction isMetamaskError(err) {\n  return \"code\" in err && [4001, 32602, 32603].includes(err.code) && \"message\" in err;\n}\nfunction isUserLockedError(err) {\n  var _a, _b;\n  return isClerkAPIResponseError(err) && ((_b = (_a = err.errors) == null ? void 0 : _a[0]) == null ? void 0 : _b.code) === \"user_locked\";\n}\nfunction isPasswordPwnedError(err) {\n  var _a, _b;\n  return isClerkAPIResponseError(err) && ((_b = (_a = err.errors) == null ? void 0 : _a[0]) == null ? void 0 : _b.code) === \"form_password_pwned\";\n}\nfunction parseErrors(data = []) {\n  return data.length > 0 ? data.map(parseError) : [];\n}\nfunction parseError(error) {\n  var _a, _b, _c, _d, _e;\n  return {\n    code: error.code,\n    message: error.message,\n    longMessage: error.long_message,\n    meta: {\n      paramName: (_a = error == null ? void 0 : error.meta) == null ? void 0 : _a.param_name,\n      sessionId: (_b = error == null ? void 0 : error.meta) == null ? void 0 : _b.session_id,\n      emailAddresses: (_c = error == null ? void 0 : error.meta) == null ? void 0 : _c.email_addresses,\n      identifiers: (_d = error == null ? void 0 : error.meta) == null ? void 0 : _d.identifiers,\n      zxcvbn: (_e = error == null ? void 0 : error.meta) == null ? void 0 : _e.zxcvbn\n    }\n  };\n}\nvar ClerkAPIResponseError = class _ClerkAPIResponseError extends Error {\n  constructor(message, { data, status, clerkTraceId }) {\n    super(message);\n    this.toString = () => {\n      let message = `[${this.name}]\nMessage:${this.message}\nStatus:${this.status}\nSerialized errors: ${this.errors.map(\n        (e) => JSON.stringify(e)\n      )}`;\n      if (this.clerkTraceId) {\n        message += `\nClerk Trace ID: ${this.clerkTraceId}`;\n      }\n      return message;\n    };\n    Object.setPrototypeOf(this, _ClerkAPIResponseError.prototype);\n    this.status = status;\n    this.message = message;\n    this.clerkTraceId = clerkTraceId;\n    this.clerkError = true;\n    this.errors = parseErrors(data);\n  }\n};\nvar ClerkRuntimeError = class _ClerkRuntimeError extends Error {\n  constructor(message, { code }) {\n    super(message);\n    /**\n     * Returns a string representation of the error.\n     *\n     * @returns {string} A formatted string with the error name and message.\n     * @memberof ClerkRuntimeError\n     */\n    this.toString = () => {\n      return `[${this.name}]\nMessage:${this.message}`;\n    };\n    Object.setPrototypeOf(this, _ClerkRuntimeError.prototype);\n    this.code = code;\n    this.message = message;\n    this.clerkRuntimeError = true;\n  }\n};\nvar EmailLinkError = class _EmailLinkError extends Error {\n  constructor(code) {\n    super(code);\n    this.code = code;\n    Object.setPrototypeOf(this, _EmailLinkError.prototype);\n  }\n};\nfunction isEmailLinkError(err) {\n  return err instanceof EmailLinkError;\n}\nvar EmailLinkErrorCode = {\n  Expired: \"expired\",\n  Failed: \"failed\",\n  ClientMismatch: \"client_mismatch\"\n};\nvar DefaultMessages = Object.freeze({\n  InvalidProxyUrlErrorMessage: `The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})`,\n  InvalidPublishableKeyErrorMessage: `The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n  MissingPublishableKeyErrorMessage: `Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingSecretKeyErrorMessage: `Missing secretKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingClerkProvider: `{{source}} can only be used within the <ClerkProvider /> component. Learn more: https://clerk.com/docs/components/clerk-provider`\n});\nfunction buildErrorThrower({ packageName, customMessages }) {\n  let pkg = packageName;\n  const messages = {\n    ...DefaultMessages,\n    ...customMessages\n  };\n  function buildMessage(rawMessage, replacements) {\n    if (!replacements) {\n      return `${pkg}: ${rawMessage}`;\n    }\n    let msg = rawMessage;\n    const matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n    for (const match of matches) {\n      const replacement = (replacements[match[1]] || \"\").toString();\n      msg = msg.replace(`{{${match[1]}}}`, replacement);\n    }\n    return `${pkg}: ${msg}`;\n  }\n  return {\n    setPackageName({ packageName: packageName2 }) {\n      if (typeof packageName2 === \"string\") {\n        pkg = packageName2;\n      }\n      return this;\n    },\n    setMessages({ customMessages: customMessages2 }) {\n      Object.assign(messages, customMessages2 || {});\n      return this;\n    },\n    throwInvalidPublishableKeyError(params) {\n      throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n    },\n    throwInvalidProxyUrl(params) {\n      throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n    },\n    throwMissingPublishableKeyError() {\n      throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n    },\n    throwMissingSecretKeyError() {\n      throw new Error(buildMessage(messages.MissingSecretKeyErrorMessage));\n    },\n    throwMissingClerkProviderError(params) {\n      throw new Error(buildMessage(messages.MissingClerkProvider, params));\n    },\n    throw(message) {\n      throw new Error(buildMessage(message));\n    }\n  };\n}\n\n\n//# sourceMappingURL=chunk-T4WHYQYX.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-T4WHYQYX.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicAtob: function() { return /* binding */ isomorphicAtob; }\n/* harmony export */ });\n// src/isomorphicAtob.ts\nvar isomorphicAtob = (data) => {\n  if (typeof atob !== \"undefined\" && typeof atob === \"function\") {\n    return atob(data);\n  } else if (typeof global !== \"undefined\" && global.Buffer) {\n    return new global.Buffer(data, \"base64\").toString();\n  }\n  return data;\n};\n\n\n//# sourceMappingURL=chunk-TETGTEI2.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVEVUR1RFSTIubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVEVUR1RFSTIubWpzPzQ0MTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2lzb21vcnBoaWNBdG9iLnRzXG52YXIgaXNvbW9ycGhpY0F0b2IgPSAoZGF0YSkgPT4ge1xuICBpZiAodHlwZW9mIGF0b2IgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIGF0b2IgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJldHVybiBhdG9iKGRhdGEpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLkJ1ZmZlcikge1xuICAgIHJldHVybiBuZXcgZ2xvYmFsLkJ1ZmZlcihkYXRhLCBcImJhc2U2NFwiKS50b1N0cmluZygpO1xuICB9XG4gIHJldHVybiBkYXRhO1xufTtcblxuZXhwb3J0IHtcbiAgaXNvbW9ycGhpY0F0b2Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1URVRHVEVJMi5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleValueOrFn: function() { return /* binding */ handleValueOrFn; }\n/* harmony export */ });\n// src/handleValueOrFn.ts\nfunction handleValueOrFn(value, url, defaultValue) {\n  if (typeof value === \"function\") {\n    return value(url);\n  }\n  if (typeof value !== \"undefined\") {\n    return value;\n  }\n  if (typeof defaultValue !== \"undefined\") {\n    return defaultValue;\n  }\n  return void 0;\n}\n\n\n//# sourceMappingURL=chunk-TRWMHODU.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVFJXTUhPRFUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVFJXTUhPRFUubWpzP2E0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2hhbmRsZVZhbHVlT3JGbi50c1xuZnVuY3Rpb24gaGFuZGxlVmFsdWVPckZuKHZhbHVlLCB1cmwsIGRlZmF1bHRWYWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gdmFsdWUodXJsKTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmICh0eXBlb2YgZGVmYXVsdFZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuXG5leHBvcnQge1xuICBoYW5kbGVWYWx1ZU9yRm5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1UUldNSE9EVS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TUVJ3GI6.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-TUVJ3GI6.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eventMethodCalled: function() { return /* binding */ eventMethodCalled; }\n/* harmony export */ });\n// src/telemetry/events/method-called.ts\nvar EVENT_METHOD_CALLED = \"METHOD_CALLED\";\nfunction eventMethodCalled(method, payload) {\n  return {\n    event: EVENT_METHOD_CALLED,\n    payload: {\n      method,\n      ...payload\n    }\n  };\n}\n\n\n//# sourceMappingURL=chunk-TUVJ3GI6.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVFVWSjNHSTYubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1UVVZKM0dJNi5tanM/YTIyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdGVsZW1ldHJ5L2V2ZW50cy9tZXRob2QtY2FsbGVkLnRzXG52YXIgRVZFTlRfTUVUSE9EX0NBTExFRCA9IFwiTUVUSE9EX0NBTExFRFwiO1xuZnVuY3Rpb24gZXZlbnRNZXRob2RDYWxsZWQobWV0aG9kLCBwYXlsb2FkKSB7XG4gIHJldHVybiB7XG4gICAgZXZlbnQ6IEVWRU5UX01FVEhPRF9DQUxMRUQsXG4gICAgcGF5bG9hZDoge1xuICAgICAgbWV0aG9kLFxuICAgICAgLi4ucGF5bG9hZFxuICAgIH1cbiAgfTtcbn1cblxuZXhwb3J0IHtcbiAgZXZlbnRNZXRob2RDYWxsZWRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1UVVZKM0dJNi5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TUVJ3GI6.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-X6NLIF7Y.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-X6NLIF7Y.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   colorToSameTypeString: function() { return /* binding */ colorToSameTypeString; },\n/* harmony export */   hasAlpha: function() { return /* binding */ hasAlpha; },\n/* harmony export */   hexStringToRgbaColor: function() { return /* binding */ hexStringToRgbaColor; },\n/* harmony export */   isHSLColor: function() { return /* binding */ isHSLColor; },\n/* harmony export */   isRGBColor: function() { return /* binding */ isRGBColor; },\n/* harmony export */   isTransparent: function() { return /* binding */ isTransparent; },\n/* harmony export */   isValidHexString: function() { return /* binding */ isValidHexString; },\n/* harmony export */   isValidHslaString: function() { return /* binding */ isValidHslaString; },\n/* harmony export */   isValidRgbaString: function() { return /* binding */ isValidRgbaString; },\n/* harmony export */   stringToHslaColor: function() { return /* binding */ stringToHslaColor; },\n/* harmony export */   stringToSameTypeColor: function() { return /* binding */ stringToSameTypeColor; }\n/* harmony export */ });\n// src/color.ts\nvar IS_HEX_COLOR_REGEX = /^#?([A-F0-9]{6}|[A-F0-9]{3})$/i;\nvar IS_RGB_COLOR_REGEX = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/i;\nvar IS_RGBA_COLOR_REGEX = /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+)(,\\s*\\d+(\\.\\d+)?)\\)$/i;\nvar IS_HSL_COLOR_REGEX = /^hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)$/i;\nvar IS_HSLA_COLOR_REGEX = /^hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%(,\\s*\\d+(\\.\\d+)?)*\\)$/i;\nvar isValidHexString = (s) => {\n  return !!s.match(IS_HEX_COLOR_REGEX);\n};\nvar isValidRgbaString = (s) => {\n  return !!(s.match(IS_RGB_COLOR_REGEX) || s.match(IS_RGBA_COLOR_REGEX));\n};\nvar isValidHslaString = (s) => {\n  return !!s.match(IS_HSL_COLOR_REGEX) || !!s.match(IS_HSLA_COLOR_REGEX);\n};\nvar isRGBColor = (c) => {\n  return typeof c !== \"string\" && \"r\" in c;\n};\nvar isHSLColor = (c) => {\n  return typeof c !== \"string\" && \"h\" in c;\n};\nvar isTransparent = (c) => {\n  return c === \"transparent\";\n};\nvar hasAlpha = (color) => {\n  return typeof color !== \"string\" && color.a != void 0 && color.a < 1;\n};\nvar CLEAN_HSLA_REGEX = /[hsla()]/g;\nvar CLEAN_RGBA_REGEX = /[rgba()]/g;\nvar stringToHslaColor = (value) => {\n  if (value === \"transparent\") {\n    return { h: 0, s: 0, l: 0, a: 0 };\n  }\n  if (isValidHexString(value)) {\n    return hexStringToHslaColor(value);\n  }\n  if (isValidHslaString(value)) {\n    return parseHslaString(value);\n  }\n  if (isValidRgbaString(value)) {\n    return rgbaStringToHslaColor(value);\n  }\n  return null;\n};\nvar stringToSameTypeColor = (value) => {\n  value = value.trim();\n  if (isValidHexString(value)) {\n    return value.startsWith(\"#\") ? value : `#${value}`;\n  }\n  if (isValidRgbaString(value)) {\n    return parseRgbaString(value);\n  }\n  if (isValidHslaString(value)) {\n    return parseHslaString(value);\n  }\n  if (isTransparent(value)) {\n    return value;\n  }\n  return \"\";\n};\nvar colorToSameTypeString = (color) => {\n  if (typeof color === \"string\" && (isValidHexString(color) || isTransparent(color))) {\n    return color;\n  }\n  if (isRGBColor(color)) {\n    return rgbaColorToRgbaString(color);\n  }\n  if (isHSLColor(color)) {\n    return hslaColorToHslaString(color);\n  }\n  return \"\";\n};\nvar hexStringToRgbaColor = (hex) => {\n  hex = hex.replace(\"#\", \"\");\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n  return { r, g, b };\n};\nvar rgbaColorToRgbaString = (color) => {\n  const { a, b, g, r } = color;\n  return color.a === 0 ? \"transparent\" : color.a != void 0 ? `rgba(${r},${g},${b},${a})` : `rgb(${r},${g},${b})`;\n};\nvar hslaColorToHslaString = (color) => {\n  const { h, s, l, a } = color;\n  const sPerc = Math.round(s * 100);\n  const lPerc = Math.round(l * 100);\n  return color.a === 0 ? \"transparent\" : color.a != void 0 ? `hsla(${h},${sPerc}%,${lPerc}%,${a})` : `hsl(${h},${sPerc}%,${lPerc}%)`;\n};\nvar hexStringToHslaColor = (hex) => {\n  const rgbaString = colorToSameTypeString(hexStringToRgbaColor(hex));\n  return rgbaStringToHslaColor(rgbaString);\n};\nvar rgbaStringToHslaColor = (rgba) => {\n  const rgbaColor = parseRgbaString(rgba);\n  const r = rgbaColor.r / 255;\n  const g = rgbaColor.g / 255;\n  const b = rgbaColor.b / 255;\n  const max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h, s;\n  const l = (max + min) / 2;\n  if (max == min) {\n    h = s = 0;\n  } else {\n    const d = max - min;\n    s = l >= 0.5 ? d / (2 - (max + min)) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d * 60;\n        break;\n      case g:\n        h = ((b - r) / d + 2) * 60;\n        break;\n      default:\n        h = ((r - g) / d + 4) * 60;\n        break;\n    }\n  }\n  const res = { h: Math.round(h), s, l };\n  const a = rgbaColor.a;\n  if (a != void 0) {\n    res.a = a;\n  }\n  return res;\n};\nvar parseRgbaString = (str) => {\n  const [r, g, b, a] = str.replace(CLEAN_RGBA_REGEX, \"\").split(\",\").map((c) => Number.parseFloat(c));\n  return { r, g, b, a };\n};\nvar parseHslaString = (str) => {\n  const [h, s, l, a] = str.replace(CLEAN_HSLA_REGEX, \"\").split(\",\").map((c) => Number.parseFloat(c));\n  return { h, s: s / 100, l: l / 100, a };\n};\n\n\n//# sourceMappingURL=chunk-X6NLIF7Y.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstWDZOTElGN1kubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQSx1Q0FBdUMsRUFBRSxVQUFVLEVBQUU7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsTUFBTTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxVQUFVLGFBQWE7QUFDdkIscUVBQXFFLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsWUFBWSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUU7QUFDOUc7QUFDQTtBQUNBLFVBQVUsYUFBYTtBQUN2QjtBQUNBO0FBQ0EscUVBQXFFLEVBQUUsR0FBRyxNQUFNLElBQUksTUFBTSxJQUFJLEVBQUUsWUFBWSxFQUFFLEdBQUcsTUFBTSxJQUFJLE1BQU07QUFDakk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7O0FBY0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLVg2TkxJRjdZLm1qcz9jYTdjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb2xvci50c1xudmFyIElTX0hFWF9DT0xPUl9SRUdFWCA9IC9eIz8oW0EtRjAtOV17Nn18W0EtRjAtOV17M30pJC9pO1xudmFyIElTX1JHQl9DT0xPUl9SRUdFWCA9IC9ecmdiXFwoKFxcZCspLFxccyooXFxkKyksXFxzKihcXGQrKVxcKSQvaTtcbnZhciBJU19SR0JBX0NPTE9SX1JFR0VYID0gL15yZ2JhXFwoKFxcZCspLFxccyooXFxkKyksXFxzKihcXGQrKSgsXFxzKlxcZCsoXFwuXFxkKyk/KVxcKSQvaTtcbnZhciBJU19IU0xfQ09MT1JfUkVHRVggPSAvXmhzbFxcKChcXGQrKSxcXHMqKFtcXGQuXSspJSxcXHMqKFtcXGQuXSspJVxcKSQvaTtcbnZhciBJU19IU0xBX0NPTE9SX1JFR0VYID0gL15oc2xhXFwoKFxcZCspLFxccyooW1xcZC5dKyklLFxccyooW1xcZC5dKyklKCxcXHMqXFxkKyhcXC5cXGQrKT8pKlxcKSQvaTtcbnZhciBpc1ZhbGlkSGV4U3RyaW5nID0gKHMpID0+IHtcbiAgcmV0dXJuICEhcy5tYXRjaChJU19IRVhfQ09MT1JfUkVHRVgpO1xufTtcbnZhciBpc1ZhbGlkUmdiYVN0cmluZyA9IChzKSA9PiB7XG4gIHJldHVybiAhIShzLm1hdGNoKElTX1JHQl9DT0xPUl9SRUdFWCkgfHwgcy5tYXRjaChJU19SR0JBX0NPTE9SX1JFR0VYKSk7XG59O1xudmFyIGlzVmFsaWRIc2xhU3RyaW5nID0gKHMpID0+IHtcbiAgcmV0dXJuICEhcy5tYXRjaChJU19IU0xfQ09MT1JfUkVHRVgpIHx8ICEhcy5tYXRjaChJU19IU0xBX0NPTE9SX1JFR0VYKTtcbn07XG52YXIgaXNSR0JDb2xvciA9IChjKSA9PiB7XG4gIHJldHVybiB0eXBlb2YgYyAhPT0gXCJzdHJpbmdcIiAmJiBcInJcIiBpbiBjO1xufTtcbnZhciBpc0hTTENvbG9yID0gKGMpID0+IHtcbiAgcmV0dXJuIHR5cGVvZiBjICE9PSBcInN0cmluZ1wiICYmIFwiaFwiIGluIGM7XG59O1xudmFyIGlzVHJhbnNwYXJlbnQgPSAoYykgPT4ge1xuICByZXR1cm4gYyA9PT0gXCJ0cmFuc3BhcmVudFwiO1xufTtcbnZhciBoYXNBbHBoYSA9IChjb2xvcikgPT4ge1xuICByZXR1cm4gdHlwZW9mIGNvbG9yICE9PSBcInN0cmluZ1wiICYmIGNvbG9yLmEgIT0gdm9pZCAwICYmIGNvbG9yLmEgPCAxO1xufTtcbnZhciBDTEVBTl9IU0xBX1JFR0VYID0gL1toc2xhKCldL2c7XG52YXIgQ0xFQU5fUkdCQV9SRUdFWCA9IC9bcmdiYSgpXS9nO1xudmFyIHN0cmluZ1RvSHNsYUNvbG9yID0gKHZhbHVlKSA9PiB7XG4gIGlmICh2YWx1ZSA9PT0gXCJ0cmFuc3BhcmVudFwiKSB7XG4gICAgcmV0dXJuIHsgaDogMCwgczogMCwgbDogMCwgYTogMCB9O1xuICB9XG4gIGlmIChpc1ZhbGlkSGV4U3RyaW5nKHZhbHVlKSkge1xuICAgIHJldHVybiBoZXhTdHJpbmdUb0hzbGFDb2xvcih2YWx1ZSk7XG4gIH1cbiAgaWYgKGlzVmFsaWRIc2xhU3RyaW5nKHZhbHVlKSkge1xuICAgIHJldHVybiBwYXJzZUhzbGFTdHJpbmcodmFsdWUpO1xuICB9XG4gIGlmIChpc1ZhbGlkUmdiYVN0cmluZyh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcmdiYVN0cmluZ1RvSHNsYUNvbG9yKHZhbHVlKTtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG52YXIgc3RyaW5nVG9TYW1lVHlwZUNvbG9yID0gKHZhbHVlKSA9PiB7XG4gIHZhbHVlID0gdmFsdWUudHJpbSgpO1xuICBpZiAoaXNWYWxpZEhleFN0cmluZyh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWUuc3RhcnRzV2l0aChcIiNcIikgPyB2YWx1ZSA6IGAjJHt2YWx1ZX1gO1xuICB9XG4gIGlmIChpc1ZhbGlkUmdiYVN0cmluZyh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcGFyc2VSZ2JhU3RyaW5nKHZhbHVlKTtcbiAgfVxuICBpZiAoaXNWYWxpZEhzbGFTdHJpbmcodmFsdWUpKSB7XG4gICAgcmV0dXJuIHBhcnNlSHNsYVN0cmluZyh2YWx1ZSk7XG4gIH1cbiAgaWYgKGlzVHJhbnNwYXJlbnQodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIHJldHVybiBcIlwiO1xufTtcbnZhciBjb2xvclRvU2FtZVR5cGVTdHJpbmcgPSAoY29sb3IpID0+IHtcbiAgaWYgKHR5cGVvZiBjb2xvciA9PT0gXCJzdHJpbmdcIiAmJiAoaXNWYWxpZEhleFN0cmluZyhjb2xvcikgfHwgaXNUcmFuc3BhcmVudChjb2xvcikpKSB7XG4gICAgcmV0dXJuIGNvbG9yO1xuICB9XG4gIGlmIChpc1JHQkNvbG9yKGNvbG9yKSkge1xuICAgIHJldHVybiByZ2JhQ29sb3JUb1JnYmFTdHJpbmcoY29sb3IpO1xuICB9XG4gIGlmIChpc0hTTENvbG9yKGNvbG9yKSkge1xuICAgIHJldHVybiBoc2xhQ29sb3JUb0hzbGFTdHJpbmcoY29sb3IpO1xuICB9XG4gIHJldHVybiBcIlwiO1xufTtcbnZhciBoZXhTdHJpbmdUb1JnYmFDb2xvciA9IChoZXgpID0+IHtcbiAgaGV4ID0gaGV4LnJlcGxhY2UoXCIjXCIsIFwiXCIpO1xuICBjb25zdCByID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZygwLCAyKSwgMTYpO1xuICBjb25zdCBnID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZygyLCA0KSwgMTYpO1xuICBjb25zdCBiID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZyg0LCA2KSwgMTYpO1xuICByZXR1cm4geyByLCBnLCBiIH07XG59O1xudmFyIHJnYmFDb2xvclRvUmdiYVN0cmluZyA9IChjb2xvcikgPT4ge1xuICBjb25zdCB7IGEsIGIsIGcsIHIgfSA9IGNvbG9yO1xuICByZXR1cm4gY29sb3IuYSA9PT0gMCA/IFwidHJhbnNwYXJlbnRcIiA6IGNvbG9yLmEgIT0gdm9pZCAwID8gYHJnYmEoJHtyfSwke2d9LCR7Yn0sJHthfSlgIDogYHJnYigke3J9LCR7Z30sJHtifSlgO1xufTtcbnZhciBoc2xhQ29sb3JUb0hzbGFTdHJpbmcgPSAoY29sb3IpID0+IHtcbiAgY29uc3QgeyBoLCBzLCBsLCBhIH0gPSBjb2xvcjtcbiAgY29uc3Qgc1BlcmMgPSBNYXRoLnJvdW5kKHMgKiAxMDApO1xuICBjb25zdCBsUGVyYyA9IE1hdGgucm91bmQobCAqIDEwMCk7XG4gIHJldHVybiBjb2xvci5hID09PSAwID8gXCJ0cmFuc3BhcmVudFwiIDogY29sb3IuYSAhPSB2b2lkIDAgPyBgaHNsYSgke2h9LCR7c1BlcmN9JSwke2xQZXJjfSUsJHthfSlgIDogYGhzbCgke2h9LCR7c1BlcmN9JSwke2xQZXJjfSUpYDtcbn07XG52YXIgaGV4U3RyaW5nVG9Ic2xhQ29sb3IgPSAoaGV4KSA9PiB7XG4gIGNvbnN0IHJnYmFTdHJpbmcgPSBjb2xvclRvU2FtZVR5cGVTdHJpbmcoaGV4U3RyaW5nVG9SZ2JhQ29sb3IoaGV4KSk7XG4gIHJldHVybiByZ2JhU3RyaW5nVG9Ic2xhQ29sb3IocmdiYVN0cmluZyk7XG59O1xudmFyIHJnYmFTdHJpbmdUb0hzbGFDb2xvciA9IChyZ2JhKSA9PiB7XG4gIGNvbnN0IHJnYmFDb2xvciA9IHBhcnNlUmdiYVN0cmluZyhyZ2JhKTtcbiAgY29uc3QgciA9IHJnYmFDb2xvci5yIC8gMjU1O1xuICBjb25zdCBnID0gcmdiYUNvbG9yLmcgLyAyNTU7XG4gIGNvbnN0IGIgPSByZ2JhQ29sb3IuYiAvIDI1NTtcbiAgY29uc3QgbWF4ID0gTWF0aC5tYXgociwgZywgYiksIG1pbiA9IE1hdGgubWluKHIsIGcsIGIpO1xuICBsZXQgaCwgcztcbiAgY29uc3QgbCA9IChtYXggKyBtaW4pIC8gMjtcbiAgaWYgKG1heCA9PSBtaW4pIHtcbiAgICBoID0gcyA9IDA7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgZCA9IG1heCAtIG1pbjtcbiAgICBzID0gbCA+PSAwLjUgPyBkIC8gKDIgLSAobWF4ICsgbWluKSkgOiBkIC8gKG1heCArIG1pbik7XG4gICAgc3dpdGNoIChtYXgpIHtcbiAgICAgIGNhc2UgcjpcbiAgICAgICAgaCA9IChnIC0gYikgLyBkICogNjA7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBnOlxuICAgICAgICBoID0gKChiIC0gcikgLyBkICsgMikgKiA2MDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBoID0gKChyIC0gZykgLyBkICsgNCkgKiA2MDtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIGNvbnN0IHJlcyA9IHsgaDogTWF0aC5yb3VuZChoKSwgcywgbCB9O1xuICBjb25zdCBhID0gcmdiYUNvbG9yLmE7XG4gIGlmIChhICE9IHZvaWQgMCkge1xuICAgIHJlcy5hID0gYTtcbiAgfVxuICByZXR1cm4gcmVzO1xufTtcbnZhciBwYXJzZVJnYmFTdHJpbmcgPSAoc3RyKSA9PiB7XG4gIGNvbnN0IFtyLCBnLCBiLCBhXSA9IHN0ci5yZXBsYWNlKENMRUFOX1JHQkFfUkVHRVgsIFwiXCIpLnNwbGl0KFwiLFwiKS5tYXAoKGMpID0+IE51bWJlci5wYXJzZUZsb2F0KGMpKTtcbiAgcmV0dXJuIHsgciwgZywgYiwgYSB9O1xufTtcbnZhciBwYXJzZUhzbGFTdHJpbmcgPSAoc3RyKSA9PiB7XG4gIGNvbnN0IFtoLCBzLCBsLCBhXSA9IHN0ci5yZXBsYWNlKENMRUFOX0hTTEFfUkVHRVgsIFwiXCIpLnNwbGl0KFwiLFwiKS5tYXAoKGMpID0+IE51bWJlci5wYXJzZUZsb2F0KGMpKTtcbiAgcmV0dXJuIHsgaCwgczogcyAvIDEwMCwgbDogbCAvIDEwMCwgYSB9O1xufTtcblxuZXhwb3J0IHtcbiAgaXNWYWxpZEhleFN0cmluZyxcbiAgaXNWYWxpZFJnYmFTdHJpbmcsXG4gIGlzVmFsaWRIc2xhU3RyaW5nLFxuICBpc1JHQkNvbG9yLFxuICBpc0hTTENvbG9yLFxuICBpc1RyYW5zcGFyZW50LFxuICBoYXNBbHBoYSxcbiAgc3RyaW5nVG9Ic2xhQ29sb3IsXG4gIHN0cmluZ1RvU2FtZVR5cGVDb2xvcixcbiAgY29sb3JUb1NhbWVUeXBlU3RyaW5nLFxuICBoZXhTdHJpbmdUb1JnYmFDb2xvclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVg2TkxJRjdZLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-X6NLIF7Y.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-XPYJQUM7.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-XPYJQUM7.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Poller: function() { return /* binding */ Poller; },\n/* harmony export */   createWorkerTimers: function() { return /* binding */ createWorkerTimers; },\n/* harmony export */   noop: function() { return /* binding */ noop; }\n/* harmony export */ });\n// src/utils/noop.ts\nvar noop = (..._args) => {\n};\n\n// src/workerTimers/workerTimers.worker.ts\nvar workerTimers_worker_default = 'const respond=r=>{self.postMessage(r)},workerToTabIds={};self.addEventListener(\"message\",r=>{const e=r.data;switch(e.type){case\"setTimeout\":workerToTabIds[e.id]=setTimeout(()=>{respond({id:e.id})},e.ms);break;case\"clearTimeout\":workerToTabIds[e.id]&&(clearTimeout(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break;case\"setInterval\":workerToTabIds[e.id]=setInterval(()=>{respond({id:e.id})},e.ms);break;case\"clearInterval\":workerToTabIds[e.id]&&(clearInterval(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break}});\\n';\n\n// src/workerTimers/createWorkerTimers.ts\nvar createWebWorker = (source, opts = {}) => {\n  if (typeof Worker === \"undefined\") {\n    return null;\n  }\n  try {\n    const blob = new Blob([source], { type: \"application/javascript; charset=utf-8\" });\n    const workerScript = globalThis.URL.createObjectURL(blob);\n    return new Worker(workerScript, opts);\n  } catch (e) {\n    console.warn(\"Clerk: Cannot create worker from blob. Consider adding worker-src blob:; to your CSP\");\n    return null;\n  }\n};\nvar fallbackTimers = () => {\n  const setTimeout = globalThis.setTimeout.bind(globalThis);\n  const setInterval = globalThis.setInterval.bind(globalThis);\n  const clearTimeout = globalThis.clearTimeout.bind(globalThis);\n  const clearInterval = globalThis.clearInterval.bind(globalThis);\n  return { setTimeout, setInterval, clearTimeout, clearInterval, cleanup: noop };\n};\nvar createWorkerTimers = () => {\n  let id = 0;\n  const generateId = () => id++;\n  const callbacks = /* @__PURE__ */ new Map();\n  const post = (w, p) => w == null ? void 0 : w.postMessage(p);\n  const handleMessage = (e) => {\n    var _a;\n    (_a = callbacks.get(e.data.id)) == null ? void 0 : _a();\n  };\n  let worker = createWebWorker(workerTimers_worker_default, { name: \"clerk-timers\" });\n  worker == null ? void 0 : worker.addEventListener(\"message\", handleMessage);\n  if (!worker) {\n    return fallbackTimers();\n  }\n  const init = () => {\n    if (!worker) {\n      worker = createWebWorker(workerTimers_worker_default, { name: \"clerk-timers\" });\n      worker == null ? void 0 : worker.addEventListener(\"message\", handleMessage);\n    }\n  };\n  const cleanup = () => {\n    if (worker) {\n      worker.terminate();\n      worker = null;\n      callbacks.clear();\n    }\n  };\n  const setTimeout = (cb, ms) => {\n    init();\n    const id2 = generateId();\n    callbacks.set(id2, cb);\n    post(worker, { type: \"setTimeout\", id: id2, ms });\n    return id2;\n  };\n  const setInterval = (cb, ms) => {\n    init();\n    const id2 = generateId();\n    callbacks.set(id2, cb);\n    post(worker, { type: \"setInterval\", id: id2, ms });\n    return id2;\n  };\n  const clearTimeout = (id2) => {\n    init();\n    callbacks.delete(id2);\n    post(worker, { type: \"clearTimeout\", id: id2 });\n  };\n  const clearInterval = (id2) => {\n    init();\n    callbacks.delete(id2);\n    post(worker, { type: \"clearInterval\", id: id2 });\n  };\n  return { setTimeout, setInterval, clearTimeout, clearInterval, cleanup };\n};\n\n// src/poller.ts\nfunction Poller({ delayInMs } = { delayInMs: 1e3 }) {\n  const workerTimers = createWorkerTimers();\n  let timerId;\n  let stopped = false;\n  const stop = () => {\n    if (timerId) {\n      workerTimers.clearTimeout(timerId);\n      workerTimers.cleanup();\n    }\n    stopped = true;\n  };\n  const run = async (cb) => {\n    stopped = false;\n    await cb(stop);\n    if (stopped) {\n      return;\n    }\n    timerId = workerTimers.setTimeout(() => {\n      void run(cb);\n    }, delayInMs);\n  };\n  return { run, stop };\n}\n\n\n//# sourceMappingURL=chunk-XPYJQUM7.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstWFBZSlFVTTcubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFEQUFxRCxvQkFBb0IsbUJBQW1CLG9DQUFvQyxlQUFlLGVBQWUsc0RBQXNELFNBQVMsUUFBUSxFQUFFLE9BQU8sTUFBTSwwR0FBMEcsTUFBTSx3REFBd0QsU0FBUyxRQUFRLEVBQUUsT0FBTyxNQUFNLDRHQUE0RyxPQUFPLEVBQUU7O0FBRWpqQjtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQywrQkFBK0IsZ0JBQWdCO0FBQ3JGO0FBQ0E7QUFDQSxJQUFJO0FBQ0osMkZBQTJGO0FBQzNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsc0JBQXNCO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxzQkFBc0I7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixpQ0FBaUM7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGtDQUFrQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLCtCQUErQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnQ0FBZ0M7QUFDbkQ7QUFDQSxXQUFXO0FBQ1g7O0FBRUE7QUFDQSxrQkFBa0IsWUFBWSxJQUFJLGdCQUFnQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxXQUFXO0FBQ1g7O0FBTUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLVhQWUpRVU03Lm1qcz9iYmJlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy9ub29wLnRzXG52YXIgbm9vcCA9ICguLi5fYXJncykgPT4ge1xufTtcblxuLy8gc3JjL3dvcmtlclRpbWVycy93b3JrZXJUaW1lcnMud29ya2VyLnRzXG52YXIgd29ya2VyVGltZXJzX3dvcmtlcl9kZWZhdWx0ID0gJ2NvbnN0IHJlc3BvbmQ9cj0+e3NlbGYucG9zdE1lc3NhZ2Uocil9LHdvcmtlclRvVGFiSWRzPXt9O3NlbGYuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixyPT57Y29uc3QgZT1yLmRhdGE7c3dpdGNoKGUudHlwZSl7Y2FzZVwic2V0VGltZW91dFwiOndvcmtlclRvVGFiSWRzW2UuaWRdPXNldFRpbWVvdXQoKCk9PntyZXNwb25kKHtpZDplLmlkfSl9LGUubXMpO2JyZWFrO2Nhc2VcImNsZWFyVGltZW91dFwiOndvcmtlclRvVGFiSWRzW2UuaWRdJiYoY2xlYXJUaW1lb3V0KHdvcmtlclRvVGFiSWRzW2UuaWRdKSxkZWxldGUgd29ya2VyVG9UYWJJZHNbZS5pZF0pO2JyZWFrO2Nhc2VcInNldEludGVydmFsXCI6d29ya2VyVG9UYWJJZHNbZS5pZF09c2V0SW50ZXJ2YWwoKCk9PntyZXNwb25kKHtpZDplLmlkfSl9LGUubXMpO2JyZWFrO2Nhc2VcImNsZWFySW50ZXJ2YWxcIjp3b3JrZXJUb1RhYklkc1tlLmlkXSYmKGNsZWFySW50ZXJ2YWwod29ya2VyVG9UYWJJZHNbZS5pZF0pLGRlbGV0ZSB3b3JrZXJUb1RhYklkc1tlLmlkXSk7YnJlYWt9fSk7XFxuJztcblxuLy8gc3JjL3dvcmtlclRpbWVycy9jcmVhdGVXb3JrZXJUaW1lcnMudHNcbnZhciBjcmVhdGVXZWJXb3JrZXIgPSAoc291cmNlLCBvcHRzID0ge30pID0+IHtcbiAgaWYgKHR5cGVvZiBXb3JrZXIgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB0cnkge1xuICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbc291cmNlXSwgeyB0eXBlOiBcImFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7IGNoYXJzZXQ9dXRmLThcIiB9KTtcbiAgICBjb25zdCB3b3JrZXJTY3JpcHQgPSBnbG9iYWxUaGlzLlVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG4gICAgcmV0dXJuIG5ldyBXb3JrZXIod29ya2VyU2NyaXB0LCBvcHRzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUud2FybihcIkNsZXJrOiBDYW5ub3QgY3JlYXRlIHdvcmtlciBmcm9tIGJsb2IuIENvbnNpZGVyIGFkZGluZyB3b3JrZXItc3JjIGJsb2I6OyB0byB5b3VyIENTUFwiKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufTtcbnZhciBmYWxsYmFja1RpbWVycyA9ICgpID0+IHtcbiAgY29uc3Qgc2V0VGltZW91dCA9IGdsb2JhbFRoaXMuc2V0VGltZW91dC5iaW5kKGdsb2JhbFRoaXMpO1xuICBjb25zdCBzZXRJbnRlcnZhbCA9IGdsb2JhbFRoaXMuc2V0SW50ZXJ2YWwuYmluZChnbG9iYWxUaGlzKTtcbiAgY29uc3QgY2xlYXJUaW1lb3V0ID0gZ2xvYmFsVGhpcy5jbGVhclRpbWVvdXQuYmluZChnbG9iYWxUaGlzKTtcbiAgY29uc3QgY2xlYXJJbnRlcnZhbCA9IGdsb2JhbFRoaXMuY2xlYXJJbnRlcnZhbC5iaW5kKGdsb2JhbFRoaXMpO1xuICByZXR1cm4geyBzZXRUaW1lb3V0LCBzZXRJbnRlcnZhbCwgY2xlYXJUaW1lb3V0LCBjbGVhckludGVydmFsLCBjbGVhbnVwOiBub29wIH07XG59O1xudmFyIGNyZWF0ZVdvcmtlclRpbWVycyA9ICgpID0+IHtcbiAgbGV0IGlkID0gMDtcbiAgY29uc3QgZ2VuZXJhdGVJZCA9ICgpID0+IGlkKys7XG4gIGNvbnN0IGNhbGxiYWNrcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIGNvbnN0IHBvc3QgPSAodywgcCkgPT4gdyA9PSBudWxsID8gdm9pZCAwIDogdy5wb3N0TWVzc2FnZShwKTtcbiAgY29uc3QgaGFuZGxlTWVzc2FnZSA9IChlKSA9PiB7XG4gICAgdmFyIF9hO1xuICAgIChfYSA9IGNhbGxiYWNrcy5nZXQoZS5kYXRhLmlkKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hKCk7XG4gIH07XG4gIGxldCB3b3JrZXIgPSBjcmVhdGVXZWJXb3JrZXIod29ya2VyVGltZXJzX3dvcmtlcl9kZWZhdWx0LCB7IG5hbWU6IFwiY2xlcmstdGltZXJzXCIgfSk7XG4gIHdvcmtlciA9PSBudWxsID8gdm9pZCAwIDogd29ya2VyLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGhhbmRsZU1lc3NhZ2UpO1xuICBpZiAoIXdvcmtlcikge1xuICAgIHJldHVybiBmYWxsYmFja1RpbWVycygpO1xuICB9XG4gIGNvbnN0IGluaXQgPSAoKSA9PiB7XG4gICAgaWYgKCF3b3JrZXIpIHtcbiAgICAgIHdvcmtlciA9IGNyZWF0ZVdlYldvcmtlcih3b3JrZXJUaW1lcnNfd29ya2VyX2RlZmF1bHQsIHsgbmFtZTogXCJjbGVyay10aW1lcnNcIiB9KTtcbiAgICAgIHdvcmtlciA9PSBudWxsID8gdm9pZCAwIDogd29ya2VyLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGhhbmRsZU1lc3NhZ2UpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgY2xlYW51cCA9ICgpID0+IHtcbiAgICBpZiAod29ya2VyKSB7XG4gICAgICB3b3JrZXIudGVybWluYXRlKCk7XG4gICAgICB3b3JrZXIgPSBudWxsO1xuICAgICAgY2FsbGJhY2tzLmNsZWFyKCk7XG4gICAgfVxuICB9O1xuICBjb25zdCBzZXRUaW1lb3V0ID0gKGNiLCBtcykgPT4ge1xuICAgIGluaXQoKTtcbiAgICBjb25zdCBpZDIgPSBnZW5lcmF0ZUlkKCk7XG4gICAgY2FsbGJhY2tzLnNldChpZDIsIGNiKTtcbiAgICBwb3N0KHdvcmtlciwgeyB0eXBlOiBcInNldFRpbWVvdXRcIiwgaWQ6IGlkMiwgbXMgfSk7XG4gICAgcmV0dXJuIGlkMjtcbiAgfTtcbiAgY29uc3Qgc2V0SW50ZXJ2YWwgPSAoY2IsIG1zKSA9PiB7XG4gICAgaW5pdCgpO1xuICAgIGNvbnN0IGlkMiA9IGdlbmVyYXRlSWQoKTtcbiAgICBjYWxsYmFja3Muc2V0KGlkMiwgY2IpO1xuICAgIHBvc3Qod29ya2VyLCB7IHR5cGU6IFwic2V0SW50ZXJ2YWxcIiwgaWQ6IGlkMiwgbXMgfSk7XG4gICAgcmV0dXJuIGlkMjtcbiAgfTtcbiAgY29uc3QgY2xlYXJUaW1lb3V0ID0gKGlkMikgPT4ge1xuICAgIGluaXQoKTtcbiAgICBjYWxsYmFja3MuZGVsZXRlKGlkMik7XG4gICAgcG9zdCh3b3JrZXIsIHsgdHlwZTogXCJjbGVhclRpbWVvdXRcIiwgaWQ6IGlkMiB9KTtcbiAgfTtcbiAgY29uc3QgY2xlYXJJbnRlcnZhbCA9IChpZDIpID0+IHtcbiAgICBpbml0KCk7XG4gICAgY2FsbGJhY2tzLmRlbGV0ZShpZDIpO1xuICAgIHBvc3Qod29ya2VyLCB7IHR5cGU6IFwiY2xlYXJJbnRlcnZhbFwiLCBpZDogaWQyIH0pO1xuICB9O1xuICByZXR1cm4geyBzZXRUaW1lb3V0LCBzZXRJbnRlcnZhbCwgY2xlYXJUaW1lb3V0LCBjbGVhckludGVydmFsLCBjbGVhbnVwIH07XG59O1xuXG4vLyBzcmMvcG9sbGVyLnRzXG5mdW5jdGlvbiBQb2xsZXIoeyBkZWxheUluTXMgfSA9IHsgZGVsYXlJbk1zOiAxZTMgfSkge1xuICBjb25zdCB3b3JrZXJUaW1lcnMgPSBjcmVhdGVXb3JrZXJUaW1lcnMoKTtcbiAgbGV0IHRpbWVySWQ7XG4gIGxldCBzdG9wcGVkID0gZmFsc2U7XG4gIGNvbnN0IHN0b3AgPSAoKSA9PiB7XG4gICAgaWYgKHRpbWVySWQpIHtcbiAgICAgIHdvcmtlclRpbWVycy5jbGVhclRpbWVvdXQodGltZXJJZCk7XG4gICAgICB3b3JrZXJUaW1lcnMuY2xlYW51cCgpO1xuICAgIH1cbiAgICBzdG9wcGVkID0gdHJ1ZTtcbiAgfTtcbiAgY29uc3QgcnVuID0gYXN5bmMgKGNiKSA9PiB7XG4gICAgc3RvcHBlZCA9IGZhbHNlO1xuICAgIGF3YWl0IGNiKHN0b3ApO1xuICAgIGlmIChzdG9wcGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRpbWVySWQgPSB3b3JrZXJUaW1lcnMuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB2b2lkIHJ1bihjYik7XG4gICAgfSwgZGVsYXlJbk1zKTtcbiAgfTtcbiAgcmV0dXJuIHsgcnVuLCBzdG9wIH07XG59XG5cbmV4cG9ydCB7XG4gIG5vb3AsXG4gIGNyZWF0ZVdvcmtlclRpbWVycyxcbiAgUG9sbGVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstWFBZSlFVTTcubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-XPYJQUM7.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/constants.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/constants.mjs ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURRENT_DEV_INSTANCE_SUFFIXES: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.CURRENT_DEV_INSTANCE_SUFFIXES; },\n/* harmony export */   DEV_OR_STAGING_SUFFIXES: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.DEV_OR_STAGING_SUFFIXES; },\n/* harmony export */   LEGACY_DEV_INSTANCE_SUFFIXES: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.LEGACY_DEV_INSTANCE_SUFFIXES; },\n/* harmony export */   LOCAL_API_URL: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.LOCAL_API_URL; },\n/* harmony export */   LOCAL_ENV_SUFFIXES: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.LOCAL_ENV_SUFFIXES; },\n/* harmony export */   PROD_API_URL: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.PROD_API_URL; },\n/* harmony export */   STAGING_API_URL: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.STAGING_API_URL; },\n/* harmony export */   STAGING_ENV_SUFFIXES: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.STAGING_ENV_SUFFIXES; },\n/* harmony export */   iconImageUrl: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.iconImageUrl; }\n/* harmony export */ });\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=constants.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY29uc3RhbnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQVU4QjtBQUNBO0FBVzVCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jb25zdGFudHMubWpzPzJjZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMsXG4gIERFVl9PUl9TVEFHSU5HX1NVRkZJWEVTLFxuICBMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTLFxuICBMT0NBTF9BUElfVVJMLFxuICBMT0NBTF9FTlZfU1VGRklYRVMsXG4gIFBST0RfQVBJX1VSTCxcbiAgU1RBR0lOR19BUElfVVJMLFxuICBTVEFHSU5HX0VOVl9TVUZGSVhFUyxcbiAgaWNvbkltYWdlVXJsXG59IGZyb20gXCIuL2NodW5rLUk2TVRTVE9GLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIENVUlJFTlRfREVWX0lOU1RBTkNFX1NVRkZJWEVTLFxuICBERVZfT1JfU1RBR0lOR19TVUZGSVhFUyxcbiAgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyxcbiAgTE9DQUxfQVBJX1VSTCxcbiAgTE9DQUxfRU5WX1NVRkZJWEVTLFxuICBQUk9EX0FQSV9VUkwsXG4gIFNUQUdJTkdfQVBJX1VSTCxcbiAgU1RBR0lOR19FTlZfU1VGRklYRVMsXG4gIGljb25JbWFnZVVybFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/constants.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/error.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/error.mjs ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkAPIResponseError; },\n/* harmony export */   ClerkRuntimeError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkRuntimeError; },\n/* harmony export */   EmailLinkError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkError; },\n/* harmony export */   EmailLinkErrorCode: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkErrorCode; },\n/* harmony export */   buildErrorThrower: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.buildErrorThrower; },\n/* harmony export */   is4xxError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.is4xxError; },\n/* harmony export */   isCaptchaError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.isCaptchaError; },\n/* harmony export */   isClerkAPIResponseError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkAPIResponseError; },\n/* harmony export */   isClerkRuntimeError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkRuntimeError; },\n/* harmony export */   isEmailLinkError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.isEmailLinkError; },\n/* harmony export */   isKnownError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.isKnownError; },\n/* harmony export */   isMetamaskError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.isMetamaskError; },\n/* harmony export */   isNetworkError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.isNetworkError; },\n/* harmony export */   isPasswordPwnedError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.isPasswordPwnedError; },\n/* harmony export */   isUnauthorizedError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.isUnauthorizedError; },\n/* harmony export */   isUserLockedError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.isUserLockedError; },\n/* harmony export */   parseError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.parseError; },\n/* harmony export */   parseErrors: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__.parseErrors; }\n/* harmony export */ });\n/* harmony import */ var _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-T4WHYQYX.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-T4WHYQYX.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=error.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvZXJyb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUI4QjtBQUNBO0FBb0I1QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvZXJyb3IubWpzP2E2MjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBDbGVya1J1bnRpbWVFcnJvcixcbiAgRW1haWxMaW5rRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yQ29kZSxcbiAgYnVpbGRFcnJvclRocm93ZXIsXG4gIGlzNHh4RXJyb3IsXG4gIGlzQ2FwdGNoYUVycm9yLFxuICBpc0NsZXJrQVBJUmVzcG9uc2VFcnJvcixcbiAgaXNDbGVya1J1bnRpbWVFcnJvcixcbiAgaXNFbWFpbExpbmtFcnJvcixcbiAgaXNLbm93bkVycm9yLFxuICBpc01ldGFtYXNrRXJyb3IsXG4gIGlzTmV0d29ya0Vycm9yLFxuICBpc1Bhc3N3b3JkUHduZWRFcnJvcixcbiAgaXNVbmF1dGhvcml6ZWRFcnJvcixcbiAgaXNVc2VyTG9ja2VkRXJyb3IsXG4gIHBhcnNlRXJyb3IsXG4gIHBhcnNlRXJyb3JzXG59IGZyb20gXCIuL2NodW5rLVQ0V0hZUVlYLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIENsZXJrQVBJUmVzcG9uc2VFcnJvcixcbiAgQ2xlcmtSdW50aW1lRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yLFxuICBFbWFpbExpbmtFcnJvckNvZGUsXG4gIGJ1aWxkRXJyb3JUaHJvd2VyLFxuICBpczR4eEVycm9yLFxuICBpc0NhcHRjaGFFcnJvcixcbiAgaXNDbGVya0FQSVJlc3BvbnNlRXJyb3IsXG4gIGlzQ2xlcmtSdW50aW1lRXJyb3IsXG4gIGlzRW1haWxMaW5rRXJyb3IsXG4gIGlzS25vd25FcnJvcixcbiAgaXNNZXRhbWFza0Vycm9yLFxuICBpc05ldHdvcmtFcnJvcixcbiAgaXNQYXNzd29yZFB3bmVkRXJyb3IsXG4gIGlzVW5hdXRob3JpemVkRXJyb3IsXG4gIGlzVXNlckxvY2tlZEVycm9yLFxuICBwYXJzZUVycm9yLFxuICBwYXJzZUVycm9yc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/error.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/handleValueOrFn.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/handleValueOrFn.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleValueOrFn: function() { return /* reexport safe */ _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_0__.handleValueOrFn; }\n/* harmony export */ });\n/* harmony import */ var _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TRWMHODU.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=handleValueOrFn.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvaGFuZGxlVmFsdWVPckZuLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFOEI7QUFDQTtBQUc1QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvaGFuZGxlVmFsdWVPckZuLm1qcz8xYjZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGhhbmRsZVZhbHVlT3JGblxufSBmcm9tIFwiLi9jaHVuay1UUldNSE9EVS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5leHBvcnQge1xuICBoYW5kbGVWYWx1ZU9yRm5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYW5kbGVWYWx1ZU9yRm4ubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/handleValueOrFn.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/index.mjs ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURRENT_DEV_INSTANCE_SUFFIXES: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_24__.CURRENT_DEV_INSTANCE_SUFFIXES; },\n/* harmony export */   ClerkAPIResponseError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.ClerkAPIResponseError; },\n/* harmony export */   ClerkRuntimeError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.ClerkRuntimeError; },\n/* harmony export */   DEV_BROWSER_JWT_KEY: function() { return /* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_12__.DEV_BROWSER_JWT_KEY; },\n/* harmony export */   DEV_OR_STAGING_SUFFIXES: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_24__.DEV_OR_STAGING_SUFFIXES; },\n/* harmony export */   EmailLinkError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.EmailLinkError; },\n/* harmony export */   EmailLinkErrorCode: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.EmailLinkErrorCode; },\n/* harmony export */   LEGACY_DEV_INSTANCE_SUFFIXES: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_24__.LEGACY_DEV_INSTANCE_SUFFIXES; },\n/* harmony export */   LOCAL_API_URL: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_24__.LOCAL_API_URL; },\n/* harmony export */   LOCAL_ENV_SUFFIXES: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_24__.LOCAL_ENV_SUFFIXES; },\n/* harmony export */   LocalStorageBroadcastChannel: function() { return /* reexport safe */ _chunk_RSOCGYTF_mjs__WEBPACK_IMPORTED_MODULE_8__.LocalStorageBroadcastChannel; },\n/* harmony export */   PROD_API_URL: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_24__.PROD_API_URL; },\n/* harmony export */   Poller: function() { return /* reexport safe */ _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_1__.Poller; },\n/* harmony export */   STAGING_API_URL: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_24__.STAGING_API_URL; },\n/* harmony export */   STAGING_ENV_SUFFIXES: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_24__.STAGING_ENV_SUFFIXES; },\n/* harmony export */   addClerkPrefix: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.addClerkPrefix; },\n/* harmony export */   addYears: function() { return /* reexport safe */ _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_25__.addYears; },\n/* harmony export */   apiUrlFromPublishableKey: function() { return /* reexport safe */ _chunk_QPSU45F4_mjs__WEBPACK_IMPORTED_MODULE_17__.apiUrlFromPublishableKey; },\n/* harmony export */   applyFunctionToObj: function() { return /* reexport safe */ _chunk_CFXQSUF6_mjs__WEBPACK_IMPORTED_MODULE_0__.applyFunctionToObj; },\n/* harmony export */   buildClerkJsScriptAttributes: function() { return /* reexport safe */ _chunk_2JIRKKG7_mjs__WEBPACK_IMPORTED_MODULE_3__.buildClerkJsScriptAttributes; },\n/* harmony export */   buildErrorThrower: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.buildErrorThrower; },\n/* harmony export */   buildPublishableKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_18__.buildPublishableKey; },\n/* harmony export */   callWithRetry: function() { return /* reexport safe */ _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_22__.callWithRetry; },\n/* harmony export */   camelToSnake: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_2__.camelToSnake; },\n/* harmony export */   cleanDoubleSlashes: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.cleanDoubleSlashes; },\n/* harmony export */   clerkJsScriptUrl: function() { return /* reexport safe */ _chunk_2JIRKKG7_mjs__WEBPACK_IMPORTED_MODULE_3__.clerkJsScriptUrl; },\n/* harmony export */   colorToSameTypeString: function() { return /* reexport safe */ _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__.colorToSameTypeString; },\n/* harmony export */   createDeferredPromise: function() { return /* binding */ createDeferredPromise; },\n/* harmony export */   createDevOrStagingUrlCache: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_18__.createDevOrStagingUrlCache; },\n/* harmony export */   createWorkerTimers: function() { return /* reexport safe */ _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_1__.createWorkerTimers; },\n/* harmony export */   dateTo12HourTime: function() { return /* reexport safe */ _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_25__.dateTo12HourTime; },\n/* harmony export */   deepCamelToSnake: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_2__.deepCamelToSnake; },\n/* harmony export */   deepSnakeToCamel: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_2__.deepSnakeToCamel; },\n/* harmony export */   deprecated: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_10__.deprecated; },\n/* harmony export */   deprecatedObjectProperty: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_10__.deprecatedObjectProperty; },\n/* harmony export */   deprecatedProperty: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_10__.deprecatedProperty; },\n/* harmony export */   deriveState: function() { return /* reexport safe */ _chunk_6NISCHKC_mjs__WEBPACK_IMPORTED_MODULE_11__.deriveState; },\n/* harmony export */   differenceInCalendarDays: function() { return /* reexport safe */ _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_25__.differenceInCalendarDays; },\n/* harmony export */   extension: function() { return /* reexport safe */ _chunk_5JU2E5TY_mjs__WEBPACK_IMPORTED_MODULE_15__.extension; },\n/* harmony export */   extractDevBrowserJWTFromURL: function() { return /* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_12__.extractDevBrowserJWTFromURL; },\n/* harmony export */   fastDeepMergeAndKeep: function() { return /* reexport safe */ _chunk_4LL2VPJL_mjs__WEBPACK_IMPORTED_MODULE_14__.fastDeepMergeAndKeep; },\n/* harmony export */   fastDeepMergeAndReplace: function() { return /* reexport safe */ _chunk_4LL2VPJL_mjs__WEBPACK_IMPORTED_MODULE_14__.fastDeepMergeAndReplace; },\n/* harmony export */   filterProps: function() { return /* reexport safe */ _chunk_CFXQSUF6_mjs__WEBPACK_IMPORTED_MODULE_0__.filterProps; },\n/* harmony export */   formatRelative: function() { return /* reexport safe */ _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_25__.formatRelative; },\n/* harmony export */   getClerkJsMajorVersionOrTag: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.getClerkJsMajorVersionOrTag; },\n/* harmony export */   getCookieSuffix: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_18__.getCookieSuffix; },\n/* harmony export */   getNonUndefinedValues: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_2__.getNonUndefinedValues; },\n/* harmony export */   getScriptUrl: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.getScriptUrl; },\n/* harmony export */   getSuffixedCookieName: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_18__.getSuffixedCookieName; },\n/* harmony export */   handleValueOrFn: function() { return /* reexport safe */ _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_16__.handleValueOrFn; },\n/* harmony export */   hasAlpha: function() { return /* reexport safe */ _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__.hasAlpha; },\n/* harmony export */   hasLeadingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.hasLeadingSlash; },\n/* harmony export */   hasTrailingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.hasTrailingSlash; },\n/* harmony export */   hexStringToRgbaColor: function() { return /* reexport safe */ _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__.hexStringToRgbaColor; },\n/* harmony export */   iconImageUrl: function() { return /* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_24__.iconImageUrl; },\n/* harmony export */   inBrowser: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_21__.inBrowser; },\n/* harmony export */   is4xxError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.is4xxError; },\n/* harmony export */   isAbsoluteUrl: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.isAbsoluteUrl; },\n/* harmony export */   isBrowserOnline: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_21__.isBrowserOnline; },\n/* harmony export */   isCaptchaError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.isCaptchaError; },\n/* harmony export */   isClerkAPIResponseError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.isClerkAPIResponseError; },\n/* harmony export */   isClerkRuntimeError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.isClerkRuntimeError; },\n/* harmony export */   isCurrentDevAccountPortalOrigin: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.isCurrentDevAccountPortalOrigin; },\n/* harmony export */   isDevelopmentEnvironment: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_10__.isDevelopmentEnvironment; },\n/* harmony export */   isDevelopmentFromPublishableKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_18__.isDevelopmentFromPublishableKey; },\n/* harmony export */   isDevelopmentFromSecretKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_18__.isDevelopmentFromSecretKey; },\n/* harmony export */   isEmailLinkError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.isEmailLinkError; },\n/* harmony export */   isHSLColor: function() { return /* reexport safe */ _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__.isHSLColor; },\n/* harmony export */   isHttpOrHttps: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_5__.isHttpOrHttps; },\n/* harmony export */   isIPV4Address: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_2__.isIPV4Address; },\n/* harmony export */   isKnownError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.isKnownError; },\n/* harmony export */   isLegacyDevAccountPortalOrigin: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.isLegacyDevAccountPortalOrigin; },\n/* harmony export */   isMetamaskError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.isMetamaskError; },\n/* harmony export */   isNetworkError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.isNetworkError; },\n/* harmony export */   isNonEmptyURL: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.isNonEmptyURL; },\n/* harmony export */   isPasswordPwnedError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.isPasswordPwnedError; },\n/* harmony export */   isProductionEnvironment: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_10__.isProductionEnvironment; },\n/* harmony export */   isProductionFromPublishableKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_18__.isProductionFromPublishableKey; },\n/* harmony export */   isProductionFromSecretKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_18__.isProductionFromSecretKey; },\n/* harmony export */   isProxyUrlRelative: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_5__.isProxyUrlRelative; },\n/* harmony export */   isPublishableKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_18__.isPublishableKey; },\n/* harmony export */   isRGBColor: function() { return /* reexport safe */ _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__.isRGBColor; },\n/* harmony export */   isStaging: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.isStaging; },\n/* harmony export */   isTestEnvironment: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_10__.isTestEnvironment; },\n/* harmony export */   isTransparent: function() { return /* reexport safe */ _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__.isTransparent; },\n/* harmony export */   isTruthy: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_2__.isTruthy; },\n/* harmony export */   isUnauthorizedError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.isUnauthorizedError; },\n/* harmony export */   isUserLockedError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.isUserLockedError; },\n/* harmony export */   isValidBrowser: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_21__.isValidBrowser; },\n/* harmony export */   isValidBrowserOnline: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_21__.isValidBrowserOnline; },\n/* harmony export */   isValidHexString: function() { return /* reexport safe */ _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__.isValidHexString; },\n/* harmony export */   isValidHslaString: function() { return /* reexport safe */ _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__.isValidHslaString; },\n/* harmony export */   isValidProxyUrl: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_5__.isValidProxyUrl; },\n/* harmony export */   isValidRgbaString: function() { return /* reexport safe */ _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__.isValidRgbaString; },\n/* harmony export */   isomorphicAtob: function() { return /* reexport safe */ _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_19__.isomorphicAtob; },\n/* harmony export */   isomorphicBtoa: function() { return /* reexport safe */ _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_20__.isomorphicBtoa; },\n/* harmony export */   joinURL: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.joinURL; },\n/* harmony export */   loadClerkJsScript: function() { return /* reexport safe */ _chunk_2JIRKKG7_mjs__WEBPACK_IMPORTED_MODULE_3__.loadClerkJsScript; },\n/* harmony export */   loadScript: function() { return /* reexport safe */ _chunk_DSMUR7RM_mjs__WEBPACK_IMPORTED_MODULE_7__.loadScript; },\n/* harmony export */   logErrorInDevMode: function() { return /* binding */ logErrorInDevMode; },\n/* harmony export */   logger: function() { return /* reexport safe */ _chunk_CYDR2ZSA_mjs__WEBPACK_IMPORTED_MODULE_9__.logger; },\n/* harmony export */   noop: function() { return /* reexport safe */ _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_1__.noop; },\n/* harmony export */   normalizeDate: function() { return /* reexport safe */ _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_25__.normalizeDate; },\n/* harmony export */   parseError: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.parseError; },\n/* harmony export */   parseErrors: function() { return /* reexport safe */ _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__.parseErrors; },\n/* harmony export */   parsePublishableKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_18__.parsePublishableKey; },\n/* harmony export */   parseSearchParams: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.parseSearchParams; },\n/* harmony export */   proxyUrlToAbsoluteURL: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_5__.proxyUrlToAbsoluteURL; },\n/* harmony export */   readJSONFile: function() { return /* reexport safe */ _chunk_5JU2E5TY_mjs__WEBPACK_IMPORTED_MODULE_15__.readJSONFile; },\n/* harmony export */   removeUndefined: function() { return /* reexport safe */ _chunk_CFXQSUF6_mjs__WEBPACK_IMPORTED_MODULE_0__.removeUndefined; },\n/* harmony export */   runWithExponentialBackOff: function() { return /* binding */ runWithExponentialBackOff; },\n/* harmony export */   setClerkJsLoadingErrorPackageName: function() { return /* reexport safe */ _chunk_2JIRKKG7_mjs__WEBPACK_IMPORTED_MODULE_3__.setClerkJsLoadingErrorPackageName; },\n/* harmony export */   setDevBrowserJWTInURL: function() { return /* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_12__.setDevBrowserJWTInURL; },\n/* harmony export */   snakeToCamel: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_2__.snakeToCamel; },\n/* harmony export */   stringToHslaColor: function() { return /* reexport safe */ _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__.stringToHslaColor; },\n/* harmony export */   stringToSameTypeColor: function() { return /* reexport safe */ _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__.stringToSameTypeColor; },\n/* harmony export */   stripScheme: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.stripScheme; },\n/* harmony export */   titleize: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_2__.titleize; },\n/* harmony export */   toSentence: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_2__.toSentence; },\n/* harmony export */   userAgentIsRobot: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_21__.userAgentIsRobot; },\n/* harmony export */   versionSelector: function() { return /* reexport safe */ _chunk_6BC7W54O_mjs__WEBPACK_IMPORTED_MODULE_4__.versionSelector; },\n/* harmony export */   withLeadingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.withLeadingSlash; },\n/* harmony export */   withTrailingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.withTrailingSlash; },\n/* harmony export */   without: function() { return /* reexport safe */ _chunk_CFXQSUF6_mjs__WEBPACK_IMPORTED_MODULE_0__.without; },\n/* harmony export */   withoutLeadingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.withoutLeadingSlash; },\n/* harmony export */   withoutTrailingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__.withoutTrailingSlash; }\n/* harmony export */ });\n/* harmony import */ var _chunk_CFXQSUF6_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-CFXQSUF6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-CFXQSUF6.mjs\");\n/* harmony import */ var _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-XPYJQUM7.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-XPYJQUM7.mjs\");\n/* harmony import */ var _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-QE2A7CJI.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QE2A7CJI.mjs\");\n/* harmony import */ var _chunk_2JIRKKG7_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-2JIRKKG7.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-2JIRKKG7.mjs\");\n/* harmony import */ var _chunk_6BC7W54O_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-6BC7W54O.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6BC7W54O.mjs\");\n/* harmony import */ var _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-6NDGN2IU.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs\");\n/* harmony import */ var _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chunk-Q2DOGLDC.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-Q2DOGLDC.mjs\");\n/* harmony import */ var _chunk_DSMUR7RM_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chunk-DSMUR7RM.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-DSMUR7RM.mjs\");\n/* harmony import */ var _chunk_RSOCGYTF_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./chunk-RSOCGYTF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-RSOCGYTF.mjs\");\n/* harmony import */ var _chunk_CYDR2ZSA_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./chunk-CYDR2ZSA.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs\");\n/* harmony import */ var _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./chunk-IC4FGZI3.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs\");\n/* harmony import */ var _chunk_6NISCHKC_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./chunk-6NISCHKC.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6NISCHKC.mjs\");\n/* harmony import */ var _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./chunk-K64INQ4C.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs\");\n/* harmony import */ var _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./chunk-T4WHYQYX.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-T4WHYQYX.mjs\");\n/* harmony import */ var _chunk_4LL2VPJL_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./chunk-4LL2VPJL.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-4LL2VPJL.mjs\");\n/* harmony import */ var _chunk_5JU2E5TY_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./chunk-5JU2E5TY.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-5JU2E5TY.mjs\");\n/* harmony import */ var _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./chunk-TRWMHODU.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs\");\n/* harmony import */ var _chunk_QPSU45F4_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./chunk-QPSU45F4.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QPSU45F4.mjs\");\n/* harmony import */ var _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./chunk-L2BNNARM.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-L2BNNARM.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./chunk-LJ4R7M7R.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-LJ4R7M7R.mjs\");\n/* harmony import */ var _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./chunk-4PW5MDZA.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\");\n/* harmony import */ var _chunk_X6NLIF7Y_mjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./chunk-X6NLIF7Y.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-X6NLIF7Y.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./chunk-FSKKI4LG.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-FSKKI4LG.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// src/utils/createDeferredPromise.ts\nvar createDeferredPromise = () => {\n  let resolve = _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_1__.noop;\n  let reject = _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_1__.noop;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return { promise, resolve, reject };\n};\n\n// src/utils/logErrorInDevMode.ts\nvar logErrorInDevMode = (message) => {\n  if ((0,_chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_10__.isDevelopmentEnvironment)()) {\n    console.error(`Clerk: ${message}`);\n  }\n};\n\n// src/utils/runWithExponentialBackOff.ts\nvar defaultOptions = {\n  firstDelay: 125,\n  maxDelay: 0,\n  timeMultiple: 2,\n  shouldRetry: () => true\n};\nvar sleep = async (ms) => new Promise((s) => setTimeout(s, ms));\nvar createExponentialDelayAsyncFn = (opts) => {\n  let timesCalled = 0;\n  const calculateDelayInMs = () => {\n    const constant = opts.firstDelay;\n    const base = opts.timeMultiple;\n    const delay = constant * Math.pow(base, timesCalled);\n    return Math.min(opts.maxDelay || delay, delay);\n  };\n  return async () => {\n    await sleep(calculateDelayInMs());\n    timesCalled++;\n  };\n};\nvar runWithExponentialBackOff = async (callback, options = {}) => {\n  let iterationsCount = 0;\n  const { shouldRetry, firstDelay, maxDelay, timeMultiple } = {\n    ...defaultOptions,\n    ...options\n  };\n  const delay = createExponentialDelayAsyncFn({ firstDelay, maxDelay, timeMultiple });\n  while (true) {\n    try {\n      return await callback();\n    } catch (e) {\n      iterationsCount++;\n      if (!shouldRetry(e, iterationsCount)) {\n        throw e;\n      }\n      await delay();\n    }\n  }\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/keys.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/keys.mjs ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPublishableKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__.buildPublishableKey; },\n/* harmony export */   createDevOrStagingUrlCache: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__.createDevOrStagingUrlCache; },\n/* harmony export */   getCookieSuffix: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__.getCookieSuffix; },\n/* harmony export */   getSuffixedCookieName: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__.getSuffixedCookieName; },\n/* harmony export */   isDevelopmentFromPublishableKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentFromPublishableKey; },\n/* harmony export */   isDevelopmentFromSecretKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentFromSecretKey; },\n/* harmony export */   isProductionFromPublishableKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__.isProductionFromPublishableKey; },\n/* harmony export */   isProductionFromSecretKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__.isProductionFromSecretKey; },\n/* harmony export */   isPublishableKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__.isPublishableKey; },\n/* harmony export */   parsePublishableKey: function() { return /* reexport safe */ _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey; }\n/* harmony export */ });\n/* harmony import */ var _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-L2BNNARM.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-L2BNNARM.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n\n//# sourceMappingURL=keys.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3Qva2V5cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBVzhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFZNUI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2tleXMubWpzP2I4NzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgYnVpbGRQdWJsaXNoYWJsZUtleSxcbiAgY3JlYXRlRGV2T3JTdGFnaW5nVXJsQ2FjaGUsXG4gIGdldENvb2tpZVN1ZmZpeCxcbiAgZ2V0U3VmZml4ZWRDb29raWVOYW1lLFxuICBpc0RldmVsb3BtZW50RnJvbVB1Ymxpc2hhYmxlS2V5LFxuICBpc0RldmVsb3BtZW50RnJvbVNlY3JldEtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVB1Ymxpc2hhYmxlS2V5LFxuICBpc1Byb2R1Y3Rpb25Gcm9tU2VjcmV0S2V5LFxuICBpc1B1Ymxpc2hhYmxlS2V5LFxuICBwYXJzZVB1Ymxpc2hhYmxlS2V5XG59IGZyb20gXCIuL2NodW5rLUwyQk5OQVJNLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1URVRHVEVJMi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstS09IN0dUSk8ubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLUk2TVRTVE9GLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIGJ1aWxkUHVibGlzaGFibGVLZXksXG4gIGNyZWF0ZURldk9yU3RhZ2luZ1VybENhY2hlLFxuICBnZXRDb29raWVTdWZmaXgsXG4gIGdldFN1ZmZpeGVkQ29va2llTmFtZSxcbiAgaXNEZXZlbG9wbWVudEZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXksXG4gIGlzUHJvZHVjdGlvbkZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVNlY3JldEtleSxcbiAgaXNQdWJsaXNoYWJsZUtleSxcbiAgcGFyc2VQdWJsaXNoYWJsZUtleVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleXMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/keys.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/loadClerkJsScript.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/loadClerkJsScript.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildClerkJsScriptAttributes: function() { return /* reexport safe */ _chunk_2JIRKKG7_mjs__WEBPACK_IMPORTED_MODULE_0__.buildClerkJsScriptAttributes; },\n/* harmony export */   clerkJsScriptUrl: function() { return /* reexport safe */ _chunk_2JIRKKG7_mjs__WEBPACK_IMPORTED_MODULE_0__.clerkJsScriptUrl; },\n/* harmony export */   loadClerkJsScript: function() { return /* reexport safe */ _chunk_2JIRKKG7_mjs__WEBPACK_IMPORTED_MODULE_0__.loadClerkJsScript; },\n/* harmony export */   setClerkJsLoadingErrorPackageName: function() { return /* reexport safe */ _chunk_2JIRKKG7_mjs__WEBPACK_IMPORTED_MODULE_0__.setClerkJsLoadingErrorPackageName; }\n/* harmony export */ });\n/* harmony import */ var _chunk_2JIRKKG7_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-2JIRKKG7.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-2JIRKKG7.mjs\");\n/* harmony import */ var _chunk_6BC7W54O_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-6BC7W54O.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6BC7W54O.mjs\");\n/* harmony import */ var _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-6NDGN2IU.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs\");\n/* harmony import */ var _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-Q2DOGLDC.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-Q2DOGLDC.mjs\");\n/* harmony import */ var _chunk_DSMUR7RM_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-DSMUR7RM.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-DSMUR7RM.mjs\");\n/* harmony import */ var _chunk_T4WHYQYX_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-T4WHYQYX.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-T4WHYQYX.mjs\");\n/* harmony import */ var _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chunk-L2BNNARM.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-L2BNNARM.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=loadClerkJsScript.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvbG9hZENsZXJrSnNTY3JpcHQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUs4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTTVCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9sb2FkQ2xlcmtKc1NjcmlwdC5tanM/ODI3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBidWlsZENsZXJrSnNTY3JpcHRBdHRyaWJ1dGVzLFxuICBjbGVya0pzU2NyaXB0VXJsLFxuICBsb2FkQ2xlcmtKc1NjcmlwdCxcbiAgc2V0Q2xlcmtKc0xvYWRpbmdFcnJvclBhY2thZ2VOYW1lXG59IGZyb20gXCIuL2NodW5rLTJKSVJLS0c3Lm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay02QkM3VzU0Ty5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstNk5ER04ySVUubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVEyRE9HTERDLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1EU01VUjdSTS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstVDRXSFlRWVgubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLUwyQk5OQVJNLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1URVRHVEVJMi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstS09IN0dUSk8ubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLUk2TVRTVE9GLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIGJ1aWxkQ2xlcmtKc1NjcmlwdEF0dHJpYnV0ZXMsXG4gIGNsZXJrSnNTY3JpcHRVcmwsXG4gIGxvYWRDbGVya0pzU2NyaXB0LFxuICBzZXRDbGVya0pzTG9hZGluZ0Vycm9yUGFja2FnZU5hbWVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2FkQ2xlcmtKc1NjcmlwdC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/loadClerkJsScript.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/logger.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/logger.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: function() { return /* reexport safe */ _chunk_CYDR2ZSA_mjs__WEBPACK_IMPORTED_MODULE_0__.logger; }\n/* harmony export */ });\n/* harmony import */ var _chunk_CYDR2ZSA_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-CYDR2ZSA.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=logger.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvbG9nZ2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFOEI7QUFDQTtBQUc1QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvbG9nZ2VyLm1qcz9hNzkyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGxvZ2dlclxufSBmcm9tIFwiLi9jaHVuay1DWURSMlpTQS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5leHBvcnQge1xuICBsb2dnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnZXIubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/logger.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/react/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/react/index.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkInstanceContext: function() { return /* binding */ ClerkInstanceContext; },\n/* harmony export */   ClientContext: function() { return /* binding */ ClientContext; },\n/* harmony export */   OptionsContext: function() { return /* binding */ OptionsContext; },\n/* harmony export */   OrganizationProvider: function() { return /* binding */ OrganizationProvider; },\n/* harmony export */   SessionContext: function() { return /* binding */ SessionContext; },\n/* harmony export */   UserContext: function() { return /* binding */ UserContext; },\n/* harmony export */   assertContextExists: function() { return /* binding */ assertContextExists; },\n/* harmony export */   createContextAndHook: function() { return /* binding */ createContextAndHook; },\n/* harmony export */   isDeeplyEqual: function() { return /* binding */ isDeeplyEqual; },\n/* harmony export */   useAssertWrappedByClerkProvider: function() { return /* binding */ useAssertWrappedByClerkProvider; },\n/* harmony export */   useClerk: function() { return /* binding */ useClerk; },\n/* harmony export */   useClerkInstanceContext: function() { return /* binding */ useClerkInstanceContext; },\n/* harmony export */   useClientContext: function() { return /* binding */ useClientContext; },\n/* harmony export */   useDeepEqualMemo: function() { return /* binding */ useDeepEqualMemo; },\n/* harmony export */   useOptionsContext: function() { return /* binding */ useOptionsContext; },\n/* harmony export */   useOrganization: function() { return /* binding */ useOrganization; },\n/* harmony export */   useOrganizationContext: function() { return /* binding */ useOrganizationContext; },\n/* harmony export */   useOrganizationList: function() { return /* binding */ useOrganizationList; },\n/* harmony export */   useSafeLayoutEffect: function() { return /* binding */ useSafeLayoutEffect; },\n/* harmony export */   useSession: function() { return /* binding */ useSession; },\n/* harmony export */   useSessionContext: function() { return /* binding */ useSessionContext; },\n/* harmony export */   useSessionList: function() { return /* binding */ useSessionList; },\n/* harmony export */   useUser: function() { return /* binding */ useUser; },\n/* harmony export */   useUserContext: function() { return /* binding */ useUserContext; }\n/* harmony export */ });\n/* harmony import */ var _chunk_TUVJ3GI6_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-TUVJ3GI6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TUVJ3GI6.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! swr */ \"(app-pages-browser)/./node_modules/swr/dist/core/index.mjs\");\n/* harmony import */ var swr_infinite__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! swr/infinite */ \"(app-pages-browser)/./node_modules/swr/dist/infinite/index.mjs\");\n\n\n\n// src/react/hooks/createContextAndHook.ts\n\nfunction assertContextExists(contextVal, msgOrCtx) {\n  if (!contextVal) {\n    throw typeof msgOrCtx === \"string\" ? new Error(msgOrCtx) : new Error(`${msgOrCtx.displayName} not found`);\n  }\n}\nvar createContextAndHook = (displayName, options) => {\n  const { assertCtxFn = assertContextExists } = options || {};\n  const Ctx = react__WEBPACK_IMPORTED_MODULE_2__.createContext(void 0);\n  Ctx.displayName = displayName;\n  const useCtx = () => {\n    const ctx = react__WEBPACK_IMPORTED_MODULE_2__.useContext(Ctx);\n    assertCtxFn(ctx, `${displayName} not found`);\n    return ctx.value;\n  };\n  const useCtxWithoutGuarantee = () => {\n    const ctx = react__WEBPACK_IMPORTED_MODULE_2__.useContext(Ctx);\n    return ctx ? ctx.value : {};\n  };\n  return [Ctx, useCtx, useCtxWithoutGuarantee];\n};\n\n// src/react/contexts.tsx\n\n\n// src/react/clerk-swr.ts\nvar clerk_swr_exports = {};\n(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__.__export)(clerk_swr_exports, {\n  SWRConfig: () => swr__WEBPACK_IMPORTED_MODULE_3__.SWRConfig,\n  useSWR: () => swr__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  useSWRInfinite: () => swr_infinite__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n});\n(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__.__reExport)(clerk_swr_exports, swr__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n// src/react/contexts.tsx\nvar [ClerkInstanceContext, useClerkInstanceContext] = createContextAndHook(\"ClerkInstanceContext\");\nvar [UserContext, useUserContext] = createContextAndHook(\"UserContext\");\nvar [ClientContext, useClientContext] = createContextAndHook(\"ClientContext\");\nvar [SessionContext, useSessionContext] = createContextAndHook(\n  \"SessionContext\"\n);\nvar OptionsContext = react__WEBPACK_IMPORTED_MODULE_2__.createContext({});\nfunction useOptionsContext() {\n  const context = react__WEBPACK_IMPORTED_MODULE_2__.useContext(OptionsContext);\n  if (context === void 0) {\n    throw new Error(\"useOptions must be used within an OptionsContext\");\n  }\n  return context;\n}\nvar [OrganizationContextInternal, useOrganizationContext] = createContextAndHook(\"OrganizationContext\");\nvar OrganizationProvider = ({\n  children,\n  organization,\n  swrConfig\n}) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(swr__WEBPACK_IMPORTED_MODULE_3__.SWRConfig, { value: swrConfig }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(\n    OrganizationContextInternal.Provider,\n    {\n      value: {\n        value: { organization }\n      }\n    },\n    children\n  ));\n};\nfunction useAssertWrappedByClerkProvider(displayNameOrFn) {\n  const ctx = react__WEBPACK_IMPORTED_MODULE_2__.useContext(ClerkInstanceContext);\n  if (!ctx) {\n    if (typeof displayNameOrFn === \"function\") {\n      displayNameOrFn();\n      return;\n    }\n    throw new Error(\n      `${displayNameOrFn} can only be used within the <ClerkProvider /> component. Learn more: https://clerk.com/docs/components/clerk-provider`\n    );\n  }\n}\n\n// src/react/hooks/usePagesOrInfinite.ts\n\nfunction getDifferentKeys(obj1, obj2) {\n  const keysSet = new Set(Object.keys(obj2));\n  const differentKeysObject = {};\n  for (const key1 of Object.keys(obj1)) {\n    if (!keysSet.has(key1)) {\n      differentKeysObject[key1] = obj1[key1];\n    }\n  }\n  return differentKeysObject;\n}\nvar useWithSafeValues = (params, defaultValues) => {\n  var _a, _b, _c;\n  const shouldUseDefaults = typeof params === \"boolean\" && params;\n  const initialPageRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(\n    shouldUseDefaults ? defaultValues.initialPage : (_a = params == null ? void 0 : params.initialPage) != null ? _a : defaultValues.initialPage\n  );\n  const pageSizeRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(shouldUseDefaults ? defaultValues.pageSize : (_b = params == null ? void 0 : params.pageSize) != null ? _b : defaultValues.pageSize);\n  const newObj = {};\n  for (const key of Object.keys(defaultValues)) {\n    newObj[key] = shouldUseDefaults ? defaultValues[key] : (_c = params == null ? void 0 : params[key]) != null ? _c : defaultValues[key];\n  }\n  return {\n    ...newObj,\n    initialPage: initialPageRef.current,\n    pageSize: pageSizeRef.current\n  };\n};\nvar cachingSWROptions = {\n  dedupingInterval: 1e3 * 60,\n  focusThrottleInterval: 1e3 * 60 * 2\n};\nvar usePagesOrInfinite = (params, fetcher, config, cacheKeys) => {\n  var _a, _b, _c, _d, _e, _f, _g;\n  const [paginatedPage, setPaginatedPage] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)((_a = params.initialPage) != null ? _a : 1);\n  const initialPageRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)((_b = params.initialPage) != null ? _b : 1);\n  const pageSizeRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)((_c = params.pageSize) != null ? _c : 10);\n  const enabled = (_d = config.enabled) != null ? _d : true;\n  const triggerInfinite = (_e = config.infinite) != null ? _e : false;\n  const keepPreviousData = (_f = config.keepPreviousData) != null ? _f : false;\n  const pagesCacheKey = {\n    ...cacheKeys,\n    ...params,\n    initialPage: paginatedPage,\n    pageSize: pageSizeRef.current\n  };\n  const {\n    data: swrData,\n    isValidating: swrIsValidating,\n    isLoading: swrIsLoading,\n    error: swrError,\n    mutate: swrMutate\n  } = (0,swr__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n    !triggerInfinite && !!fetcher && enabled ? pagesCacheKey : null,\n    (cacheKeyParams) => {\n      const requestParams = getDifferentKeys(cacheKeyParams, cacheKeys);\n      return fetcher == null ? void 0 : fetcher(requestParams);\n    },\n    { keepPreviousData, ...cachingSWROptions }\n  );\n  const {\n    data: swrInfiniteData,\n    isLoading: swrInfiniteIsLoading,\n    isValidating: swrInfiniteIsValidating,\n    error: swrInfiniteError,\n    size,\n    setSize,\n    mutate: swrInfiniteMutate\n  } = (0,swr_infinite__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n    (pageIndex) => {\n      if (!triggerInfinite || !enabled) {\n        return null;\n      }\n      return {\n        ...params,\n        ...cacheKeys,\n        initialPage: initialPageRef.current + pageIndex,\n        pageSize: pageSizeRef.current\n      };\n    },\n    (cacheKeyParams) => {\n      const requestParams = getDifferentKeys(cacheKeyParams, cacheKeys);\n      return fetcher == null ? void 0 : fetcher(requestParams);\n    },\n    cachingSWROptions\n  );\n  const page = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => {\n    if (triggerInfinite) {\n      return size;\n    }\n    return paginatedPage;\n  }, [triggerInfinite, size, paginatedPage]);\n  const fetchPage = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(\n    (numberOrgFn) => {\n      if (triggerInfinite) {\n        void setSize(numberOrgFn);\n        return;\n      }\n      return setPaginatedPage(numberOrgFn);\n    },\n    [setSize]\n  );\n  const data = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => {\n    var _a2, _b2;\n    if (triggerInfinite) {\n      return (_a2 = swrInfiniteData == null ? void 0 : swrInfiniteData.map((a) => a == null ? void 0 : a.data).flat()) != null ? _a2 : [];\n    }\n    return (_b2 = swrData == null ? void 0 : swrData.data) != null ? _b2 : [];\n  }, [triggerInfinite, swrData, swrInfiniteData]);\n  const count = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => {\n    var _a2, _b2;\n    if (triggerInfinite) {\n      return ((_a2 = swrInfiniteData == null ? void 0 : swrInfiniteData[(swrInfiniteData == null ? void 0 : swrInfiniteData.length) - 1]) == null ? void 0 : _a2.total_count) || 0;\n    }\n    return (_b2 = swrData == null ? void 0 : swrData.total_count) != null ? _b2 : 0;\n  }, [triggerInfinite, swrData, swrInfiniteData]);\n  const isLoading = triggerInfinite ? swrInfiniteIsLoading : swrIsLoading;\n  const isFetching = triggerInfinite ? swrInfiniteIsValidating : swrIsValidating;\n  const error = (_g = triggerInfinite ? swrInfiniteError : swrError) != null ? _g : null;\n  const isError = !!error;\n  const fetchNext = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {\n    fetchPage((n) => Math.max(0, n + 1));\n  }, [fetchPage]);\n  const fetchPrevious = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {\n    fetchPage((n) => Math.max(0, n - 1));\n  }, [fetchPage]);\n  const offsetCount = (initialPageRef.current - 1) * pageSizeRef.current;\n  const pageCount = Math.ceil((count - offsetCount) / pageSizeRef.current);\n  const hasNextPage = count - offsetCount * pageSizeRef.current > page * pageSizeRef.current;\n  const hasPreviousPage = (page - 1) * pageSizeRef.current > offsetCount * pageSizeRef.current;\n  const setData = triggerInfinite ? (value) => swrInfiniteMutate(value, {\n    revalidate: false\n  }) : (value) => swrMutate(value, {\n    revalidate: false\n  });\n  const revalidate = triggerInfinite ? () => swrInfiniteMutate() : () => swrMutate();\n  return {\n    data,\n    count,\n    error,\n    isLoading,\n    isFetching,\n    isError,\n    page,\n    pageCount,\n    fetchPage,\n    fetchNext,\n    fetchPrevious,\n    hasNextPage,\n    hasPreviousPage,\n    // Let the hook return type define this type\n    revalidate,\n    // Let the hook return type define this type\n    setData\n  };\n};\n\n// src/react/hooks/useOrganization.tsx\nvar undefinedPaginatedResource = {\n  data: void 0,\n  count: void 0,\n  error: void 0,\n  isLoading: false,\n  isFetching: false,\n  isError: false,\n  page: void 0,\n  pageCount: void 0,\n  fetchPage: void 0,\n  fetchNext: void 0,\n  fetchPrevious: void 0,\n  hasNextPage: false,\n  hasPreviousPage: false,\n  revalidate: void 0,\n  setData: void 0\n};\nvar useOrganization = (params) => {\n  var _a;\n  const {\n    domains: domainListParams,\n    membershipRequests: membershipRequestsListParams,\n    memberships: membersListParams,\n    invitations: invitationsListParams\n  } = params || {};\n  useAssertWrappedByClerkProvider(\"useOrganization\");\n  const { organization } = useOrganizationContext();\n  const session = useSessionContext();\n  const domainSafeValues = useWithSafeValues(domainListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    keepPreviousData: false,\n    infinite: false,\n    enrollmentMode: void 0\n  });\n  const membershipRequestSafeValues = useWithSafeValues(membershipRequestsListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    status: \"pending\",\n    keepPreviousData: false,\n    infinite: false\n  });\n  const membersSafeValues = useWithSafeValues(membersListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    role: void 0,\n    keepPreviousData: false,\n    infinite: false\n  });\n  const invitationsSafeValues = useWithSafeValues(invitationsListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    status: [\"pending\"],\n    keepPreviousData: false,\n    infinite: false\n  });\n  const clerk = useClerkInstanceContext();\n  (_a = clerk.telemetry) == null ? void 0 : _a.record((0,_chunk_TUVJ3GI6_mjs__WEBPACK_IMPORTED_MODULE_0__.eventMethodCalled)(\"useOrganization\"));\n  const domainParams = typeof domainListParams === \"undefined\" ? void 0 : {\n    initialPage: domainSafeValues.initialPage,\n    pageSize: domainSafeValues.pageSize,\n    enrollmentMode: domainSafeValues.enrollmentMode\n  };\n  const membershipRequestParams = typeof membershipRequestsListParams === \"undefined\" ? void 0 : {\n    initialPage: membershipRequestSafeValues.initialPage,\n    pageSize: membershipRequestSafeValues.pageSize,\n    status: membershipRequestSafeValues.status\n  };\n  const membersParams = typeof membersListParams === \"undefined\" ? void 0 : {\n    initialPage: membersSafeValues.initialPage,\n    pageSize: membersSafeValues.pageSize,\n    role: membersSafeValues.role\n  };\n  const invitationsParams = typeof invitationsListParams === \"undefined\" ? void 0 : {\n    initialPage: invitationsSafeValues.initialPage,\n    pageSize: invitationsSafeValues.pageSize,\n    status: invitationsSafeValues.status\n  };\n  const domains = usePagesOrInfinite(\n    {\n      ...domainParams\n    },\n    organization == null ? void 0 : organization.getDomains,\n    {\n      keepPreviousData: domainSafeValues.keepPreviousData,\n      infinite: domainSafeValues.infinite,\n      enabled: !!domainParams\n    },\n    {\n      type: \"domains\",\n      organizationId: organization == null ? void 0 : organization.id\n    }\n  );\n  const membershipRequests = usePagesOrInfinite(\n    {\n      ...membershipRequestParams\n    },\n    organization == null ? void 0 : organization.getMembershipRequests,\n    {\n      keepPreviousData: membershipRequestSafeValues.keepPreviousData,\n      infinite: membershipRequestSafeValues.infinite,\n      enabled: !!membershipRequestParams\n    },\n    {\n      type: \"membershipRequests\",\n      organizationId: organization == null ? void 0 : organization.id\n    }\n  );\n  const memberships = usePagesOrInfinite(\n    membersParams || {},\n    organization == null ? void 0 : organization.getMemberships,\n    {\n      keepPreviousData: membersSafeValues.keepPreviousData,\n      infinite: membersSafeValues.infinite,\n      enabled: !!membersParams\n    },\n    {\n      type: \"members\",\n      organizationId: organization == null ? void 0 : organization.id\n    }\n  );\n  const invitations = usePagesOrInfinite(\n    {\n      ...invitationsParams\n    },\n    organization == null ? void 0 : organization.getInvitations,\n    {\n      keepPreviousData: invitationsSafeValues.keepPreviousData,\n      infinite: invitationsSafeValues.infinite,\n      enabled: !!invitationsParams\n    },\n    {\n      type: \"invitations\",\n      organizationId: organization == null ? void 0 : organization.id\n    }\n  );\n  if (organization === void 0) {\n    return {\n      isLoaded: false,\n      organization: void 0,\n      membership: void 0,\n      domains: undefinedPaginatedResource,\n      membershipRequests: undefinedPaginatedResource,\n      memberships: undefinedPaginatedResource,\n      invitations: undefinedPaginatedResource\n    };\n  }\n  if (organization === null) {\n    return {\n      isLoaded: true,\n      organization: null,\n      membership: null,\n      domains: null,\n      membershipRequests: null,\n      memberships: null,\n      invitations: null\n    };\n  }\n  if (!clerk.loaded && organization) {\n    return {\n      isLoaded: true,\n      organization,\n      membership: void 0,\n      domains: undefinedPaginatedResource,\n      membershipRequests: undefinedPaginatedResource,\n      memberships: undefinedPaginatedResource,\n      invitations: undefinedPaginatedResource\n    };\n  }\n  return {\n    isLoaded: clerk.loaded,\n    organization,\n    membership: getCurrentOrganizationMembership(session.user.organizationMemberships, organization.id),\n    // your membership in the current org\n    domains,\n    membershipRequests,\n    memberships,\n    invitations\n  };\n};\nfunction getCurrentOrganizationMembership(organizationMemberships, activeOrganizationId) {\n  return organizationMemberships.find(\n    (organizationMembership) => organizationMembership.organization.id === activeOrganizationId\n  );\n}\n\n// src/react/hooks/useOrganizationList.tsx\nvar undefinedPaginatedResource2 = {\n  data: void 0,\n  count: void 0,\n  error: void 0,\n  isLoading: false,\n  isFetching: false,\n  isError: false,\n  page: void 0,\n  pageCount: void 0,\n  fetchPage: void 0,\n  fetchNext: void 0,\n  fetchPrevious: void 0,\n  hasNextPage: false,\n  hasPreviousPage: false,\n  revalidate: void 0,\n  setData: void 0\n};\nvar useOrganizationList = (params) => {\n  var _a;\n  const { userMemberships, userInvitations, userSuggestions } = params || {};\n  useAssertWrappedByClerkProvider(\"useOrganizationList\");\n  const userMembershipsSafeValues = useWithSafeValues(userMemberships, {\n    initialPage: 1,\n    pageSize: 10,\n    keepPreviousData: false,\n    infinite: false\n  });\n  const userInvitationsSafeValues = useWithSafeValues(userInvitations, {\n    initialPage: 1,\n    pageSize: 10,\n    status: \"pending\",\n    keepPreviousData: false,\n    infinite: false\n  });\n  const userSuggestionsSafeValues = useWithSafeValues(userSuggestions, {\n    initialPage: 1,\n    pageSize: 10,\n    status: \"pending\",\n    keepPreviousData: false,\n    infinite: false\n  });\n  const clerk = useClerkInstanceContext();\n  const user = useUserContext();\n  (_a = clerk.telemetry) == null ? void 0 : _a.record((0,_chunk_TUVJ3GI6_mjs__WEBPACK_IMPORTED_MODULE_0__.eventMethodCalled)(\"useOrganizationList\"));\n  const userMembershipsParams = typeof userMemberships === \"undefined\" ? void 0 : {\n    initialPage: userMembershipsSafeValues.initialPage,\n    pageSize: userMembershipsSafeValues.pageSize\n  };\n  const userInvitationsParams = typeof userInvitations === \"undefined\" ? void 0 : {\n    initialPage: userInvitationsSafeValues.initialPage,\n    pageSize: userInvitationsSafeValues.pageSize,\n    status: userInvitationsSafeValues.status\n  };\n  const userSuggestionsParams = typeof userSuggestions === \"undefined\" ? void 0 : {\n    initialPage: userSuggestionsSafeValues.initialPage,\n    pageSize: userSuggestionsSafeValues.pageSize,\n    status: userSuggestionsSafeValues.status\n  };\n  const isClerkLoaded = !!(clerk.loaded && user);\n  const memberships = usePagesOrInfinite(\n    userMembershipsParams || {},\n    user == null ? void 0 : user.getOrganizationMemberships,\n    {\n      keepPreviousData: userMembershipsSafeValues.keepPreviousData,\n      infinite: userMembershipsSafeValues.infinite,\n      enabled: !!userMembershipsParams\n    },\n    {\n      type: \"userMemberships\",\n      userId: user == null ? void 0 : user.id\n    }\n  );\n  const invitations = usePagesOrInfinite(\n    {\n      ...userInvitationsParams\n    },\n    user == null ? void 0 : user.getOrganizationInvitations,\n    {\n      keepPreviousData: userInvitationsSafeValues.keepPreviousData,\n      infinite: userInvitationsSafeValues.infinite,\n      enabled: !!userInvitationsParams\n    },\n    {\n      type: \"userInvitations\",\n      userId: user == null ? void 0 : user.id\n    }\n  );\n  const suggestions = usePagesOrInfinite(\n    {\n      ...userSuggestionsParams\n    },\n    user == null ? void 0 : user.getOrganizationSuggestions,\n    {\n      keepPreviousData: userSuggestionsSafeValues.keepPreviousData,\n      infinite: userSuggestionsSafeValues.infinite,\n      enabled: !!userSuggestionsParams\n    },\n    {\n      type: \"userSuggestions\",\n      userId: user == null ? void 0 : user.id\n    }\n  );\n  if (!isClerkLoaded) {\n    return {\n      isLoaded: false,\n      createOrganization: void 0,\n      setActive: void 0,\n      userMemberships: undefinedPaginatedResource2,\n      userInvitations: undefinedPaginatedResource2,\n      userSuggestions: undefinedPaginatedResource2\n    };\n  }\n  return {\n    isLoaded: isClerkLoaded,\n    setActive: clerk.setActive,\n    createOrganization: clerk.createOrganization,\n    userMemberships: memberships,\n    userInvitations: invitations,\n    userSuggestions: suggestions\n  };\n};\n\n// src/react/hooks/useSafeLayoutEffect.tsx\n\nvar useSafeLayoutEffect = typeof window !== \"undefined\" ? react__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_2__.useEffect;\n\n// src/react/hooks/useSession.ts\nvar useSession = () => {\n  useAssertWrappedByClerkProvider(\"useSession\");\n  const session = useSessionContext();\n  if (session === void 0) {\n    return { isLoaded: false, isSignedIn: void 0, session: void 0 };\n  }\n  if (session === null) {\n    return { isLoaded: true, isSignedIn: false, session: null };\n  }\n  return { isLoaded: true, isSignedIn: true, session };\n};\n\n// src/react/hooks/useSessionList.ts\nvar useSessionList = () => {\n  useAssertWrappedByClerkProvider(\"useSessionList\");\n  const isomorphicClerk = useClerkInstanceContext();\n  const client = useClientContext();\n  if (!client) {\n    return { isLoaded: false, sessions: void 0, setActive: void 0 };\n  }\n  return {\n    isLoaded: true,\n    sessions: client.sessions,\n    setActive: isomorphicClerk.setActive\n  };\n};\n\n// src/react/hooks/useUser.ts\nfunction useUser() {\n  useAssertWrappedByClerkProvider(\"useUser\");\n  const user = useUserContext();\n  if (user === void 0) {\n    return { isLoaded: false, isSignedIn: void 0, user: void 0 };\n  }\n  if (user === null) {\n    return { isLoaded: true, isSignedIn: false, user: null };\n  }\n  return { isLoaded: true, isSignedIn: true, user };\n}\n\n// src/react/hooks/useClerk.ts\nvar useClerk = () => {\n  useAssertWrappedByClerkProvider(\"useClerk\");\n  return useClerkInstanceContext();\n};\n\n// ../../node_modules/dequal/dist/index.mjs\nvar has = Object.prototype.hasOwnProperty;\nfunction find(iter, tar, key) {\n  for (key of iter.keys()) {\n    if (dequal(key, tar)) return key;\n  }\n}\nfunction dequal(foo, bar) {\n  var ctor, len, tmp;\n  if (foo === bar) return true;\n  if (foo && bar && (ctor = foo.constructor) === bar.constructor) {\n    if (ctor === Date) return foo.getTime() === bar.getTime();\n    if (ctor === RegExp) return foo.toString() === bar.toString();\n    if (ctor === Array) {\n      if ((len = foo.length) === bar.length) {\n        while (len-- && dequal(foo[len], bar[len])) ;\n      }\n      return len === -1;\n    }\n    if (ctor === Set) {\n      if (foo.size !== bar.size) {\n        return false;\n      }\n      for (len of foo) {\n        tmp = len;\n        if (tmp && typeof tmp === \"object\") {\n          tmp = find(bar, tmp);\n          if (!tmp) return false;\n        }\n        if (!bar.has(tmp)) return false;\n      }\n      return true;\n    }\n    if (ctor === Map) {\n      if (foo.size !== bar.size) {\n        return false;\n      }\n      for (len of foo) {\n        tmp = len[0];\n        if (tmp && typeof tmp === \"object\") {\n          tmp = find(bar, tmp);\n          if (!tmp) return false;\n        }\n        if (!dequal(len[1], bar.get(tmp))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ctor === ArrayBuffer) {\n      foo = new Uint8Array(foo);\n      bar = new Uint8Array(bar);\n    } else if (ctor === DataView) {\n      if ((len = foo.byteLength) === bar.byteLength) {\n        while (len-- && foo.getInt8(len) === bar.getInt8(len)) ;\n      }\n      return len === -1;\n    }\n    if (ArrayBuffer.isView(foo)) {\n      if ((len = foo.byteLength) === bar.byteLength) {\n        while (len-- && foo[len] === bar[len]) ;\n      }\n      return len === -1;\n    }\n    if (!ctor || typeof foo === \"object\") {\n      len = 0;\n      for (ctor in foo) {\n        if (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n        if (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n      }\n      return Object.keys(bar).length === len;\n    }\n  }\n  return foo !== foo && bar !== bar;\n}\n\n// src/react/hooks/useDeepEqualMemo.ts\n\nvar useDeepEqualMemoize = (value) => {\n  const ref = react__WEBPACK_IMPORTED_MODULE_2__.useRef(value);\n  if (!dequal(value, ref.current)) {\n    ref.current = value;\n  }\n  return react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ref.current, [ref.current]);\n};\nvar useDeepEqualMemo = (factory, dependencyArray) => {\n  return react__WEBPACK_IMPORTED_MODULE_2__.useMemo(factory, useDeepEqualMemoize(dependencyArray));\n};\nvar isDeeplyEqual = dequal;\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/react/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/router.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/router.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkHostRouterContext: function() { return /* binding */ ClerkHostRouterContext; },\n/* harmony export */   ClerkRouterContext: function() { return /* binding */ ClerkRouterContext; },\n/* harmony export */   Route: function() { return /* binding */ Route; },\n/* harmony export */   Router: function() { return /* binding */ Router; },\n/* harmony export */   createClerkRouter: function() { return /* binding */ createClerkRouter; },\n/* harmony export */   useClerkHostRouter: function() { return /* binding */ useClerkHostRouter; },\n/* harmony export */   useClerkRouter: function() { return /* binding */ useClerkRouter; }\n/* harmony export */ });\n/* harmony import */ var _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-Q2DOGLDC.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-Q2DOGLDC.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n\n\n\n// src/router/router.ts\nvar PRESERVED_QUERYSTRING_PARAMS = [\"after_sign_in_url\", \"after_sign_up_url\", \"redirect_url\"];\nfunction normalizePath(path) {\n  return (0,_chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutTrailingSlash)((0,_chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.withLeadingSlash)(path));\n}\nfunction createClerkRouter(router, basePath = \"/\") {\n  const normalizedBasePath = normalizePath(basePath);\n  function makeDestinationUrlWithPreservedQueryParameters(path) {\n    if ((0,_chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbsoluteUrl)(path)) {\n      return path;\n    }\n    const destinationUrl = new URL(path, window.location.origin);\n    const currentSearchParams = router.searchParams();\n    PRESERVED_QUERYSTRING_PARAMS.forEach((key) => {\n      const maybeValue = currentSearchParams.get(key);\n      if (maybeValue) {\n        destinationUrl.searchParams.set(key, maybeValue);\n      }\n    });\n    return `${destinationUrl.pathname}${destinationUrl.search}`;\n  }\n  function match(path, index) {\n    const pathToMatch = path != null ? path : index && \"/\";\n    if (!pathToMatch) {\n      throw new Error(\"[clerk] router.match() requires either a path to match, or the index flag must be set to true.\");\n    }\n    const normalizedPath = normalizePath(pathToMatch);\n    return normalizePath(`${normalizedBasePath}${normalizedPath}`) === normalizePath(router.pathname());\n  }\n  function child(childBasePath) {\n    return createClerkRouter(router, `${normalizedBasePath}${normalizePath(childBasePath)}`);\n  }\n  function push(path) {\n    const destinationUrl = makeDestinationUrlWithPreservedQueryParameters(path);\n    return router.push(destinationUrl);\n  }\n  function replace(path) {\n    const destinationUrl = makeDestinationUrlWithPreservedQueryParameters(path);\n    return router.replace(destinationUrl);\n  }\n  function shallowPush(path) {\n    const destinationUrl = makeDestinationUrlWithPreservedQueryParameters(path);\n    return router.shallowPush(destinationUrl);\n  }\n  function pathname() {\n    return router.pathname();\n  }\n  function searchParams() {\n    return router.searchParams();\n  }\n  return {\n    child,\n    match,\n    mode: router.mode,\n    name: router.name,\n    push,\n    replace,\n    shallowPush,\n    pathname,\n    searchParams,\n    basePath: normalizedBasePath\n  };\n}\n\n// src/router/react.tsx\n\nvar ClerkHostRouterContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\nvar ClerkRouterContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\nfunction useClerkHostRouter() {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ClerkHostRouterContext);\n  if (!ctx) {\n    throw new Error(\n      \"clerk: Unable to locate ClerkHostRouter, make sure this is rendered within `<ClerkHostRouterContext.Provider>`.\"\n    );\n  }\n  return ctx;\n}\nfunction useClerkRouter() {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ClerkRouterContext);\n  if (!ctx) {\n    throw new Error(\"clerk: Unable to locate ClerkRouter, make sure this is rendered within `<Router>`.\");\n  }\n  return ctx;\n}\nfunction Router({\n  basePath,\n  children,\n  router\n}) {\n  const hostRouter = useClerkHostRouter();\n  const clerkRouter = createClerkRouter(router != null ? router : hostRouter, basePath);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_3__.createElement(ClerkRouterContext.Provider, { value: clerkRouter }, children);\n}\nfunction Route({ path, children, index }) {\n  const parentRouter = useClerkRouter();\n  if (!path && !index) {\n    return children;\n  }\n  if (!(parentRouter == null ? void 0 : parentRouter.match(path, index))) {\n    return null;\n  }\n  return children;\n}\n\n//# sourceMappingURL=router.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3Qvcm91dGVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUk4QjtBQUNBO0FBQ0E7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBLFNBQVMseUVBQW9CLENBQUMscUVBQWdCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrRUFBYTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsY0FBYyx3QkFBd0IsRUFBRSxzQkFBc0I7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsbUJBQW1CLEVBQUUsZUFBZTtBQUNoRTtBQUNBO0FBQ0Esd0NBQXdDLG1CQUFtQixFQUFFLDZCQUE2QjtBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ3lEO0FBQ3pELDZCQUE2QixvREFBYTtBQUMxQyx5QkFBeUIsb0RBQWE7QUFDdEM7QUFDQSxjQUFjLGlEQUFVO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlEQUFVO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EseUJBQXlCLGdEQUFtQixnQ0FBZ0Msb0JBQW9CO0FBQ2hHO0FBQ0EsaUJBQWlCLHVCQUF1QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFTRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3Qvcm91dGVyLm1qcz8xODZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGlzQWJzb2x1dGVVcmwsXG4gIHdpdGhMZWFkaW5nU2xhc2gsXG4gIHdpdGhvdXRUcmFpbGluZ1NsYXNoXG59IGZyb20gXCIuL2NodW5rLVEyRE9HTERDLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1JNk1UU1RPRi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5cbi8vIHNyYy9yb3V0ZXIvcm91dGVyLnRzXG52YXIgUFJFU0VSVkVEX1FVRVJZU1RSSU5HX1BBUkFNUyA9IFtcImFmdGVyX3NpZ25faW5fdXJsXCIsIFwiYWZ0ZXJfc2lnbl91cF91cmxcIiwgXCJyZWRpcmVjdF91cmxcIl07XG5mdW5jdGlvbiBub3JtYWxpemVQYXRoKHBhdGgpIHtcbiAgcmV0dXJuIHdpdGhvdXRUcmFpbGluZ1NsYXNoKHdpdGhMZWFkaW5nU2xhc2gocGF0aCkpO1xufVxuZnVuY3Rpb24gY3JlYXRlQ2xlcmtSb3V0ZXIocm91dGVyLCBiYXNlUGF0aCA9IFwiL1wiKSB7XG4gIGNvbnN0IG5vcm1hbGl6ZWRCYXNlUGF0aCA9IG5vcm1hbGl6ZVBhdGgoYmFzZVBhdGgpO1xuICBmdW5jdGlvbiBtYWtlRGVzdGluYXRpb25VcmxXaXRoUHJlc2VydmVkUXVlcnlQYXJhbWV0ZXJzKHBhdGgpIHtcbiAgICBpZiAoaXNBYnNvbHV0ZVVybChwYXRoKSkge1xuICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfVxuICAgIGNvbnN0IGRlc3RpbmF0aW9uVXJsID0gbmV3IFVSTChwYXRoLCB3aW5kb3cubG9jYXRpb24ub3JpZ2luKTtcbiAgICBjb25zdCBjdXJyZW50U2VhcmNoUGFyYW1zID0gcm91dGVyLnNlYXJjaFBhcmFtcygpO1xuICAgIFBSRVNFUlZFRF9RVUVSWVNUUklOR19QQVJBTVMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBjb25zdCBtYXliZVZhbHVlID0gY3VycmVudFNlYXJjaFBhcmFtcy5nZXQoa2V5KTtcbiAgICAgIGlmIChtYXliZVZhbHVlKSB7XG4gICAgICAgIGRlc3RpbmF0aW9uVXJsLnNlYXJjaFBhcmFtcy5zZXQoa2V5LCBtYXliZVZhbHVlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gYCR7ZGVzdGluYXRpb25VcmwucGF0aG5hbWV9JHtkZXN0aW5hdGlvblVybC5zZWFyY2h9YDtcbiAgfVxuICBmdW5jdGlvbiBtYXRjaChwYXRoLCBpbmRleCkge1xuICAgIGNvbnN0IHBhdGhUb01hdGNoID0gcGF0aCAhPSBudWxsID8gcGF0aCA6IGluZGV4ICYmIFwiL1wiO1xuICAgIGlmICghcGF0aFRvTWF0Y2gpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIltjbGVya10gcm91dGVyLm1hdGNoKCkgcmVxdWlyZXMgZWl0aGVyIGEgcGF0aCB0byBtYXRjaCwgb3IgdGhlIGluZGV4IGZsYWcgbXVzdCBiZSBzZXQgdG8gdHJ1ZS5cIik7XG4gICAgfVxuICAgIGNvbnN0IG5vcm1hbGl6ZWRQYXRoID0gbm9ybWFsaXplUGF0aChwYXRoVG9NYXRjaCk7XG4gICAgcmV0dXJuIG5vcm1hbGl6ZVBhdGgoYCR7bm9ybWFsaXplZEJhc2VQYXRofSR7bm9ybWFsaXplZFBhdGh9YCkgPT09IG5vcm1hbGl6ZVBhdGgocm91dGVyLnBhdGhuYW1lKCkpO1xuICB9XG4gIGZ1bmN0aW9uIGNoaWxkKGNoaWxkQmFzZVBhdGgpIHtcbiAgICByZXR1cm4gY3JlYXRlQ2xlcmtSb3V0ZXIocm91dGVyLCBgJHtub3JtYWxpemVkQmFzZVBhdGh9JHtub3JtYWxpemVQYXRoKGNoaWxkQmFzZVBhdGgpfWApO1xuICB9XG4gIGZ1bmN0aW9uIHB1c2gocGF0aCkge1xuICAgIGNvbnN0IGRlc3RpbmF0aW9uVXJsID0gbWFrZURlc3RpbmF0aW9uVXJsV2l0aFByZXNlcnZlZFF1ZXJ5UGFyYW1ldGVycyhwYXRoKTtcbiAgICByZXR1cm4gcm91dGVyLnB1c2goZGVzdGluYXRpb25VcmwpO1xuICB9XG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCkge1xuICAgIGNvbnN0IGRlc3RpbmF0aW9uVXJsID0gbWFrZURlc3RpbmF0aW9uVXJsV2l0aFByZXNlcnZlZFF1ZXJ5UGFyYW1ldGVycyhwYXRoKTtcbiAgICByZXR1cm4gcm91dGVyLnJlcGxhY2UoZGVzdGluYXRpb25VcmwpO1xuICB9XG4gIGZ1bmN0aW9uIHNoYWxsb3dQdXNoKHBhdGgpIHtcbiAgICBjb25zdCBkZXN0aW5hdGlvblVybCA9IG1ha2VEZXN0aW5hdGlvblVybFdpdGhQcmVzZXJ2ZWRRdWVyeVBhcmFtZXRlcnMocGF0aCk7XG4gICAgcmV0dXJuIHJvdXRlci5zaGFsbG93UHVzaChkZXN0aW5hdGlvblVybCk7XG4gIH1cbiAgZnVuY3Rpb24gcGF0aG5hbWUoKSB7XG4gICAgcmV0dXJuIHJvdXRlci5wYXRobmFtZSgpO1xuICB9XG4gIGZ1bmN0aW9uIHNlYXJjaFBhcmFtcygpIHtcbiAgICByZXR1cm4gcm91dGVyLnNlYXJjaFBhcmFtcygpO1xuICB9XG4gIHJldHVybiB7XG4gICAgY2hpbGQsXG4gICAgbWF0Y2gsXG4gICAgbW9kZTogcm91dGVyLm1vZGUsXG4gICAgbmFtZTogcm91dGVyLm5hbWUsXG4gICAgcHVzaCxcbiAgICByZXBsYWNlLFxuICAgIHNoYWxsb3dQdXNoLFxuICAgIHBhdGhuYW1lLFxuICAgIHNlYXJjaFBhcmFtcyxcbiAgICBiYXNlUGF0aDogbm9ybWFsaXplZEJhc2VQYXRoXG4gIH07XG59XG5cbi8vIHNyYy9yb3V0ZXIvcmVhY3QudHN4XG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xudmFyIENsZXJrSG9zdFJvdXRlckNvbnRleHQgPSBjcmVhdGVDb250ZXh0KG51bGwpO1xudmFyIENsZXJrUm91dGVyQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQobnVsbCk7XG5mdW5jdGlvbiB1c2VDbGVya0hvc3RSb3V0ZXIoKSB7XG4gIGNvbnN0IGN0eCA9IHVzZUNvbnRleHQoQ2xlcmtIb3N0Um91dGVyQ29udGV4dCk7XG4gIGlmICghY3R4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJjbGVyazogVW5hYmxlIHRvIGxvY2F0ZSBDbGVya0hvc3RSb3V0ZXIsIG1ha2Ugc3VyZSB0aGlzIGlzIHJlbmRlcmVkIHdpdGhpbiBgPENsZXJrSG9zdFJvdXRlckNvbnRleHQuUHJvdmlkZXI+YC5cIlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIGN0eDtcbn1cbmZ1bmN0aW9uIHVzZUNsZXJrUm91dGVyKCkge1xuICBjb25zdCBjdHggPSB1c2VDb250ZXh0KENsZXJrUm91dGVyQ29udGV4dCk7XG4gIGlmICghY3R4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiY2xlcms6IFVuYWJsZSB0byBsb2NhdGUgQ2xlcmtSb3V0ZXIsIG1ha2Ugc3VyZSB0aGlzIGlzIHJlbmRlcmVkIHdpdGhpbiBgPFJvdXRlcj5gLlwiKTtcbiAgfVxuICByZXR1cm4gY3R4O1xufVxuZnVuY3Rpb24gUm91dGVyKHtcbiAgYmFzZVBhdGgsXG4gIGNoaWxkcmVuLFxuICByb3V0ZXJcbn0pIHtcbiAgY29uc3QgaG9zdFJvdXRlciA9IHVzZUNsZXJrSG9zdFJvdXRlcigpO1xuICBjb25zdCBjbGVya1JvdXRlciA9IGNyZWF0ZUNsZXJrUm91dGVyKHJvdXRlciAhPSBudWxsID8gcm91dGVyIDogaG9zdFJvdXRlciwgYmFzZVBhdGgpO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2xlcmtSb3V0ZXJDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBjbGVya1JvdXRlciB9LCBjaGlsZHJlbik7XG59XG5mdW5jdGlvbiBSb3V0ZSh7IHBhdGgsIGNoaWxkcmVuLCBpbmRleCB9KSB7XG4gIGNvbnN0IHBhcmVudFJvdXRlciA9IHVzZUNsZXJrUm91dGVyKCk7XG4gIGlmICghcGF0aCAmJiAhaW5kZXgpIHtcbiAgICByZXR1cm4gY2hpbGRyZW47XG4gIH1cbiAgaWYgKCEocGFyZW50Um91dGVyID09IG51bGwgPyB2b2lkIDAgOiBwYXJlbnRSb3V0ZXIubWF0Y2gocGF0aCwgaW5kZXgpKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBjaGlsZHJlbjtcbn1cbmV4cG9ydCB7XG4gIENsZXJrSG9zdFJvdXRlckNvbnRleHQsXG4gIENsZXJrUm91dGVyQ29udGV4dCxcbiAgUm91dGUsXG4gIFJvdXRlcixcbiAgY3JlYXRlQ2xlcmtSb3V0ZXIsXG4gIHVzZUNsZXJrSG9zdFJvdXRlcixcbiAgdXNlQ2xlcmtSb3V0ZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb3V0ZXIubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/router.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/telemetry.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/telemetry.mjs ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TelemetryCollector: function() { return /* binding */ TelemetryCollector; },\n/* harmony export */   eventComponentMounted: function() { return /* binding */ eventComponentMounted; },\n/* harmony export */   eventMethodCalled: function() { return /* reexport safe */ _chunk_TUVJ3GI6_mjs__WEBPACK_IMPORTED_MODULE_0__.eventMethodCalled; },\n/* harmony export */   eventPrebuiltComponentMounted: function() { return /* binding */ eventPrebuiltComponentMounted; }\n/* harmony export */ });\n/* harmony import */ var _chunk_TUVJ3GI6_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TUVJ3GI6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TUVJ3GI6.mjs\");\n/* harmony import */ var _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-QE2A7CJI.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QE2A7CJI.mjs\");\n/* harmony import */ var _chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-L2BNNARM.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-L2BNNARM.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n\n\n\n\n// src/telemetry/throttler.ts\nvar DEFAULT_CACHE_TTL_MS = 864e5;\nvar _storageKey, _cacheTtl, _TelemetryEventThrottler_instances, generateKey_fn, cache_get, isValidBrowser_get;\nvar TelemetryEventThrottler = class {\n  constructor() {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _TelemetryEventThrottler_instances);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _storageKey, \"clerk_telemetry_throttler\");\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _cacheTtl, DEFAULT_CACHE_TTL_MS);\n  }\n  isEventThrottled(payload) {\n    var _a;\n    if (!(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _TelemetryEventThrottler_instances, isValidBrowser_get)) {\n      return false;\n    }\n    const now = Date.now();\n    const key = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryEventThrottler_instances, generateKey_fn).call(this, payload);\n    const entry = (_a = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _TelemetryEventThrottler_instances, cache_get)) == null ? void 0 : _a[key];\n    if (!entry) {\n      const updatedCache = {\n        ...(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _TelemetryEventThrottler_instances, cache_get),\n        [key]: now\n      };\n      localStorage.setItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey), JSON.stringify(updatedCache));\n    }\n    const shouldInvalidate = entry && now - entry > (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _cacheTtl);\n    if (shouldInvalidate) {\n      const updatedCache = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _TelemetryEventThrottler_instances, cache_get);\n      delete updatedCache[key];\n      localStorage.setItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey), JSON.stringify(updatedCache));\n    }\n    return !!entry;\n  }\n};\n_storageKey = new WeakMap();\n_cacheTtl = new WeakMap();\n_TelemetryEventThrottler_instances = new WeakSet();\n/**\n * Generates a consistent unique key for telemetry events by sorting payload properties.\n * This ensures that payloads with identical content in different orders produce the same key.\n */\ngenerateKey_fn = function(event) {\n  const { sk: _sk, pk: _pk, payload, ...rest } = event;\n  const sanitizedEvent = {\n    ...payload,\n    ...rest\n  };\n  return JSON.stringify(\n    Object.keys({\n      ...payload,\n      ...rest\n    }).sort().map((key) => sanitizedEvent[key])\n  );\n};\ncache_get = function() {\n  const cacheString = localStorage.getItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey));\n  if (!cacheString) {\n    return {};\n  }\n  return JSON.parse(cacheString);\n};\nisValidBrowser_get = function() {\n  if (typeof window === \"undefined\") {\n    return false;\n  }\n  const storage = window.localStorage;\n  if (!storage) {\n    return false;\n  }\n  try {\n    const testKey = \"test\";\n    storage.setItem(testKey, testKey);\n    storage.removeItem(testKey);\n    return true;\n  } catch (err) {\n    const isQuotaExceededError = err instanceof DOMException && // Check error names for different browsers\n    (err.name === \"QuotaExceededError\" || err.name === \"NS_ERROR_DOM_QUOTA_REACHED\");\n    if (isQuotaExceededError && storage.length > 0) {\n      storage.removeItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey));\n    }\n    return false;\n  }\n};\n\n// src/telemetry/collector.ts\nvar DEFAULT_CONFIG = {\n  samplingRate: 1,\n  maxBufferSize: 5,\n  // Production endpoint: https://clerk-telemetry.com\n  // Staging endpoint: https://staging.clerk-telemetry.com\n  // Local: http://localhost:8787\n  endpoint: \"https://clerk-telemetry.com\"\n};\nvar _config, _eventThrottler, _metadata, _buffer, _pendingFlush, _TelemetryCollector_instances, shouldRecord_fn, shouldBeSampled_fn, scheduleFlush_fn, flush_fn, logEvent_fn, getSDKMetadata_fn, preparePayload_fn;\nvar TelemetryCollector = class {\n  constructor(options) {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _TelemetryCollector_instances);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _config);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _eventThrottler);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _metadata, {});\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _buffer, []);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _pendingFlush);\n    var _a, _b, _c, _d, _e, _f;\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _config, {\n      maxBufferSize: (_a = options.maxBufferSize) != null ? _a : DEFAULT_CONFIG.maxBufferSize,\n      samplingRate: (_b = options.samplingRate) != null ? _b : DEFAULT_CONFIG.samplingRate,\n      disabled: (_c = options.disabled) != null ? _c : false,\n      debug: (_d = options.debug) != null ? _d : false,\n      endpoint: DEFAULT_CONFIG.endpoint\n    });\n    if (!options.clerkVersion && typeof window === \"undefined\") {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).clerkVersion = \"\";\n    } else {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).clerkVersion = (_e = options.clerkVersion) != null ? _e : \"\";\n    }\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdk = options.sdk;\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdkVersion = options.sdkVersion;\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).publishableKey = (_f = options.publishableKey) != null ? _f : \"\";\n    const parsedKey = (0,_chunk_L2BNNARM_mjs__WEBPACK_IMPORTED_MODULE_2__.parsePublishableKey)(options.publishableKey);\n    if (parsedKey) {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).instanceType = parsedKey.instanceType;\n    }\n    if (options.secretKey) {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).secretKey = options.secretKey.substring(0, 16);\n    }\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _eventThrottler, new TelemetryEventThrottler());\n  }\n  get isEnabled() {\n    var _a;\n    if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).instanceType !== \"development\") {\n      return false;\n    }\n    if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).disabled || typeof process !== \"undefined\" && (0,_chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.CLERK_TELEMETRY_DISABLED)) {\n      return false;\n    }\n    if (typeof window !== \"undefined\" && !!((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.webdriver)) {\n      return false;\n    }\n    return true;\n  }\n  get isDebug() {\n    return (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).debug || typeof process !== \"undefined\" && (0,_chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.CLERK_TELEMETRY_DEBUG);\n  }\n  record(event) {\n    const preparedPayload = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, preparePayload_fn).call(this, event.event, event.payload);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, logEvent_fn).call(this, preparedPayload.event, preparedPayload);\n    if (!(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, shouldRecord_fn).call(this, preparedPayload, event.eventSamplingRate)) {\n      return;\n    }\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _buffer).push(preparedPayload);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, scheduleFlush_fn).call(this);\n  }\n};\n_config = new WeakMap();\n_eventThrottler = new WeakMap();\n_metadata = new WeakMap();\n_buffer = new WeakMap();\n_pendingFlush = new WeakMap();\n_TelemetryCollector_instances = new WeakSet();\nshouldRecord_fn = function(preparedPayload, eventSamplingRate) {\n  return this.isEnabled && !this.isDebug && (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, shouldBeSampled_fn).call(this, preparedPayload, eventSamplingRate);\n};\nshouldBeSampled_fn = function(preparedPayload, eventSamplingRate) {\n  const randomSeed = Math.random();\n  if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _eventThrottler).isEventThrottled(preparedPayload)) {\n    return false;\n  }\n  return randomSeed <= (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).samplingRate && (typeof eventSamplingRate === \"undefined\" || randomSeed <= eventSamplingRate);\n};\nscheduleFlush_fn = function() {\n  if (typeof window === \"undefined\") {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n    return;\n  }\n  const isBufferFull = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _buffer).length >= (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).maxBufferSize;\n  if (isBufferFull) {\n    if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _pendingFlush)) {\n      const cancel = typeof cancelIdleCallback !== \"undefined\" ? cancelIdleCallback : clearTimeout;\n      cancel((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _pendingFlush));\n    }\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n    return;\n  }\n  if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _pendingFlush)) {\n    return;\n  }\n  if (\"requestIdleCallback\" in window) {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _pendingFlush, requestIdleCallback(() => {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n    }));\n  } else {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _pendingFlush, setTimeout(() => {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n    }, 0));\n  }\n};\nflush_fn = function() {\n  fetch(new URL(\"/v1/event\", (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).endpoint), {\n    method: \"POST\",\n    // TODO: We send an array here with that idea that we can eventually send multiple events.\n    body: JSON.stringify({\n      events: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _buffer)\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).catch(() => void 0).then(() => {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _buffer, []);\n  }).catch(() => void 0);\n};\n/**\n * If running in debug mode, log the event and its payload to the console.\n */\nlogEvent_fn = function(event, payload) {\n  if (!this.isDebug) {\n    return;\n  }\n  if (typeof console.groupCollapsed !== \"undefined\") {\n    console.groupCollapsed(\"[clerk/telemetry]\", event);\n    console.log(payload);\n    console.groupEnd();\n  } else {\n    console.log(\"[clerk/telemetry]\", event, payload);\n  }\n};\n/**\n * If in browser, attempt to lazily grab the SDK metadata from the Clerk singleton, otherwise fallback to the initially passed in values.\n *\n * This is necessary because the sdkMetadata can be set by the host SDK after the TelemetryCollector is instantiated.\n */\ngetSDKMetadata_fn = function() {\n  let sdkMetadata = {\n    name: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdk,\n    version: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdkVersion\n  };\n  if (typeof window !== \"undefined\" && window.Clerk) {\n    sdkMetadata = { ...sdkMetadata, ...window.Clerk.constructor.sdkMetadata };\n  }\n  return sdkMetadata;\n};\n/**\n * Append relevant metadata from the Clerk singleton to the event payload.\n */\npreparePayload_fn = function(event, payload) {\n  var _a, _b;\n  const sdkMetadata = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, getSDKMetadata_fn).call(this);\n  return {\n    event,\n    cv: (_a = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).clerkVersion) != null ? _a : \"\",\n    it: (_b = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).instanceType) != null ? _b : \"\",\n    sdk: sdkMetadata.name,\n    sdkv: sdkMetadata.version,\n    ...(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).publishableKey ? { pk: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).publishableKey } : {},\n    ...(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).secretKey ? { sk: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).secretKey } : {},\n    payload\n  };\n};\n\n// src/telemetry/events/component-mounted.ts\nvar EVENT_COMPONENT_MOUNTED = \"COMPONENT_MOUNTED\";\nvar EVENT_SAMPLING_RATE = 0.1;\nfunction eventPrebuiltComponentMounted(component, props) {\n  var _a, _b, _c;\n  return {\n    event: EVENT_COMPONENT_MOUNTED,\n    eventSamplingRate: EVENT_SAMPLING_RATE,\n    payload: {\n      component,\n      appearanceProp: Boolean(props == null ? void 0 : props.appearance),\n      baseTheme: Boolean((_a = props == null ? void 0 : props.appearance) == null ? void 0 : _a.baseTheme),\n      elements: Boolean((_b = props == null ? void 0 : props.appearance) == null ? void 0 : _b.elements),\n      variables: Boolean((_c = props == null ? void 0 : props.appearance) == null ? void 0 : _c.variables)\n    }\n  };\n}\nfunction eventComponentMounted(component, props = {}) {\n  return {\n    event: EVENT_COMPONENT_MOUNTED,\n    eventSamplingRate: EVENT_SAMPLING_RATE,\n    payload: {\n      component,\n      ...props\n    }\n  };\n}\n\n//# sourceMappingURL=telemetry.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/telemetry.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/underscore.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/underscore.mjs ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelToSnake: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.camelToSnake; },\n/* harmony export */   deepCamelToSnake: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.deepCamelToSnake; },\n/* harmony export */   deepSnakeToCamel: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.deepSnakeToCamel; },\n/* harmony export */   getNonUndefinedValues: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.getNonUndefinedValues; },\n/* harmony export */   isIPV4Address: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.isIPV4Address; },\n/* harmony export */   isTruthy: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.isTruthy; },\n/* harmony export */   snakeToCamel: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.snakeToCamel; },\n/* harmony export */   titleize: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.titleize; },\n/* harmony export */   toSentence: function() { return /* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.toSentence; }\n/* harmony export */ });\n/* harmony import */ var _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-QE2A7CJI.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QE2A7CJI.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=underscore.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdW5kZXJzY29yZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFVOEI7QUFDQTtBQVc1QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdW5kZXJzY29yZS5tanM/NzY1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjYW1lbFRvU25ha2UsXG4gIGRlZXBDYW1lbFRvU25ha2UsXG4gIGRlZXBTbmFrZVRvQ2FtZWwsXG4gIGdldE5vblVuZGVmaW5lZFZhbHVlcyxcbiAgaXNJUFY0QWRkcmVzcyxcbiAgaXNUcnV0aHksXG4gIHNuYWtlVG9DYW1lbCxcbiAgdGl0bGVpemUsXG4gIHRvU2VudGVuY2Vcbn0gZnJvbSBcIi4vY2h1bmstUUUyQTdDSkkubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgY2FtZWxUb1NuYWtlLFxuICBkZWVwQ2FtZWxUb1NuYWtlLFxuICBkZWVwU25ha2VUb0NhbWVsLFxuICBnZXROb25VbmRlZmluZWRWYWx1ZXMsXG4gIGlzSVBWNEFkZHJlc3MsXG4gIGlzVHJ1dGh5LFxuICBzbmFrZVRvQ2FtZWwsXG4gIHRpdGxlaXplLFxuICB0b1NlbnRlbmNlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dW5kZXJzY29yZS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/underscore.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/url.mjs":
/*!*************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/url.mjs ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.addClerkPrefix; },\n/* harmony export */   cleanDoubleSlashes: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.cleanDoubleSlashes; },\n/* harmony export */   getClerkJsMajorVersionOrTag: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.getClerkJsMajorVersionOrTag; },\n/* harmony export */   getScriptUrl: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.getScriptUrl; },\n/* harmony export */   hasLeadingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.hasLeadingSlash; },\n/* harmony export */   hasTrailingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.hasTrailingSlash; },\n/* harmony export */   isAbsoluteUrl: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbsoluteUrl; },\n/* harmony export */   isCurrentDevAccountPortalOrigin: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.isCurrentDevAccountPortalOrigin; },\n/* harmony export */   isLegacyDevAccountPortalOrigin: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.isLegacyDevAccountPortalOrigin; },\n/* harmony export */   isNonEmptyURL: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonEmptyURL; },\n/* harmony export */   joinURL: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.joinURL; },\n/* harmony export */   parseSearchParams: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.parseSearchParams; },\n/* harmony export */   stripScheme: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.stripScheme; },\n/* harmony export */   withLeadingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.withLeadingSlash; },\n/* harmony export */   withTrailingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.withTrailingSlash; },\n/* harmony export */   withoutLeadingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutLeadingSlash; },\n/* harmony export */   withoutTrailingSlash: function() { return /* reexport safe */ _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutTrailingSlash; }\n/* harmony export */ });\n/* harmony import */ var _chunk_Q2DOGLDC_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-Q2DOGLDC.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-Q2DOGLDC.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n//# sourceMappingURL=url.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdXJsLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCOEI7QUFDQTtBQUNBO0FBbUI1QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdXJsLm1qcz80OTcwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFkZENsZXJrUHJlZml4LFxuICBjbGVhbkRvdWJsZVNsYXNoZXMsXG4gIGdldENsZXJrSnNNYWpvclZlcnNpb25PclRhZyxcbiAgZ2V0U2NyaXB0VXJsLFxuICBoYXNMZWFkaW5nU2xhc2gsXG4gIGhhc1RyYWlsaW5nU2xhc2gsXG4gIGlzQWJzb2x1dGVVcmwsXG4gIGlzQ3VycmVudERldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGlzTGVnYWN5RGV2QWNjb3VudFBvcnRhbE9yaWdpbixcbiAgaXNOb25FbXB0eVVSTCxcbiAgam9pblVSTCxcbiAgcGFyc2VTZWFyY2hQYXJhbXMsXG4gIHN0cmlwU2NoZW1lLFxuICB3aXRoTGVhZGluZ1NsYXNoLFxuICB3aXRoVHJhaWxpbmdTbGFzaCxcbiAgd2l0aG91dExlYWRpbmdTbGFzaCxcbiAgd2l0aG91dFRyYWlsaW5nU2xhc2hcbn0gZnJvbSBcIi4vY2h1bmstUTJET0dMREMubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLUk2TVRTVE9GLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIGFkZENsZXJrUHJlZml4LFxuICBjbGVhbkRvdWJsZVNsYXNoZXMsXG4gIGdldENsZXJrSnNNYWpvclZlcnNpb25PclRhZyxcbiAgZ2V0U2NyaXB0VXJsLFxuICBoYXNMZWFkaW5nU2xhc2gsXG4gIGhhc1RyYWlsaW5nU2xhc2gsXG4gIGlzQWJzb2x1dGVVcmwsXG4gIGlzQ3VycmVudERldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGlzTGVnYWN5RGV2QWNjb3VudFBvcnRhbE9yaWdpbixcbiAgaXNOb25FbXB0eVVSTCxcbiAgam9pblVSTCxcbiAgcGFyc2VTZWFyY2hQYXJhbXMsXG4gIHN0cmlwU2NoZW1lLFxuICB3aXRoTGVhZGluZ1NsYXNoLFxuICB3aXRoVHJhaWxpbmdTbGFzaCxcbiAgd2l0aG91dExlYWRpbmdTbGFzaCxcbiAgd2l0aG91dFRyYWlsaW5nU2xhc2hcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/url.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/webauthn.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/webauthn.mjs ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isWebAuthnAutofillSupported: function() { return /* binding */ isWebAuthnAutofillSupported; },\n/* harmony export */   isWebAuthnPlatformAuthenticatorSupported: function() { return /* binding */ isWebAuthnPlatformAuthenticatorSupported; },\n/* harmony export */   isWebAuthnSupported: function() { return /* binding */ isWebAuthnSupported; }\n/* harmony export */ });\n/* harmony import */ var _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-LJ4R7M7R.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-LJ4R7M7R.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n// src/webauthn.ts\nfunction isWebAuthnSupported() {\n  return (0,_chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidBrowser)() && // Check if `PublicKeyCredential` is a constructor\n  typeof window.PublicKeyCredential === \"function\";\n}\nasync function isWebAuthnAutofillSupported() {\n  try {\n    return isWebAuthnSupported() && await window.PublicKeyCredential.isConditionalMediationAvailable();\n  } catch (e) {\n    return false;\n  }\n}\nasync function isWebAuthnPlatformAuthenticatorSupported() {\n  try {\n    return typeof window !== \"undefined\" && await window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n  } catch (e) {\n    return false;\n  }\n}\n\n//# sourceMappingURL=webauthn.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3Qvd2ViYXV0aG4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRThCO0FBQ0E7O0FBRTlCO0FBQ0E7QUFDQSxTQUFTLG1FQUFjO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC93ZWJhdXRobi5tanM/Y2I0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc1ZhbGlkQnJvd3NlclxufSBmcm9tIFwiLi9jaHVuay1MSjRSN003Ui5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5cbi8vIHNyYy93ZWJhdXRobi50c1xuZnVuY3Rpb24gaXNXZWJBdXRoblN1cHBvcnRlZCgpIHtcbiAgcmV0dXJuIGlzVmFsaWRCcm93c2VyKCkgJiYgLy8gQ2hlY2sgaWYgYFB1YmxpY0tleUNyZWRlbnRpYWxgIGlzIGEgY29uc3RydWN0b3JcbiAgdHlwZW9mIHdpbmRvdy5QdWJsaWNLZXlDcmVkZW50aWFsID09PSBcImZ1bmN0aW9uXCI7XG59XG5hc3luYyBmdW5jdGlvbiBpc1dlYkF1dGhuQXV0b2ZpbGxTdXBwb3J0ZWQoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGlzV2ViQXV0aG5TdXBwb3J0ZWQoKSAmJiBhd2FpdCB3aW5kb3cuUHVibGljS2V5Q3JlZGVudGlhbC5pc0NvbmRpdGlvbmFsTWVkaWF0aW9uQXZhaWxhYmxlKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbmFzeW5jIGZ1bmN0aW9uIGlzV2ViQXV0aG5QbGF0Zm9ybUF1dGhlbnRpY2F0b3JTdXBwb3J0ZWQoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgYXdhaXQgd2luZG93LlB1YmxpY0tleUNyZWRlbnRpYWwuaXNVc2VyVmVyaWZ5aW5nUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIGlzV2ViQXV0aG5BdXRvZmlsbFN1cHBvcnRlZCxcbiAgaXNXZWJBdXRoblBsYXRmb3JtQXV0aGVudGljYXRvclN1cHBvcnRlZCxcbiAgaXNXZWJBdXRoblN1cHBvcnRlZFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdlYmF1dGhuLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/webauthn.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@radix-ui/primitive/dist/index.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeEventHandlers: function() { return /* binding */ composeEventHandlers; }\n/* harmony export */ });\n// packages/core/primitive/src/primitive.tsx\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLHVFQUF1RSxrQ0FBa0MsSUFBSTtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9wcmltaXRpdmUvZGlzdC9pbmRleC5tanM/NjYwYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9jb3JlL3ByaW1pdGl2ZS9zcmMvcHJpbWl0aXZlLnRzeFxuZnVuY3Rpb24gY29tcG9zZUV2ZW50SGFuZGxlcnMob3JpZ2luYWxFdmVudEhhbmRsZXIsIG91ckV2ZW50SGFuZGxlciwgeyBjaGVja0ZvckRlZmF1bHRQcmV2ZW50ZWQgPSB0cnVlIH0gPSB7fSkge1xuICByZXR1cm4gZnVuY3Rpb24gaGFuZGxlRXZlbnQoZXZlbnQpIHtcbiAgICBvcmlnaW5hbEV2ZW50SGFuZGxlcj8uKGV2ZW50KTtcbiAgICBpZiAoY2hlY2tGb3JEZWZhdWx0UHJldmVudGVkID09PSBmYWxzZSB8fCAhZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgcmV0dXJuIG91ckV2ZW50SGFuZGxlcj8uKGV2ZW50KTtcbiAgICB9XG4gIH07XG59XG5leHBvcnQge1xuICBjb21wb3NlRXZlbnRIYW5kbGVyc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@radix-ui/react-compose-refs/dist/index.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeRefs: function() { return /* binding */ composeRefs; },\n/* harmony export */   useComposedRefs: function() { return /* binding */ useComposedRefs; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/compose-refs/src/composeRefs.tsx\n\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => refs.forEach((ref) => setRef(ref, node));\n}\nfunction useComposedRefs(...refs) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(composeRefs(...refs), refs);\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQytCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsOENBQWlCO0FBQzFCO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LWNvbXBvc2UtcmVmcy9kaXN0L2luZGV4Lm1qcz9kZTIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L2NvbXBvc2UtcmVmcy9zcmMvY29tcG9zZVJlZnMudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIHNldFJlZihyZWYsIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgcmVmID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZWYodmFsdWUpO1xuICB9IGVsc2UgaWYgKHJlZiAhPT0gbnVsbCAmJiByZWYgIT09IHZvaWQgMCkge1xuICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XG4gIH1cbn1cbmZ1bmN0aW9uIGNvbXBvc2VSZWZzKC4uLnJlZnMpIHtcbiAgcmV0dXJuIChub2RlKSA9PiByZWZzLmZvckVhY2goKHJlZikgPT4gc2V0UmVmKHJlZiwgbm9kZSkpO1xufVxuZnVuY3Rpb24gdXNlQ29tcG9zZWRSZWZzKC4uLnJlZnMpIHtcbiAgcmV0dXJuIFJlYWN0LnVzZUNhbGxiYWNrKGNvbXBvc2VSZWZzKC4uLnJlZnMpLCByZWZzKTtcbn1cbmV4cG9ydCB7XG4gIGNvbXBvc2VSZWZzLFxuICB1c2VDb21wb3NlZFJlZnNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@radix-ui/react-context/dist/index.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContext: function() { return /* binding */ createContext2; },\n/* harmony export */   createContextScope: function() { return /* binding */ createContextScope; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/context/src/createContext.tsx\n\n\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n  function Provider(props) {\n    const { children, ...context } = props;\n    const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\n  }\n  function useContext2(consumerName) {\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  Provider.displayName = rootComponentName + \"Provider\";\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    function Provider(props) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\n    }\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    Provider.displayName = rootComponentName + \"Provider\";\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29udGV4dC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDK0I7QUFDUztBQUN4QztBQUNBLGtCQUFrQixnREFBbUI7QUFDckM7QUFDQSxZQUFZLHVCQUF1QjtBQUNuQyxrQkFBa0IsMENBQWE7QUFDL0IsMkJBQTJCLHNEQUFHLHFCQUFxQixpQkFBaUI7QUFDcEU7QUFDQTtBQUNBLG9CQUFvQiw2Q0FBZ0I7QUFDcEM7QUFDQTtBQUNBLHlCQUF5QixhQUFhLDJCQUEyQixrQkFBa0I7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0RBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOEJBQThCO0FBQzVDO0FBQ0Esb0JBQW9CLDBDQUFhO0FBQ2pDLDZCQUE2QixzREFBRyxxQkFBcUIsaUJBQWlCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw2Q0FBZ0I7QUFDdEM7QUFDQTtBQUNBLDJCQUEyQixhQUFhLDJCQUEyQixrQkFBa0I7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnREFBbUI7QUFDaEMsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDBDQUFhO0FBQzFCLGlCQUFpQixXQUFXLFVBQVUsTUFBTSxtQ0FBbUM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJEQUEyRCxxQkFBcUI7QUFDaEY7QUFDQSxrREFBa0QsVUFBVTtBQUM1RCxpQkFBaUI7QUFDakIsT0FBTyxJQUFJO0FBQ1gsYUFBYSwwQ0FBYSxVQUFVLFdBQVcsb0JBQW9CLGdCQUFnQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LWNvbnRleHQvZGlzdC9pbmRleC5tanM/ZDI3MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC9jb250ZXh0L3NyYy9jcmVhdGVDb250ZXh0LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIGNyZWF0ZUNvbnRleHQyKHJvb3RDb21wb25lbnROYW1lLCBkZWZhdWx0Q29udGV4dCkge1xuICBjb25zdCBDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChkZWZhdWx0Q29udGV4dCk7XG4gIGZ1bmN0aW9uIFByb3ZpZGVyKHByb3BzKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgLi4uY29udGV4dCB9ID0gcHJvcHM7XG4gICAgY29uc3QgdmFsdWUgPSBSZWFjdC51c2VNZW1vKCgpID0+IGNvbnRleHQsIE9iamVjdC52YWx1ZXMoY29udGV4dCkpO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KENvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWUsIGNoaWxkcmVuIH0pO1xuICB9XG4gIGZ1bmN0aW9uIHVzZUNvbnRleHQyKGNvbnN1bWVyTmFtZSkge1xuICAgIGNvbnN0IGNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0KENvbnRleHQpO1xuICAgIGlmIChjb250ZXh0KSByZXR1cm4gY29udGV4dDtcbiAgICBpZiAoZGVmYXVsdENvbnRleHQgIT09IHZvaWQgMCkgcmV0dXJuIGRlZmF1bHRDb250ZXh0O1xuICAgIHRocm93IG5ldyBFcnJvcihgXFxgJHtjb25zdW1lck5hbWV9XFxgIG11c3QgYmUgdXNlZCB3aXRoaW4gXFxgJHtyb290Q29tcG9uZW50TmFtZX1cXGBgKTtcbiAgfVxuICBQcm92aWRlci5kaXNwbGF5TmFtZSA9IHJvb3RDb21wb25lbnROYW1lICsgXCJQcm92aWRlclwiO1xuICByZXR1cm4gW1Byb3ZpZGVyLCB1c2VDb250ZXh0Ml07XG59XG5mdW5jdGlvbiBjcmVhdGVDb250ZXh0U2NvcGUoc2NvcGVOYW1lLCBjcmVhdGVDb250ZXh0U2NvcGVEZXBzID0gW10pIHtcbiAgbGV0IGRlZmF1bHRDb250ZXh0cyA9IFtdO1xuICBmdW5jdGlvbiBjcmVhdGVDb250ZXh0Myhyb290Q29tcG9uZW50TmFtZSwgZGVmYXVsdENvbnRleHQpIHtcbiAgICBjb25zdCBCYXNlQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZGVmYXVsdENvbnRleHQpO1xuICAgIGNvbnN0IGluZGV4ID0gZGVmYXVsdENvbnRleHRzLmxlbmd0aDtcbiAgICBkZWZhdWx0Q29udGV4dHMgPSBbLi4uZGVmYXVsdENvbnRleHRzLCBkZWZhdWx0Q29udGV4dF07XG4gICAgZnVuY3Rpb24gUHJvdmlkZXIocHJvcHMpIHtcbiAgICAgIGNvbnN0IHsgc2NvcGUsIGNoaWxkcmVuLCAuLi5jb250ZXh0IH0gPSBwcm9wcztcbiAgICAgIGNvbnN0IENvbnRleHQgPSBzY29wZT8uW3Njb3BlTmFtZV1baW5kZXhdIHx8IEJhc2VDb250ZXh0O1xuICAgICAgY29uc3QgdmFsdWUgPSBSZWFjdC51c2VNZW1vKCgpID0+IGNvbnRleHQsIE9iamVjdC52YWx1ZXMoY29udGV4dCkpO1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZSwgY2hpbGRyZW4gfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVzZUNvbnRleHQyKGNvbnN1bWVyTmFtZSwgc2NvcGUpIHtcbiAgICAgIGNvbnN0IENvbnRleHQgPSBzY29wZT8uW3Njb3BlTmFtZV1baW5kZXhdIHx8IEJhc2VDb250ZXh0O1xuICAgICAgY29uc3QgY29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoQ29udGV4dCk7XG4gICAgICBpZiAoY29udGV4dCkgcmV0dXJuIGNvbnRleHQ7XG4gICAgICBpZiAoZGVmYXVsdENvbnRleHQgIT09IHZvaWQgMCkgcmV0dXJuIGRlZmF1bHRDb250ZXh0O1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBcXGAke2NvbnN1bWVyTmFtZX1cXGAgbXVzdCBiZSB1c2VkIHdpdGhpbiBcXGAke3Jvb3RDb21wb25lbnROYW1lfVxcYGApO1xuICAgIH1cbiAgICBQcm92aWRlci5kaXNwbGF5TmFtZSA9IHJvb3RDb21wb25lbnROYW1lICsgXCJQcm92aWRlclwiO1xuICAgIHJldHVybiBbUHJvdmlkZXIsIHVzZUNvbnRleHQyXTtcbiAgfVxuICBjb25zdCBjcmVhdGVTY29wZSA9ICgpID0+IHtcbiAgICBjb25zdCBzY29wZUNvbnRleHRzID0gZGVmYXVsdENvbnRleHRzLm1hcCgoZGVmYXVsdENvbnRleHQpID0+IHtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVDb250ZXh0KGRlZmF1bHRDb250ZXh0KTtcbiAgICB9KTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdXNlU2NvcGUoc2NvcGUpIHtcbiAgICAgIGNvbnN0IGNvbnRleHRzID0gc2NvcGU/LltzY29wZU5hbWVdIHx8IHNjb3BlQ29udGV4dHM7XG4gICAgICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICAgICAgKCkgPT4gKHsgW2BfX3Njb3BlJHtzY29wZU5hbWV9YF06IHsgLi4uc2NvcGUsIFtzY29wZU5hbWVdOiBjb250ZXh0cyB9IH0pLFxuICAgICAgICBbc2NvcGUsIGNvbnRleHRzXVxuICAgICAgKTtcbiAgICB9O1xuICB9O1xuICBjcmVhdGVTY29wZS5zY29wZU5hbWUgPSBzY29wZU5hbWU7XG4gIHJldHVybiBbY3JlYXRlQ29udGV4dDMsIGNvbXBvc2VDb250ZXh0U2NvcGVzKGNyZWF0ZVNjb3BlLCAuLi5jcmVhdGVDb250ZXh0U2NvcGVEZXBzKV07XG59XG5mdW5jdGlvbiBjb21wb3NlQ29udGV4dFNjb3BlcyguLi5zY29wZXMpIHtcbiAgY29uc3QgYmFzZVNjb3BlID0gc2NvcGVzWzBdO1xuICBpZiAoc2NvcGVzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIGJhc2VTY29wZTtcbiAgY29uc3QgY3JlYXRlU2NvcGUgPSAoKSA9PiB7XG4gICAgY29uc3Qgc2NvcGVIb29rcyA9IHNjb3Blcy5tYXAoKGNyZWF0ZVNjb3BlMikgPT4gKHtcbiAgICAgIHVzZVNjb3BlOiBjcmVhdGVTY29wZTIoKSxcbiAgICAgIHNjb3BlTmFtZTogY3JlYXRlU2NvcGUyLnNjb3BlTmFtZVxuICAgIH0pKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdXNlQ29tcG9zZWRTY29wZXMob3ZlcnJpZGVTY29wZXMpIHtcbiAgICAgIGNvbnN0IG5leHRTY29wZXMgPSBzY29wZUhvb2tzLnJlZHVjZSgobmV4dFNjb3BlczIsIHsgdXNlU2NvcGUsIHNjb3BlTmFtZSB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHNjb3BlUHJvcHMgPSB1c2VTY29wZShvdmVycmlkZVNjb3Blcyk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IHNjb3BlUHJvcHNbYF9fc2NvcGUke3Njb3BlTmFtZX1gXTtcbiAgICAgICAgcmV0dXJuIHsgLi4ubmV4dFNjb3BlczIsIC4uLmN1cnJlbnRTY29wZSB9O1xuICAgICAgfSwge30pO1xuICAgICAgcmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4gKHsgW2BfX3Njb3BlJHtiYXNlU2NvcGUuc2NvcGVOYW1lfWBdOiBuZXh0U2NvcGVzIH0pLCBbbmV4dFNjb3Blc10pO1xuICAgIH07XG4gIH07XG4gIGNyZWF0ZVNjb3BlLnNjb3BlTmFtZSA9IGJhc2VTY29wZS5zY29wZU5hbWU7XG4gIHJldHVybiBjcmVhdGVTY29wZTtcbn1cbmV4cG9ydCB7XG4gIGNyZWF0ZUNvbnRleHQyIGFzIGNyZWF0ZUNvbnRleHQsXG4gIGNyZWF0ZUNvbnRleHRTY29wZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-form/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@radix-ui/react-form/dist/index.mjs ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Control: function() { return /* binding */ Control; },\n/* harmony export */   Field: function() { return /* binding */ Field; },\n/* harmony export */   Form: function() { return /* binding */ Form; },\n/* harmony export */   FormControl: function() { return /* binding */ FormControl; },\n/* harmony export */   FormField: function() { return /* binding */ FormField; },\n/* harmony export */   FormLabel: function() { return /* binding */ FormLabel; },\n/* harmony export */   FormMessage: function() { return /* binding */ FormMessage; },\n/* harmony export */   FormSubmit: function() { return /* binding */ FormSubmit; },\n/* harmony export */   FormValidityState: function() { return /* binding */ FormValidityState; },\n/* harmony export */   Label: function() { return /* binding */ Label; },\n/* harmony export */   Message: function() { return /* binding */ Message; },\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   Submit: function() { return /* binding */ Submit; },\n/* harmony export */   ValidityState: function() { return /* binding */ ValidityState; },\n/* harmony export */   createFormScope: function() { return /* binding */ createFormScope; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-id */ \"(app-pages-browser)/./node_modules/@radix-ui/react-id/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_label__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @radix-ui/react-label */ \"(app-pages-browser)/./node_modules/@radix-ui/react-label/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Control,Field,Form,FormControl,FormField,FormLabel,FormMessage,FormSubmit,FormValidityState,Label,Message,Root,Submit,ValidityState,createFormScope auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$();\n// packages/react/form/src/Form.tsx\n\n\n\n\n\n\n\n\nvar [createFormContext, createFormScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContextScope)(\"Form\");\nvar FORM_NAME = \"Form\";\nvar [ValidationProvider, useValidationContext] = createFormContext(FORM_NAME);\nvar [AriaDescriptionProvider, useAriaDescriptionContext] = createFormContext(FORM_NAME);\nvar Form = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = _s((props, forwardedRef)=>{\n    _s();\n    const { __scopeForm, onClearServerErrors = ()=>{}, ...rootProps } = props;\n    const formRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedFormRef = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, formRef);\n    const [validityMap, setValidityMap] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const getFieldValidity = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((fieldName)=>validityMap[fieldName], [\n        validityMap\n    ]);\n    const handleFieldValidityChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((fieldName, validity)=>setValidityMap((prevValidityMap)=>{\n            var _prevValidityMap_fieldName;\n            return {\n                ...prevValidityMap,\n                [fieldName]: {\n                    ...(_prevValidityMap_fieldName = prevValidityMap[fieldName]) !== null && _prevValidityMap_fieldName !== void 0 ? _prevValidityMap_fieldName : {},\n                    ...validity\n                }\n            };\n        }), []);\n    const handleFieldValiditionClear = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((fieldName)=>{\n        setValidityMap((prevValidityMap)=>({\n                ...prevValidityMap,\n                [fieldName]: void 0\n            }));\n        setCustomErrorsMap((prevCustomErrorsMap)=>({\n                ...prevCustomErrorsMap,\n                [fieldName]: {}\n            }));\n    }, []);\n    const [customMatcherEntriesMap, setCustomMatcherEntriesMap] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const getFieldCustomMatcherEntries = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((fieldName)=>{\n        var _customMatcherEntriesMap_fieldName;\n        return (_customMatcherEntriesMap_fieldName = customMatcherEntriesMap[fieldName]) !== null && _customMatcherEntriesMap_fieldName !== void 0 ? _customMatcherEntriesMap_fieldName : [];\n    }, [\n        customMatcherEntriesMap\n    ]);\n    const handleFieldCustomMatcherAdd = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((fieldName, matcherEntry)=>{\n        setCustomMatcherEntriesMap((prevCustomMatcherEntriesMap)=>{\n            var _prevCustomMatcherEntriesMap_fieldName;\n            return {\n                ...prevCustomMatcherEntriesMap,\n                [fieldName]: [\n                    ...(_prevCustomMatcherEntriesMap_fieldName = prevCustomMatcherEntriesMap[fieldName]) !== null && _prevCustomMatcherEntriesMap_fieldName !== void 0 ? _prevCustomMatcherEntriesMap_fieldName : [],\n                    matcherEntry\n                ]\n            };\n        });\n    }, []);\n    const handleFieldCustomMatcherRemove = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((fieldName, matcherEntryId)=>{\n        setCustomMatcherEntriesMap((prevCustomMatcherEntriesMap)=>{\n            var _prevCustomMatcherEntriesMap_fieldName;\n            return {\n                ...prevCustomMatcherEntriesMap,\n                [fieldName]: ((_prevCustomMatcherEntriesMap_fieldName = prevCustomMatcherEntriesMap[fieldName]) !== null && _prevCustomMatcherEntriesMap_fieldName !== void 0 ? _prevCustomMatcherEntriesMap_fieldName : []).filter((matcherEntry)=>matcherEntry.id !== matcherEntryId)\n            };\n        });\n    }, []);\n    const [customErrorsMap, setCustomErrorsMap] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const getFieldCustomErrors = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((fieldName)=>{\n        var _customErrorsMap_fieldName;\n        return (_customErrorsMap_fieldName = customErrorsMap[fieldName]) !== null && _customErrorsMap_fieldName !== void 0 ? _customErrorsMap_fieldName : {};\n    }, [\n        customErrorsMap\n    ]);\n    const handleFieldCustomErrorsChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((fieldName, customErrors)=>{\n        setCustomErrorsMap((prevCustomErrorsMap)=>{\n            var _prevCustomErrorsMap_fieldName;\n            return {\n                ...prevCustomErrorsMap,\n                [fieldName]: {\n                    ...(_prevCustomErrorsMap_fieldName = prevCustomErrorsMap[fieldName]) !== null && _prevCustomErrorsMap_fieldName !== void 0 ? _prevCustomErrorsMap_fieldName : {},\n                    ...customErrors\n                }\n            };\n        });\n    }, []);\n    const [messageIdsMap, setMessageIdsMap] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const handleFieldMessageIdAdd = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((fieldName, id)=>{\n        setMessageIdsMap((prevMessageIdsMap)=>{\n            const fieldDescriptionIds = new Set(prevMessageIdsMap[fieldName]).add(id);\n            return {\n                ...prevMessageIdsMap,\n                [fieldName]: fieldDescriptionIds\n            };\n        });\n    }, []);\n    const handleFieldMessageIdRemove = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((fieldName, id)=>{\n        setMessageIdsMap((prevMessageIdsMap)=>{\n            const fieldDescriptionIds = new Set(prevMessageIdsMap[fieldName]);\n            fieldDescriptionIds.delete(id);\n            return {\n                ...prevMessageIdsMap,\n                [fieldName]: fieldDescriptionIds\n            };\n        });\n    }, []);\n    const getFieldDescription = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((fieldName)=>{\n        var _messageIdsMap_fieldName;\n        return Array.from((_messageIdsMap_fieldName = messageIdsMap[fieldName]) !== null && _messageIdsMap_fieldName !== void 0 ? _messageIdsMap_fieldName : []).join(\" \") || void 0;\n    }, [\n        messageIdsMap\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ValidationProvider, {\n        scope: __scopeForm,\n        getFieldValidity,\n        onFieldValidityChange: handleFieldValidityChange,\n        getFieldCustomMatcherEntries,\n        onFieldCustomMatcherEntryAdd: handleFieldCustomMatcherAdd,\n        onFieldCustomMatcherEntryRemove: handleFieldCustomMatcherRemove,\n        getFieldCustomErrors,\n        onFieldCustomErrorsChange: handleFieldCustomErrorsChange,\n        onFieldValiditionClear: handleFieldValiditionClear,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AriaDescriptionProvider, {\n            scope: __scopeForm,\n            onFieldMessageIdAdd: handleFieldMessageIdAdd,\n            onFieldMessageIdRemove: handleFieldMessageIdRemove,\n            getFieldDescription,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.form, {\n                ...rootProps,\n                ref: composedFormRef,\n                onInvalid: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onInvalid, (event)=>{\n                    const firstInvalidControl = getFirstInvalidControl(event.currentTarget);\n                    if (firstInvalidControl === event.target) firstInvalidControl.focus();\n                    event.preventDefault();\n                }),\n                onSubmit: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onSubmit, onClearServerErrors, {\n                    checkForDefaultPrevented: false\n                }),\n                onReset: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onReset, onClearServerErrors)\n            })\n        })\n    });\n}, \"znXW+SV0CCLgbEjczhrA/A+y5V4=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n})), \"znXW+SV0CCLgbEjczhrA/A+y5V4=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n});\n_c1 = Form;\nForm.displayName = FORM_NAME;\nvar FIELD_NAME = \"FormField\";\nvar [FormFieldProvider, useFormFieldContext] = createFormContext(FIELD_NAME);\nvar FormField = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c2 = _s1((props, forwardedRef)=>{\n    _s1();\n    const { __scopeForm, name, serverInvalid = false, ...fieldProps } = props;\n    const validationContext = useValidationContext(FIELD_NAME, __scopeForm);\n    const validity = validationContext.getFieldValidity(name);\n    const id = (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId)();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormFieldProvider, {\n        scope: __scopeForm,\n        id,\n        name,\n        serverInvalid,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n            \"data-valid\": getValidAttribute(validity, serverInvalid),\n            \"data-invalid\": getInvalidAttribute(validity, serverInvalid),\n            ...fieldProps,\n            ref: forwardedRef\n        })\n    });\n}, \"QtO2CrCjvzX7EDI72yMOl2fgkVw=\", false, function() {\n    return [\n        useValidationContext,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId\n    ];\n})), \"QtO2CrCjvzX7EDI72yMOl2fgkVw=\", false, function() {\n    return [\n        useValidationContext,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId\n    ];\n});\n_c3 = FormField;\nFormField.displayName = FIELD_NAME;\nvar LABEL_NAME = \"FormLabel\";\nvar FormLabel = /*#__PURE__*/ _s2(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c4 = _s2((props, forwardedRef)=>{\n    _s2();\n    const { __scopeForm, ...labelProps } = props;\n    const validationContext = useValidationContext(LABEL_NAME, __scopeForm);\n    const fieldContext = useFormFieldContext(LABEL_NAME, __scopeForm);\n    const htmlFor = labelProps.htmlFor || fieldContext.id;\n    const validity = validationContext.getFieldValidity(fieldContext.name);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_label__WEBPACK_IMPORTED_MODULE_7__.Label, {\n        \"data-valid\": getValidAttribute(validity, fieldContext.serverInvalid),\n        \"data-invalid\": getInvalidAttribute(validity, fieldContext.serverInvalid),\n        ...labelProps,\n        ref: forwardedRef,\n        htmlFor\n    });\n}, \"xAZltm1+/ZJbfBzCEma+mqQ9Vi8=\", false, function() {\n    return [\n        useValidationContext,\n        useFormFieldContext\n    ];\n})), \"xAZltm1+/ZJbfBzCEma+mqQ9Vi8=\", false, function() {\n    return [\n        useValidationContext,\n        useFormFieldContext\n    ];\n});\n_c5 = FormLabel;\nFormLabel.displayName = LABEL_NAME;\nvar CONTROL_NAME = \"FormControl\";\nvar FormControl = /*#__PURE__*/ _s3(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c6 = _s3((props, forwardedRef)=>{\n    _s3();\n    const { __scopeForm, ...controlProps } = props;\n    const validationContext = useValidationContext(CONTROL_NAME, __scopeForm);\n    const fieldContext = useFormFieldContext(CONTROL_NAME, __scopeForm);\n    const ariaDescriptionContext = useAriaDescriptionContext(CONTROL_NAME, __scopeForm);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRef = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, ref);\n    const name = controlProps.name || fieldContext.name;\n    const id = controlProps.id || fieldContext.id;\n    const customMatcherEntries = validationContext.getFieldCustomMatcherEntries(name);\n    const { onFieldValidityChange, onFieldCustomErrorsChange, onFieldValiditionClear } = validationContext;\n    const updateControlValidity = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(async (control)=>{\n        if (hasBuiltInError(control.validity)) {\n            const controlValidity2 = validityStateToObject(control.validity);\n            onFieldValidityChange(name, controlValidity2);\n            return;\n        }\n        const formData = control.form ? new FormData(control.form) : new FormData();\n        const matcherArgs = [\n            control.value,\n            formData\n        ];\n        const syncCustomMatcherEntries = [];\n        const ayncCustomMatcherEntries = [];\n        customMatcherEntries.forEach((customMatcherEntry)=>{\n            if (isAsyncCustomMatcherEntry(customMatcherEntry, matcherArgs)) {\n                ayncCustomMatcherEntries.push(customMatcherEntry);\n            } else if (isSyncCustomMatcherEntry(customMatcherEntry)) {\n                syncCustomMatcherEntries.push(customMatcherEntry);\n            }\n        });\n        const syncCustomErrors = syncCustomMatcherEntries.map((param)=>{\n            let { id: id2, match } = param;\n            return [\n                id2,\n                match(...matcherArgs)\n            ];\n        });\n        const syncCustomErrorsById = Object.fromEntries(syncCustomErrors);\n        const hasSyncCustomErrors = Object.values(syncCustomErrorsById).some(Boolean);\n        const hasCustomError = hasSyncCustomErrors;\n        control.setCustomValidity(hasCustomError ? DEFAULT_INVALID_MESSAGE : \"\");\n        const controlValidity = validityStateToObject(control.validity);\n        onFieldValidityChange(name, controlValidity);\n        onFieldCustomErrorsChange(name, syncCustomErrorsById);\n        if (!hasSyncCustomErrors && ayncCustomMatcherEntries.length > 0) {\n            const promisedCustomErrors = ayncCustomMatcherEntries.map((param)=>{\n                let { id: id2, match } = param;\n                return match(...matcherArgs).then((matches)=>[\n                        id2,\n                        matches\n                    ]);\n            });\n            const asyncCustomErrors = await Promise.all(promisedCustomErrors);\n            const asyncCustomErrorsById = Object.fromEntries(asyncCustomErrors);\n            const hasAsyncCustomErrors = Object.values(asyncCustomErrorsById).some(Boolean);\n            const hasCustomError2 = hasAsyncCustomErrors;\n            control.setCustomValidity(hasCustomError2 ? DEFAULT_INVALID_MESSAGE : \"\");\n            const controlValidity2 = validityStateToObject(control.validity);\n            onFieldValidityChange(name, controlValidity2);\n            onFieldCustomErrorsChange(name, asyncCustomErrorsById);\n        }\n    }, [\n        customMatcherEntries,\n        name,\n        onFieldCustomErrorsChange,\n        onFieldValidityChange\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const control = ref.current;\n        if (control) {\n            const handleChange = ()=>updateControlValidity(control);\n            control.addEventListener(\"change\", handleChange);\n            return ()=>control.removeEventListener(\"change\", handleChange);\n        }\n    }, [\n        updateControlValidity\n    ]);\n    const resetControlValidity = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        const control = ref.current;\n        if (control) {\n            control.setCustomValidity(\"\");\n            onFieldValiditionClear(name);\n        }\n    }, [\n        name,\n        onFieldValiditionClear\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        var _ref_current;\n        const form = (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;\n        if (form) {\n            form.addEventListener(\"reset\", resetControlValidity);\n            return ()=>form.removeEventListener(\"reset\", resetControlValidity);\n        }\n    }, [\n        resetControlValidity\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const control = ref.current;\n        const form = control === null || control === void 0 ? void 0 : control.closest(\"form\");\n        if (form && fieldContext.serverInvalid) {\n            const firstInvalidControl = getFirstInvalidControl(form);\n            if (firstInvalidControl === control) firstInvalidControl.focus();\n        }\n    }, [\n        fieldContext.serverInvalid\n    ]);\n    const validity = validationContext.getFieldValidity(name);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.input, {\n        \"data-valid\": getValidAttribute(validity, fieldContext.serverInvalid),\n        \"data-invalid\": getInvalidAttribute(validity, fieldContext.serverInvalid),\n        \"aria-invalid\": fieldContext.serverInvalid ? true : void 0,\n        \"aria-describedby\": ariaDescriptionContext.getFieldDescription(name),\n        title: \"\",\n        ...controlProps,\n        ref: composedRef,\n        id,\n        name,\n        onInvalid: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onInvalid, (event)=>{\n            const control = event.currentTarget;\n            updateControlValidity(control);\n        }),\n        onChange: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onChange, (event)=>{\n            resetControlValidity();\n        })\n    });\n}, \"iwsb6EFGBTRTcMGyFrwMG6Mtvlg=\", false, function() {\n    return [\n        useValidationContext,\n        useFormFieldContext,\n        useAriaDescriptionContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n})), \"iwsb6EFGBTRTcMGyFrwMG6Mtvlg=\", false, function() {\n    return [\n        useValidationContext,\n        useFormFieldContext,\n        useAriaDescriptionContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n});\n_c7 = FormControl;\nFormControl.displayName = CONTROL_NAME;\nvar DEFAULT_INVALID_MESSAGE = \"This value is not valid\";\nvar DEFAULT_BUILT_IN_MESSAGES = {\n    badInput: DEFAULT_INVALID_MESSAGE,\n    patternMismatch: \"This value does not match the required pattern\",\n    rangeOverflow: \"This value is too large\",\n    rangeUnderflow: \"This value is too small\",\n    stepMismatch: \"This value does not match the required step\",\n    tooLong: \"This value is too long\",\n    tooShort: \"This value is too short\",\n    typeMismatch: \"This value does not match the required type\",\n    valid: void 0,\n    valueMissing: \"This value is missing\"\n};\nvar MESSAGE_NAME = \"FormMessage\";\nvar FormMessage = /*#__PURE__*/ _s4(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c8 = _s4((props, forwardedRef)=>{\n    _s4();\n    const { match, name: nameProp, ...messageProps } = props;\n    const fieldContext = useFormFieldContext(MESSAGE_NAME, props.__scopeForm);\n    const name = nameProp !== null && nameProp !== void 0 ? nameProp : fieldContext.name;\n    if (match === void 0) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormMessageImpl, {\n            ...messageProps,\n            ref: forwardedRef,\n            name,\n            children: props.children || DEFAULT_INVALID_MESSAGE\n        });\n    } else if (typeof match === \"function\") {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormCustomMessage, {\n            match,\n            ...messageProps,\n            ref: forwardedRef,\n            name\n        });\n    } else {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormBuiltInMessage, {\n            match,\n            ...messageProps,\n            ref: forwardedRef,\n            name\n        });\n    }\n}, \"KDtQrqLsDp7HN9npqX++fwcE8eQ=\", false, function() {\n    return [\n        useFormFieldContext\n    ];\n})), \"KDtQrqLsDp7HN9npqX++fwcE8eQ=\", false, function() {\n    return [\n        useFormFieldContext\n    ];\n});\n_c9 = FormMessage;\nFormMessage.displayName = MESSAGE_NAME;\nvar FormBuiltInMessage = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s5((props, forwardedRef)=>{\n    _s5();\n    const { match, forceMatch = false, name, children, ...messageProps } = props;\n    const validationContext = useValidationContext(MESSAGE_NAME, messageProps.__scopeForm);\n    const validity = validationContext.getFieldValidity(name);\n    const matches = forceMatch || (validity === null || validity === void 0 ? void 0 : validity[match]);\n    if (matches) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormMessageImpl, {\n            ref: forwardedRef,\n            ...messageProps,\n            name,\n            children: children !== null && children !== void 0 ? children : DEFAULT_BUILT_IN_MESSAGES[match]\n        });\n    }\n    return null;\n}, \"B9g6kthSaiu6o2fBu1ng4isqqU8=\", false, function() {\n    return [\n        useValidationContext\n    ];\n}));\n_c10 = FormBuiltInMessage;\nvar FormCustomMessage = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s6((props, forwardedRef)=>{\n    _s6();\n    const { match, forceMatch = false, name, id: idProp, children, ...messageProps } = props;\n    const validationContext = useValidationContext(MESSAGE_NAME, messageProps.__scopeForm);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRef = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, ref);\n    const _id = (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId)();\n    const id = idProp !== null && idProp !== void 0 ? idProp : _id;\n    const customMatcherEntry = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            id,\n            match\n        }), [\n        id,\n        match\n    ]);\n    const { onFieldCustomMatcherEntryAdd, onFieldCustomMatcherEntryRemove } = validationContext;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        onFieldCustomMatcherEntryAdd(name, customMatcherEntry);\n        return ()=>onFieldCustomMatcherEntryRemove(name, customMatcherEntry.id);\n    }, [\n        customMatcherEntry,\n        name,\n        onFieldCustomMatcherEntryAdd,\n        onFieldCustomMatcherEntryRemove\n    ]);\n    const validity = validationContext.getFieldValidity(name);\n    const customErrors = validationContext.getFieldCustomErrors(name);\n    const hasMatchingCustomError = customErrors[id];\n    const matches = forceMatch || validity && !hasBuiltInError(validity) && hasMatchingCustomError;\n    if (matches) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormMessageImpl, {\n            id,\n            ref: composedRef,\n            ...messageProps,\n            name,\n            children: children !== null && children !== void 0 ? children : DEFAULT_INVALID_MESSAGE\n        });\n    }\n    return null;\n}, \"yU9yUzvpwSblWm7+F2wSiARynYI=\", false, function() {\n    return [\n        useValidationContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId\n    ];\n}));\n_c11 = FormCustomMessage;\nvar FormMessageImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s7((props, forwardedRef)=>{\n    _s7();\n    const { __scopeForm, id: idProp, name, ...messageProps } = props;\n    const ariaDescriptionContext = useAriaDescriptionContext(MESSAGE_NAME, __scopeForm);\n    const _id = (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId)();\n    const id = idProp !== null && idProp !== void 0 ? idProp : _id;\n    const { onFieldMessageIdAdd, onFieldMessageIdRemove } = ariaDescriptionContext;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        onFieldMessageIdAdd(name, id);\n        return ()=>onFieldMessageIdRemove(name, id);\n    }, [\n        name,\n        id,\n        onFieldMessageIdAdd,\n        onFieldMessageIdRemove\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.span, {\n        id,\n        ...messageProps,\n        ref: forwardedRef\n    });\n}, \"szdh+V66vOn6ALMfxAOuZEo9T+Q=\", false, function() {\n    return [\n        useAriaDescriptionContext,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId\n    ];\n}));\n_c12 = FormMessageImpl;\nvar VALIDITY_STATE_NAME = \"FormValidityState\";\nvar FormValidityState = (props)=>{\n    _s8();\n    const { __scopeForm, name: nameProp, children } = props;\n    const validationContext = useValidationContext(VALIDITY_STATE_NAME, __scopeForm);\n    const fieldContext = useFormFieldContext(VALIDITY_STATE_NAME, __scopeForm);\n    const name = nameProp !== null && nameProp !== void 0 ? nameProp : fieldContext.name;\n    const validity = validationContext.getFieldValidity(name);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: children(validity)\n    });\n};\n_s8(FormValidityState, \"xAZltm1+/ZJbfBzCEma+mqQ9Vi8=\", false, function() {\n    return [\n        useValidationContext,\n        useFormFieldContext\n    ];\n});\n_c13 = FormValidityState;\nFormValidityState.displayName = VALIDITY_STATE_NAME;\nvar SUBMIT_NAME = \"FormSubmit\";\nvar FormSubmit = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c14 = (props, forwardedRef)=>{\n    const { __scopeForm, ...submitProps } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.button, {\n        type: \"submit\",\n        ...submitProps,\n        ref: forwardedRef\n    });\n});\n_c15 = FormSubmit;\nFormSubmit.displayName = SUBMIT_NAME;\nfunction validityStateToObject(validity) {\n    const object = {};\n    for(const key in validity){\n        object[key] = validity[key];\n    }\n    return object;\n}\nfunction isHTMLElement(element) {\n    return element instanceof HTMLElement;\n}\nfunction isFormControl(element) {\n    return \"validity\" in element;\n}\nfunction isInvalid(control) {\n    return isFormControl(control) && (control.validity.valid === false || control.getAttribute(\"aria-invalid\") === \"true\");\n}\nfunction getFirstInvalidControl(form) {\n    const elements = form.elements;\n    const [firstInvalidControl] = Array.from(elements).filter(isHTMLElement).filter(isInvalid);\n    return firstInvalidControl;\n}\nfunction isAsyncCustomMatcherEntry(entry, args) {\n    return entry.match.constructor.name === \"AsyncFunction\" || returnsPromise(entry.match, args);\n}\nfunction isSyncCustomMatcherEntry(entry) {\n    return entry.match.constructor.name === \"Function\";\n}\nfunction returnsPromise(func, args) {\n    return func(...args) instanceof Promise;\n}\nfunction hasBuiltInError(validity) {\n    let error = false;\n    for(const validityKey in validity){\n        const key = validityKey;\n        if (key !== \"valid\" && key !== \"customError\" && validity[key]) {\n            error = true;\n            break;\n        }\n    }\n    return error;\n}\nfunction getValidAttribute(validity, serverInvalid) {\n    if ((validity === null || validity === void 0 ? void 0 : validity.valid) === true && !serverInvalid) return true;\n    return void 0;\n}\nfunction getInvalidAttribute(validity, serverInvalid) {\n    if ((validity === null || validity === void 0 ? void 0 : validity.valid) === false || serverInvalid) return true;\n    return void 0;\n}\nvar Root = Form;\nvar Field = FormField;\nvar Label = FormLabel;\nvar Control = FormControl;\nvar Message = FormMessage;\nvar ValidityState = FormValidityState;\nvar Submit = FormSubmit;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"Form$React.forwardRef\");\n$RefreshReg$(_c1, \"Form\");\n$RefreshReg$(_c2, \"FormField$React.forwardRef\");\n$RefreshReg$(_c3, \"FormField\");\n$RefreshReg$(_c4, \"FormLabel$React.forwardRef\");\n$RefreshReg$(_c5, \"FormLabel\");\n$RefreshReg$(_c6, \"FormControl$React.forwardRef\");\n$RefreshReg$(_c7, \"FormControl\");\n$RefreshReg$(_c8, \"FormMessage$React.forwardRef\");\n$RefreshReg$(_c9, \"FormMessage\");\n$RefreshReg$(_c10, \"FormBuiltInMessage\");\n$RefreshReg$(_c11, \"FormCustomMessage\");\n$RefreshReg$(_c12, \"FormMessageImpl\");\n$RefreshReg$(_c13, \"FormValidityState\");\n$RefreshReg$(_c14, \"FormSubmit$React.forwardRef\");\n$RefreshReg$(_c15, \"FormSubmit\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtZm9ybS9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXVCO0FBQ2M7QUFDTDtBQUNHO0FBQ2I7QUFDa0I7QUFDZDtBQTRKaEI7QUF2SlYsSUFBTSxDQUFDVSxtQkFBbUJDLGdCQUFlLEdBQUlSLDJFQUFrQkEsQ0FBQztBQU1oRSxJQUFNUyxZQUFZO0FBbUJsQixJQUFNLENBQUNDLG9CQUFvQkMscUJBQW9CLEdBQzdDSixrQkFBMENFO0FBUzVDLElBQU0sQ0FBQ0cseUJBQXlCQywwQkFBeUIsR0FDdkROLGtCQUErQ0U7QUFRakQsSUFBTUsscUJBQWFqQixHQUFBQSw2Q0FBQSxTQUNqQixDQUFDbUIsT0FBK0JDOztJQUM5QixNQUFNLEVBQUVDLFdBQUEsRUFBYUMsc0JBQXNCLEtBQU8sR0FBRyxHQUFHQyxXQUFVLEdBQUlKO0lBQ3RFLE1BQU1LLFVBQWdCeEIseUNBQUEsQ0FBd0I7SUFDOUMsTUFBTTBCLGtCQUFrQnhCLDZFQUFlQSxDQUFDa0IsY0FBY0k7SUFHdEQsTUFBTSxDQUFDRyxhQUFhQyxlQUFjLEdBQVU1QiwyQ0FBQSxDQUFzQixDQUFDO0lBQ25FLE1BQU04QixtQkFBcUU5Qiw4Q0FBQSxDQUN6RSxDQUFDZ0MsWUFBY0wsV0FBQSxDQUFZSyxVQUFTLEVBQ3BDO1FBQUNMO0tBQVc7SUFFZCxNQUFNTSw0QkFDRWpDLDhDQUFBLENBQ0osQ0FBQ2dDLFdBQVdFLFdBQ1ZOLGVBQWUsQ0FBQ087Z0JBRUtBO21CQUZnQjtnQkFDbkMsR0FBR0EsZUFBQTtnQkFDSCxDQUFDSCxVQUFTLEVBQUc7b0JBQUUsR0FBSUcsQ0FBQUEsNkJBQUFBLGVBQUEsQ0FBZ0JILFVBQVMsY0FBekJHLHdDQUFBQSw2QkFBOEIsQ0FBQztvQkFBSSxHQUFHRCxRQUFBO2dCQUFTO1lBQ3BFO1FBQUEsSUFDRixFQUFDO0lBRUwsTUFBTUUsNkJBQ0VwQyw4Q0FBQSxDQUFZLENBQUNnQztRQUNqQkosZUFBZSxDQUFDTyxrQkFBcUI7Z0JBQUUsR0FBR0EsZUFBQTtnQkFBaUIsQ0FBQ0gsVUFBUyxFQUFHO1lBQVU7UUFDbEZLLG1CQUFtQixDQUFDQyxzQkFBeUI7Z0JBQUUsR0FBR0EsbUJBQUE7Z0JBQXFCLENBQUNOLFVBQVMsRUFBRyxDQUFDO1lBQUU7SUFDekYsR0FBRyxFQUFFO0lBR1AsTUFBTSxDQUFDTyx5QkFBeUJDLDJCQUEwQixHQUNsRHhDLDJDQUFBLENBQWtDLENBQUM7SUFDM0MsTUFBTXlDLCtCQUNFekMsOENBQUEsQ0FDSixDQUFDZ0M7WUFBY087ZUFBQUEsQ0FBQUEscUNBQUFBLHVCQUFBLENBQXdCUCxVQUFTLGNBQWpDTyxnREFBQUEscUNBQXNDLEVBQUM7SUFBQSxHQUN0RDtRQUFDQTtLQUF1QjtJQUU1QixNQUFNRyw4QkFDRTFDLDhDQUFBLENBQVksQ0FBQ2dDLFdBQVdXO1FBQzVCSCwyQkFBMkIsQ0FBQ0k7Z0JBRVJBO21CQUZ5QztnQkFDM0QsR0FBR0EsMkJBQUE7Z0JBQ0gsQ0FBQ1osVUFBUyxFQUFHO3VCQUFLWSxDQUFBQSx5Q0FBQUEsMkJBQUEsQ0FBNEJaLFVBQVMsY0FBckNZLG9EQUFBQSx5Q0FBMEMsRUFBQztvQkFBSUQ7aUJBQVk7WUFDL0U7UUFBQTtJQUNGLEdBQUcsRUFBRTtJQUNQLE1BQU1FLGlDQUNFN0MsOENBQUEsQ0FBWSxDQUFDZ0MsV0FBV2M7UUFDNUJOLDJCQUEyQixDQUFDSTtnQkFFWkE7bUJBRjZDO2dCQUMzRCxHQUFHQSwyQkFBQTtnQkFDSCxDQUFDWixVQUFTLEdBQUlZLENBQUFBLHlDQUFBQSwyQkFBQSxDQUE0QlosVUFBUyxjQUFyQ1ksb0RBQUFBLHlDQUEwQyxFQUFDLEVBQUdHLE1BQUEsQ0FDMUQsQ0FBQ0osZUFBaUJBLGFBQWFLLEVBQUEsS0FBT0Y7WUFFMUM7UUFBQTtJQUNGLEdBQUcsRUFBRTtJQUdQLE1BQU0sQ0FBQ0csaUJBQWlCWixtQkFBa0IsR0FBVXJDLDJDQUFBLENBQTBCLENBQUM7SUFDL0UsTUFBTWtELHVCQUE2RWxELDhDQUFBLENBQ2pGLENBQUNnQztZQUFjaUI7ZUFBQUEsQ0FBQUEsNkJBQUFBLGVBQUEsQ0FBZ0JqQixVQUFTLGNBQXpCaUIsd0NBQUFBLDZCQUE4QixDQUFDO0lBQUEsR0FDOUM7UUFBQ0E7S0FBZTtJQUVsQixNQUFNRSxnQ0FDRW5ELDhDQUFBLENBQVksQ0FBQ2dDLFdBQVdvQjtRQUM1QmYsbUJBQW1CLENBQUNDO2dCQUVDQTttQkFGd0I7Z0JBQzNDLEdBQUdBLG1CQUFBO2dCQUNILENBQUNOLFVBQVMsRUFBRztvQkFBRSxHQUFJTSxDQUFBQSxpQ0FBQUEsbUJBQUEsQ0FBb0JOLFVBQVMsY0FBN0JNLDRDQUFBQSxpQ0FBa0MsQ0FBQztvQkFBSSxHQUFHYyxZQUFBO2dCQUFhO1lBQzVFO1FBQUE7SUFDRixHQUFHLEVBQUU7SUFHUCxNQUFNLENBQUNDLGVBQWVDLGlCQUFnQixHQUFVdEQsMkNBQUEsQ0FBd0IsQ0FBQztJQUN6RSxNQUFNdUQsMEJBQ0V2RCw4Q0FBQSxDQUFZLENBQUNnQyxXQUFXZ0I7UUFDNUJNLGlCQUFpQixDQUFDRTtZQUNoQixNQUFNQyxzQkFBc0IsSUFBSUMsSUFBSUYsaUJBQUEsQ0FBa0J4QixVQUFVLEVBQUUyQixHQUFBLENBQUlYO1lBQ3RFLE9BQU87Z0JBQUUsR0FBR1EsaUJBQUE7Z0JBQW1CLENBQUN4QixVQUFTLEVBQUd5QjtZQUFvQjtRQUNsRTtJQUNGLEdBQUcsRUFBRTtJQUNQLE1BQU1HLDZCQUNFNUQsOENBQUEsQ0FBWSxDQUFDZ0MsV0FBV2dCO1FBQzVCTSxpQkFBaUIsQ0FBQ0U7WUFDaEIsTUFBTUMsc0JBQXNCLElBQUlDLElBQUlGLGlCQUFBLENBQWtCeEIsVUFBVTtZQUNoRXlCLG9CQUFvQkksTUFBQSxDQUFPYjtZQUMzQixPQUFPO2dCQUFFLEdBQUdRLGlCQUFBO2dCQUFtQixDQUFDeEIsVUFBUyxFQUFHeUI7WUFBb0I7UUFDbEU7SUFDRixHQUFHLEVBQUU7SUFDUCxNQUFNSyxzQkFDRTlELDhDQUFBLENBQ0osQ0FBQ2dDO1lBQXlCcUI7ZUFBWFUsTUFBTUMsSUFBQSxDQUFLWCxDQUFBQSwyQkFBQUEsYUFBQSxDQUFjckIsVUFBUyxjQUF2QnFCLHNDQUFBQSwyQkFBNEIsRUFBRSxFQUFFWSxJQUFBLENBQUssUUFBUTtJQUFBLEdBQ3ZFO1FBQUNaO0tBQWE7SUFHbEIsT0FDRSxnQkFBQTVDLHNEQUFBQSxDQUFDSSxvQkFBQTtRQUNDcUQsT0FBTzdDO1FBQ1BTO1FBQ0FxQyx1QkFBdUJsQztRQUN2QlE7UUFDQTJCLDhCQUE4QjFCO1FBQzlCMkIsaUNBQWlDeEI7UUFDakNLO1FBQ0FvQiwyQkFBMkJuQjtRQUMzQm9CLHdCQUF3Qm5DO1FBRXhCb0MsVUFBQSxnQkFBQS9ELHNEQUFBQSxDQUFDTSx5QkFBQTtZQUNDbUQsT0FBTzdDO1lBQ1BvRCxxQkFBcUJsQjtZQUNyQm1CLHdCQUF3QmQ7WUFDeEJFO1lBRUFVLFVBQUEsZ0JBQUEvRCxzREFBQUEsQ0FBQ0YsZ0VBQVNBLENBQUNvRSxJQUFBLEVBQVY7Z0JBQ0UsR0FBR3BELFNBQUE7Z0JBQ0pxRCxLQUFLbEQ7Z0JBRUxtRCxXQUFXNUUseUVBQW9CQSxDQUFDa0IsTUFBTTBELFNBQUEsRUFBVyxDQUFDQztvQkFDaEQsTUFBTUMsc0JBQXNCQyx1QkFBdUJGLE1BQU1HLGFBQWE7b0JBQ3RFLElBQUlGLHdCQUF3QkQsTUFBTUksTUFBQSxFQUFRSCxvQkFBb0JJLEtBQUE7b0JBRzlETCxNQUFNTSxjQUFBO2dCQUNSO2dCQUVBQyxVQUFVcEYseUVBQW9CQSxDQUFDa0IsTUFBTWtFLFFBQUEsRUFBVS9ELHFCQUFxQjtvQkFDbEVnRSwwQkFBMEI7Z0JBQzVCO2dCQUVBQyxTQUFTdEYseUVBQW9CQSxDQUFDa0IsTUFBTW9FLE9BQUEsRUFBU2pFO1lBQW1CO1FBQ2xFO0lBQ0Y7QUFHTjs7UUE1SDBCcEIseUVBQWVBOzs7O1FBQWZBLHlFQUFlQTs7OztBQStIM0NlLEtBQUt1RSxXQUFBLEdBQWM1RTtBQU1uQixJQUFNNkUsYUFBYTtBQU9uQixJQUFNLENBQUNDLG1CQUFtQkMsb0JBQW1CLEdBQzNDakYsa0JBQXlDK0U7QUFTM0MsSUFBTUcsMEJBQWtCNUYsSUFBQUEsNkNBQUEsV0FDdEIsQ0FBQ21CLE9BQW9DQzs7SUFDbkMsTUFBTSxFQUFFQyxXQUFBLEVBQWF3RSxJQUFBLEVBQU1DLGdCQUFnQixPQUFPLEdBQUdDLFlBQVcsR0FBSTVFO0lBQ3BFLE1BQU02RSxvQkFBb0JsRixxQkFBcUIyRSxZQUFZcEU7SUFDM0QsTUFBTWEsV0FBVzhELGtCQUFrQmxFLGdCQUFBLENBQWlCK0Q7SUFDcEQsTUFBTTdDLEtBQUs1Qyx5REFBS0E7SUFFaEIsT0FDRSxnQkFBQUssc0RBQUFBLENBQUNpRixtQkFBQTtRQUFrQnhCLE9BQU83QztRQUFhMkI7UUFBUTZDO1FBQVlDO1FBQ3pEdEIsVUFBQSxnQkFBQS9ELHNEQUFBQSxDQUFDRixnRUFBU0EsQ0FBQzBGLEdBQUEsRUFBVjtZQUNDLGNBQVlDLGtCQUFrQmhFLFVBQVU0RDtZQUN4QyxnQkFBY0ssb0JBQW9CakUsVUFBVTREO1lBQzNDLEdBQUdDLFVBQUE7WUFDSm5CLEtBQUt4RDtRQUFBO0lBQ1A7QUFHTjs7UUFkNEJOO1FBRWZWLHFEQUFLQTs7OztRQUZVVTtRQUVmVixxREFBS0E7Ozs7QUFlcEJ3RixVQUFVSixXQUFBLEdBQWNDO0FBTXhCLElBQU1XLGFBQWE7QUFNbkIsSUFBTUMsMEJBQWtCckcsSUFBQUEsNkNBQUEsV0FDdEIsQ0FBQ21CLE9BQW9DQzs7SUFDbkMsTUFBTSxFQUFFQyxXQUFBLEVBQWEsR0FBR2lGLFlBQVcsR0FBSW5GO0lBQ3ZDLE1BQU02RSxvQkFBb0JsRixxQkFBcUJzRixZQUFZL0U7SUFDM0QsTUFBTWtGLGVBQWVaLG9CQUFvQlMsWUFBWS9FO0lBQ3JELE1BQU1tRixVQUFVRixXQUFXRSxPQUFBLElBQVdELGFBQWF2RCxFQUFBO0lBQ25ELE1BQU1kLFdBQVc4RCxrQkFBa0JsRSxnQkFBQSxDQUFpQnlFLGFBQWFWLElBQUk7SUFFckUsT0FDRSxnQkFBQXBGLHNEQUFBQSxDQUFDSCx3REFBY0EsRUFBZDtRQUNDLGNBQVk0RixrQkFBa0JoRSxVQUFVcUUsYUFBYVQsYUFBYTtRQUNsRSxnQkFBY0ssb0JBQW9CakUsVUFBVXFFLGFBQWFULGFBQWE7UUFDckUsR0FBR1EsVUFBQTtRQUNKMUIsS0FBS3hEO1FBQ0xvRjtJQUFBO0FBR047O1FBZDRCMUY7UUFDTDZFOzs7O1FBREs3RTtRQUNMNkU7Ozs7QUFnQnpCVSxVQUFVYixXQUFBLEdBQWNZO0FBTXhCLElBQU1LLGVBQWU7QUFNckIsSUFBTUMsNEJBQW9CMUcsSUFBQUEsNkNBQUEsV0FDeEIsQ0FBQ21CLE9BQXNDQzs7SUFDckMsTUFBTSxFQUFFQyxXQUFBLEVBQWEsR0FBR3NGLGNBQWEsR0FBSXhGO0lBRXpDLE1BQU02RSxvQkFBb0JsRixxQkFBcUIyRixjQUFjcEY7SUFDN0QsTUFBTWtGLGVBQWVaLG9CQUFvQmMsY0FBY3BGO0lBQ3ZELE1BQU11Rix5QkFBeUI1RiwwQkFBMEJ5RixjQUFjcEY7SUFFdkUsTUFBTXVELE1BQVk1RSx5Q0FBQSxDQUEyQjtJQUM3QyxNQUFNNkcsY0FBYzNHLDZFQUFlQSxDQUFDa0IsY0FBY3dEO0lBQ2xELE1BQU1pQixPQUFPYyxhQUFhZCxJQUFBLElBQVFVLGFBQWFWLElBQUE7SUFDL0MsTUFBTTdDLEtBQUsyRCxhQUFhM0QsRUFBQSxJQUFNdUQsYUFBYXZELEVBQUE7SUFDM0MsTUFBTThELHVCQUF1QmQsa0JBQWtCdkQsNEJBQUEsQ0FBNkJvRDtJQUU1RSxNQUFNLEVBQUUxQixxQkFBQSxFQUF1QkcseUJBQUEsRUFBMkJDLHNCQUFBLEVBQXVCLEdBQy9FeUI7SUFDRixNQUFNZSx3QkFBOEIvRyw4Q0FBQSxDQUNsQyxPQUFPZ0g7UUFJTCxJQUFJQyxnQkFBZ0JELFFBQVE5RSxRQUFRLEdBQUc7WUFDckMsTUFBTWdGLG1CQUFrQkMsc0JBQXNCSCxRQUFROUUsUUFBUTtZQUM5RGlDLHNCQUFzQjBCLE1BQU1xQjtZQUM1QjtRQUNGO1FBS0EsTUFBTUUsV0FBV0osUUFBUXJDLElBQUEsR0FBTyxJQUFJMEMsU0FBU0wsUUFBUXJDLElBQUksSUFBSSxJQUFJMEM7UUFDakUsTUFBTUMsY0FBaUM7WUFBQ04sUUFBUU8sS0FBQTtZQUFPSDtTQUFRO1FBSy9ELE1BQU1JLDJCQUEwRCxFQUFDO1FBQ2pFLE1BQU1DLDJCQUEyRCxFQUFDO1FBQ2xFWCxxQkFBcUJZLE9BQUEsQ0FBUSxDQUFDQztZQUM1QixJQUFJQywwQkFBMEJELG9CQUFvQkwsY0FBYztnQkFDOURHLHlCQUF5QkksSUFBQSxDQUFLRjtZQUNoQyxXQUFXRyx5QkFBeUJILHFCQUFxQjtnQkFDdkRILHlCQUF5QkssSUFBQSxDQUFLRjtZQUNoQztRQUNGO1FBS0EsTUFBTUksbUJBQW1CUCx5QkFBeUJRLEdBQUEsQ0FBSTtnQkFBQyxFQUFFaEYsSUFBQUEsR0FBQUEsRUFBSWlGLEtBQUEsRUFBTTtZQUNqRSxPQUFPO2dCQUFDakY7Z0JBQUlpRixTQUFTWDthQUFZO1FBQ25DO1FBQ0EsTUFBTVksdUJBQXVCQyxPQUFPQyxXQUFBLENBQVlMO1FBQ2hELE1BQU1NLHNCQUFzQkYsT0FBT0csTUFBQSxDQUFPSixzQkFBc0JLLElBQUEsQ0FBS0M7UUFDckUsTUFBTUMsaUJBQWlCSjtRQUN2QnJCLFFBQVEwQixpQkFBQSxDQUFrQkQsaUJBQWlCRSwwQkFBMEI7UUFDckUsTUFBTXpCLGtCQUFrQkMsc0JBQXNCSCxRQUFROUUsUUFBUTtRQUM5RGlDLHNCQUFzQjBCLE1BQU1xQjtRQUM1QjVDLDBCQUEwQnVCLE1BQU1xQztRQUtoQyxJQUFJLENBQUNHLHVCQUF1QloseUJBQXlCbUIsTUFBQSxHQUFTLEdBQUc7WUFDL0QsTUFBTUMsdUJBQXVCcEIseUJBQXlCTyxHQUFBLENBQUk7b0JBQUMsRUFBRWhGLElBQUFBLEdBQUFBLEVBQUlpRixLQUFBLEVBQU07dUJBQ3JFQSxTQUFTWCxhQUFhd0IsSUFBQSxDQUFLLENBQUNDLFVBQVk7d0JBQUMvRjt3QkFBSStGO3FCQUFpQjs7WUFFaEUsTUFBTUMsb0JBQW9CLE1BQU1DLFFBQVFDLEdBQUEsQ0FBSUw7WUFDNUMsTUFBTU0sd0JBQXdCaEIsT0FBT0MsV0FBQSxDQUFZWTtZQUNqRCxNQUFNSSx1QkFBdUJqQixPQUFPRyxNQUFBLENBQU9hLHVCQUF1QlosSUFBQSxDQUFLQztZQUN2RSxNQUFNQyxrQkFBaUJXO1lBQ3ZCcEMsUUFBUTBCLGlCQUFBLENBQWtCRCxrQkFBaUJFLDBCQUEwQjtZQUNyRSxNQUFNekIsbUJBQWtCQyxzQkFBc0JILFFBQVE5RSxRQUFRO1lBQzlEaUMsc0JBQXNCMEIsTUFBTXFCO1lBQzVCNUMsMEJBQTBCdUIsTUFBTXNEO1FBQ2xDO0lBQ0YsR0FDQTtRQUFDckM7UUFBc0JqQjtRQUFNdkI7UUFBMkJIO0tBQXFCO0lBR3pFbkUsNENBQUEsQ0FBVTtRQUNkLE1BQU1nSCxVQUFVcEMsSUFBSTBFLE9BQUE7UUFDcEIsSUFBSXRDLFNBQVM7WUFHWCxNQUFNdUMsZUFBZSxJQUFNeEMsc0JBQXNCQztZQUNqREEsUUFBUXdDLGdCQUFBLENBQWlCLFVBQVVEO1lBQ25DLE9BQU8sSUFBTXZDLFFBQVF5QyxtQkFBQSxDQUFvQixVQUFVRjtRQUNyRDtJQUNGLEdBQUc7UUFBQ3hDO0tBQXNCO0lBRTFCLE1BQU0yQyx1QkFBNkIxSiw4Q0FBQSxDQUFZO1FBQzdDLE1BQU1nSCxVQUFVcEMsSUFBSTBFLE9BQUE7UUFDcEIsSUFBSXRDLFNBQVM7WUFDWEEsUUFBUTBCLGlCQUFBLENBQWtCO1lBQzFCbkUsdUJBQXVCc0I7UUFDekI7SUFDRixHQUFHO1FBQUNBO1FBQU10QjtLQUF1QjtJQUczQnZFLDRDQUFBLENBQVU7WUFDRDRFO1FBQWIsTUFBTUQsUUFBT0MsZUFBQUEsSUFBSTBFLE9BQUEsY0FBSjFFLG1DQUFBQSxhQUFhRCxJQUFBO1FBQzFCLElBQUlBLE1BQU07WUFDUkEsS0FBSzZFLGdCQUFBLENBQWlCLFNBQVNFO1lBQy9CLE9BQU8sSUFBTS9FLEtBQUs4RSxtQkFBQSxDQUFvQixTQUFTQztRQUNqRDtJQUNGLEdBQUc7UUFBQ0E7S0FBcUI7SUFHbkIxSiw0Q0FBQSxDQUFVO1FBQ2QsTUFBTWdILFVBQVVwQyxJQUFJMEUsT0FBQTtRQUNwQixNQUFNM0UsT0FBT3FDLG9CQUFBQSw4QkFBQUEsUUFBUzJDLE9BQUEsQ0FBUTtRQUM5QixJQUFJaEYsUUFBUTRCLGFBQWFULGFBQUEsRUFBZTtZQUN0QyxNQUFNZixzQkFBc0JDLHVCQUF1Qkw7WUFDbkQsSUFBSUksd0JBQXdCaUMsU0FBU2pDLG9CQUFvQkksS0FBQTtRQUMzRDtJQUNGLEdBQUc7UUFBQ29CLGFBQWFULGFBQWE7S0FBQztJQUUvQixNQUFNNUQsV0FBVzhELGtCQUFrQmxFLGdCQUFBLENBQWlCK0Q7SUFFcEQsT0FDRSxnQkFBQXBGLHNEQUFBQSxDQUFDRixnRUFBU0EsQ0FBQ3FKLEtBQUEsRUFBVjtRQUNDLGNBQVkxRCxrQkFBa0JoRSxVQUFVcUUsYUFBYVQsYUFBYTtRQUNsRSxnQkFBY0ssb0JBQW9CakUsVUFBVXFFLGFBQWFULGFBQWE7UUFDdEUsZ0JBQWNTLGFBQWFULGFBQUEsR0FBZ0IsT0FBTztRQUNsRCxvQkFBa0JjLHVCQUF1QjlDLG1CQUFBLENBQW9CK0I7UUFFN0RnRSxPQUFNO1FBQ0wsR0FBR2xELFlBQUE7UUFDSi9CLEtBQUtpQztRQUNMN0Q7UUFDQTZDO1FBQ0FoQixXQUFXNUUseUVBQW9CQSxDQUFDa0IsTUFBTTBELFNBQUEsRUFBVyxDQUFDQztZQUNoRCxNQUFNa0MsVUFBVWxDLE1BQU1HLGFBQUE7WUFDdEI4QixzQkFBc0JDO1FBQ3hCO1FBQ0E4QyxVQUFVN0oseUVBQW9CQSxDQUFDa0IsTUFBTTJJLFFBQUEsRUFBVSxDQUFDaEY7WUFFOUM0RTtRQUNGO0lBQUM7QUFHUDs7UUExSTRCNUk7UUFDTDZFO1FBQ1UzRTtRQUdYZCx5RUFBZUE7Ozs7UUFMVFk7UUFDTDZFO1FBQ1UzRTtRQUdYZCx5RUFBZUE7Ozs7QUF3SXZDd0csWUFBWWxCLFdBQUEsR0FBY2lCO0FBb0IxQixJQUFNa0MsMEJBQTBCO0FBQ2hDLElBQU1vQiw0QkFBeUU7SUFDN0VDLFVBQVVyQjtJQUNWc0IsaUJBQWlCO0lBQ2pCQyxlQUFlO0lBQ2ZDLGdCQUFnQjtJQUNoQkMsY0FBYztJQUNkQyxTQUFTO0lBQ1RDLFVBQVU7SUFDVkMsY0FBYztJQUNkQyxPQUFPO0lBQ1BDLGNBQWM7QUFDaEI7QUFFQSxJQUFNQyxlQUFlO0FBU3JCLElBQU1DLDRCQUFvQjNLLElBQUFBLDZDQUFBLFdBQ3hCLENBQUNtQixPQUFzQ0M7O0lBQ3JDLE1BQU0sRUFBRTZHLEtBQUEsRUFBT3BDLE1BQU0rRSxRQUFBLEVBQVUsR0FBR0MsY0FBYSxHQUFJMUo7SUFDbkQsTUFBTW9GLGVBQWVaLG9CQUFvQitFLGNBQWN2SixNQUFNRSxXQUFXO0lBQ3hFLE1BQU13RSxPQUFPK0UscUJBQUFBLHNCQUFBQSxXQUFZckUsYUFBYVYsSUFBQTtJQUV0QyxJQUFJb0MsVUFBVSxRQUFXO1FBQ3ZCLE9BQ0UsZ0JBQUF4SCxzREFBQUEsQ0FBQ3FLLGlCQUFBO1lBQWlCLEdBQUdELFlBQUE7WUFBY2pHLEtBQUt4RDtZQUFjeUU7WUFDbkRyQixVQUFBckQsTUFBTXFELFFBQUEsSUFBWW1FO1FBQUE7SUFHekIsV0FBVyxPQUFPVixVQUFVLFlBQVk7UUFDdEMsT0FBTyxnQkFBQXhILHNEQUFBQSxDQUFDc0ssbUJBQUE7WUFBa0I5QztZQUFlLEdBQUc0QyxZQUFBO1lBQWNqRyxLQUFLeEQ7WUFBY3lFO1FBQUE7SUFDL0UsT0FBTztRQUNMLE9BQU8sZ0JBQUFwRixzREFBQUEsQ0FBQ3VLLG9CQUFBO1lBQW1CL0M7WUFBZSxHQUFHNEMsWUFBQTtZQUFjakcsS0FBS3hEO1lBQWN5RTtRQUFBO0lBQ2hGO0FBQ0Y7O1FBZHVCRjs7OztRQUFBQTs7OztBQWlCekJnRixZQUFZbkYsV0FBQSxHQUFja0Y7QUFTMUIsSUFBTU0sbUNBQTJCaEwsNkNBQUEsS0FDL0IsQ0FBQ21CLE9BQTZDQzs7SUFDNUMsTUFBTSxFQUFFNkcsS0FBQSxFQUFPZ0QsYUFBYSxPQUFPcEYsSUFBQSxFQUFNckIsUUFBQSxFQUFVLEdBQUdxRyxjQUFhLEdBQUkxSjtJQUN2RSxNQUFNNkUsb0JBQW9CbEYscUJBQXFCNEosY0FBY0csYUFBYXhKLFdBQVc7SUFDckYsTUFBTWEsV0FBVzhELGtCQUFrQmxFLGdCQUFBLENBQWlCK0Q7SUFDcEQsTUFBTWtELFVBQVVrQyxlQUFjL0kscUJBQUFBLCtCQUFBQSxRQUFBLENBQVcrRixNQUFLO0lBRTlDLElBQUljLFNBQVM7UUFDWCxPQUNFLGdCQUFBdEksc0RBQUFBLENBQUNxSyxpQkFBQTtZQUFnQmxHLEtBQUt4RDtZQUFlLEdBQUd5SixZQUFBO1lBQWNoRjtZQUNuRHJCLFVBQUFBLHFCQUFBQSxzQkFBQUEsV0FBWXVGLHlCQUFBLENBQTBCOUIsTUFBSztRQUFBO0lBR2xEO0lBRUEsT0FBTztBQUNUOztRQWI0Qm5IOzs7T0FIeEJrSztBQTBCTixJQUFNRCxrQ0FBMEIvSyw2Q0FBQSxLQUM5QixDQUFDbUIsT0FBNENDOztJQUMzQyxNQUFNLEVBQUU2RyxLQUFBLEVBQU9nRCxhQUFhLE9BQU9wRixJQUFBLEVBQU03QyxJQUFJa0ksTUFBQSxFQUFRMUcsUUFBQSxFQUFVLEdBQUdxRyxjQUFhLEdBQUkxSjtJQUNuRixNQUFNNkUsb0JBQW9CbEYscUJBQXFCNEosY0FBY0csYUFBYXhKLFdBQVc7SUFDckYsTUFBTXVELE1BQVk1RSx5Q0FBQSxDQUFpQztJQUNuRCxNQUFNNkcsY0FBYzNHLDZFQUFlQSxDQUFDa0IsY0FBY3dEO0lBQ2xELE1BQU11RyxNQUFNL0sseURBQUtBO0lBQ2pCLE1BQU00QyxLQUFLa0ksbUJBQUFBLG9CQUFBQSxTQUFVQztJQUVyQixNQUFNeEQscUJBQTJCM0gsMENBQUEsQ0FBUSxJQUFPO1lBQUVnRDtZQUFJaUY7UUFBTSxJQUFJO1FBQUNqRjtRQUFJaUY7S0FBTTtJQUMzRSxNQUFNLEVBQUU3RCw0QkFBQSxFQUE4QkMsK0JBQUEsRUFBZ0MsR0FBSTJCO0lBQ3BFaEcsNENBQUEsQ0FBVTtRQUNkb0UsNkJBQTZCeUIsTUFBTThCO1FBQ25DLE9BQU8sSUFBTXRELGdDQUFnQ3dCLE1BQU04QixtQkFBbUIzRSxFQUFFO0lBQzFFLEdBQUc7UUFBQzJFO1FBQW9COUI7UUFBTXpCO1FBQThCQztLQUFnQztJQUU1RixNQUFNbkMsV0FBVzhELGtCQUFrQmxFLGdCQUFBLENBQWlCK0Q7SUFDcEQsTUFBTXpDLGVBQWU0QyxrQkFBa0I5QyxvQkFBQSxDQUFxQjJDO0lBQzVELE1BQU13Rix5QkFBeUJqSSxZQUFBLENBQWFKLEdBQUU7SUFDOUMsTUFBTStGLFVBQ0prQyxjQUFlL0ksWUFBWSxDQUFDK0UsZ0JBQWdCL0UsYUFBYW1KO0lBRTNELElBQUl0QyxTQUFTO1FBQ1gsT0FDRSxnQkFBQXRJLHNEQUFBQSxDQUFDcUssaUJBQUE7WUFBZ0I5SDtZQUFRNEIsS0FBS2lDO1lBQWMsR0FBR2dFLFlBQUE7WUFBY2hGO1lBQzFEckIsVUFBQUEscUJBQUFBLHNCQUFBQSxXQUFZbUU7UUFBQTtJQUduQjtJQUVBLE9BQU87QUFDVDs7UUE1QjRCN0g7UUFFTloseUVBQWVBO1FBQ3ZCRSxxREFBS0E7OztPQU5mMks7QUF3Q04sSUFBTUQsZ0NBQXdCOUssNkNBQUEsS0FDNUIsQ0FBQ21CLE9BQTBDQzs7SUFDekMsTUFBTSxFQUFFQyxXQUFBLEVBQWEyQixJQUFJa0ksTUFBQSxFQUFRckYsSUFBQSxFQUFNLEdBQUdnRixjQUFhLEdBQUkxSjtJQUMzRCxNQUFNeUYseUJBQXlCNUYsMEJBQTBCMEosY0FBY3JKO0lBQ3ZFLE1BQU04SixNQUFNL0sseURBQUtBO0lBQ2pCLE1BQU00QyxLQUFLa0ksbUJBQUFBLG9CQUFBQSxTQUFVQztJQUVyQixNQUFNLEVBQUUxRyxtQkFBQSxFQUFxQkMsc0JBQUEsRUFBdUIsR0FBSWtDO0lBQ2xENUcsNENBQUEsQ0FBVTtRQUNkeUUsb0JBQW9Cb0IsTUFBTTdDO1FBQzFCLE9BQU8sSUFBTTBCLHVCQUF1Qm1CLE1BQU03QztJQUM1QyxHQUFHO1FBQUM2QztRQUFNN0M7UUFBSXlCO1FBQXFCQztLQUF1QjtJQUUxRCxPQUFPLGdCQUFBakUsc0RBQUFBLENBQUNGLGdFQUFTQSxDQUFDK0ssSUFBQSxFQUFWO1FBQWV0STtRQUFTLEdBQUc2SCxZQUFBO1FBQWNqRyxLQUFLeEQ7SUFBQTtBQUN4RDs7UUFYaUNKO1FBQ25CWixxREFBS0E7OztPQUpmMEs7QUFxQk4sSUFBTVMsc0JBQXNCO0FBTzVCLElBQU1DLG9CQUFvQixDQUFDcks7O0lBQ3pCLE1BQU0sRUFBRUUsV0FBQSxFQUFhd0UsTUFBTStFLFFBQUEsRUFBVXBHLFFBQUEsRUFBUyxHQUFJckQ7SUFDbEQsTUFBTTZFLG9CQUFvQmxGLHFCQUFxQnlLLHFCQUFxQmxLO0lBQ3BFLE1BQU1rRixlQUFlWixvQkFBb0I0RixxQkFBcUJsSztJQUM5RCxNQUFNd0UsT0FBTytFLHFCQUFBQSxzQkFBQUEsV0FBWXJFLGFBQWFWLElBQUE7SUFDdEMsTUFBTTNELFdBQVc4RCxrQkFBa0JsRSxnQkFBQSxDQUFpQitEO0lBQ3BELE9BQU8sZ0JBQUFwRixzREFBQUEsQ0FBQUQsdURBQUFBLEVBQUE7UUFBR2dFLFVBQUFBLFNBQVN0QztJQUFRO0FBQzdCO0lBUE1zSjs7UUFFc0IxSztRQUNMNkU7OztPQUhqQjZGO0FBU05BLGtCQUFrQmhHLFdBQUEsR0FBYytGO0FBTWhDLElBQU1FLGNBQWM7QUFNcEIsSUFBTUMsMkJBQW1CMUwsNkNBQUEsUUFDdkIsQ0FBQ21CLE9BQXFDQztJQUNwQyxNQUFNLEVBQUVDLFdBQUEsRUFBYSxHQUFHc0ssYUFBWSxHQUFJeEs7SUFDeEMsT0FBTyxnQkFBQVYsc0RBQUFBLENBQUNGLGdFQUFTQSxDQUFDcUwsTUFBQSxFQUFWO1FBQWlCQyxNQUFLO1FBQVUsR0FBR0YsV0FBQTtRQUFhL0csS0FBS3hEO0lBQUE7QUFDL0Q7O0FBR0ZzSyxXQUFXbEcsV0FBQSxHQUFjaUc7QUFhekIsU0FBU3RFLHNCQUFzQmpGLFFBQUE7SUFDN0IsTUFBTTRKLFNBQWMsQ0FBQztJQUNyQixVQUFXQyxPQUFPN0osU0FBVTtRQUMxQjRKLE1BQUEsQ0FBT0MsSUFBRyxHQUFJN0osUUFBQSxDQUFTNkosSUFBdUI7SUFDaEQ7SUFDQSxPQUFPRDtBQUNUO0FBRUEsU0FBU0UsY0FBY0MsT0FBQTtJQUNyQixPQUFPQSxtQkFBbUJDO0FBQzVCO0FBRUEsU0FBU0MsY0FBY0YsT0FBQTtJQUNyQixPQUFPLGNBQWNBO0FBQ3ZCO0FBRUEsU0FBU0csVUFBVXBGLE9BQUE7SUFDakIsT0FDRW1GLGNBQWNuRixZQUNiQSxDQUFBQSxRQUFROUUsUUFBQSxDQUFTc0ksS0FBQSxLQUFVLFNBQVN4RCxRQUFRcUYsWUFBQSxDQUFhLG9CQUFvQjtBQUVsRjtBQUVBLFNBQVNySCx1QkFBdUJMLElBQUE7SUFDOUIsTUFBTTJILFdBQVczSCxLQUFLMkgsUUFBQTtJQUN0QixNQUFNLENBQUN2SCxvQkFBbUIsR0FBSWhCLE1BQU1DLElBQUEsQ0FBS3NJLFVBQVV2SixNQUFBLENBQU9pSixlQUFlakosTUFBQSxDQUFPcUo7SUFDaEYsT0FBT3JIO0FBQ1Q7QUFFQSxTQUFTNkMsMEJBQ1AyRSxLQUFBLEVBQ0FDLElBQUE7SUFFQSxPQUFPRCxNQUFNdEUsS0FBQSxDQUFNd0UsV0FBQSxDQUFZNUcsSUFBQSxLQUFTLG1CQUFtQjZHLGVBQWVILE1BQU10RSxLQUFBLEVBQU91RTtBQUN6RjtBQUVBLFNBQVMxRSx5QkFBeUJ5RSxLQUFBO0lBQ2hDLE9BQU9BLE1BQU10RSxLQUFBLENBQU13RSxXQUFBLENBQVk1RyxJQUFBLEtBQVM7QUFDMUM7QUFFQSxTQUFTNkcsZUFBZUMsSUFBQSxFQUFnQkgsSUFBQTtJQUN0QyxPQUFPRyxRQUFRSCxpQkFBaUJ2RDtBQUNsQztBQUVBLFNBQVNoQyxnQkFBZ0IvRSxRQUFBO0lBQ3ZCLElBQUkwSyxRQUFRO0lBQ1osVUFBV0MsZUFBZTNLLFNBQVU7UUFDbEMsTUFBTTZKLE1BQU1jO1FBQ1osSUFBSWQsUUFBUSxXQUFXQSxRQUFRLGlCQUFpQjdKLFFBQUEsQ0FBUzZKLElBQUcsRUFBRztZQUM3RGEsUUFBUTtZQUNSO1FBQ0Y7SUFDRjtJQUNBLE9BQU9BO0FBQ1Q7QUFFQSxTQUFTMUcsa0JBQWtCaEUsUUFBQSxFQUFxQzRELGFBQUE7SUFDOUQsSUFBSTVELENBQUFBLHFCQUFBQSwrQkFBQUEsU0FBVXNJLEtBQUEsTUFBVSxRQUFRLENBQUMxRSxlQUFlLE9BQU87SUFDdkQsT0FBTztBQUNUO0FBQ0EsU0FBU0ssb0JBQW9CakUsUUFBQSxFQUFxQzRELGFBQUE7SUFDaEUsSUFBSTVELENBQUFBLHFCQUFBQSwrQkFBQUEsU0FBVXNJLEtBQUEsTUFBVSxTQUFTMUUsZUFBZSxPQUFPO0lBQ3ZELE9BQU87QUFDVDtBQUlBLElBQU1nSCxPQUFPN0w7QUFDYixJQUFNOEwsUUFBUW5IO0FBQ2QsSUFBTXZGLFFBQVFnRztBQUNkLElBQU0yRyxVQUFVdEc7QUFDaEIsSUFBTXVHLFVBQVV0QztBQUNoQixJQUFNdUMsZ0JBQWdCMUI7QUFDdEIsSUFBTTJCLFNBQVN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vc3JjL0Zvcm0udHN4PzI5NDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29tcG9zZUV2ZW50SGFuZGxlcnMgfSBmcm9tICdAcmFkaXgtdWkvcHJpbWl0aXZlJztcbmltcG9ydCB7IHVzZUNvbXBvc2VkUmVmcyB9IGZyb20gJ0ByYWRpeC11aS9yZWFjdC1jb21wb3NlLXJlZnMnO1xuaW1wb3J0IHsgY3JlYXRlQ29udGV4dFNjb3BlIH0gZnJvbSAnQHJhZGl4LXVpL3JlYWN0LWNvbnRleHQnO1xuaW1wb3J0IHsgdXNlSWQgfSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtaWQnO1xuaW1wb3J0IHsgTGFiZWwgYXMgTGFiZWxQcmltaXRpdmUgfSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtbGFiZWwnO1xuaW1wb3J0IHsgUHJpbWl0aXZlIH0gZnJvbSAnQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZSc7XG5cbmltcG9ydCB0eXBlIHsgU2NvcGUgfSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtY29udGV4dCc7XG5cbnR5cGUgU2NvcGVkUHJvcHM8UD4gPSBQICYgeyBfX3Njb3BlRm9ybT86IFNjb3BlIH07XG5jb25zdCBbY3JlYXRlRm9ybUNvbnRleHQsIGNyZWF0ZUZvcm1TY29wZV0gPSBjcmVhdGVDb250ZXh0U2NvcGUoJ0Zvcm0nKTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogRm9ybVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5jb25zdCBGT1JNX05BTUUgPSAnRm9ybSc7XG5cbnR5cGUgVmFsaWRpdHlNYXAgPSB7IFtmaWVsZE5hbWU6IHN0cmluZ106IFZhbGlkaXR5U3RhdGUgfCB1bmRlZmluZWQgfTtcbnR5cGUgQ3VzdG9tTWF0Y2hlckVudHJpZXNNYXAgPSB7IFtmaWVsZE5hbWU6IHN0cmluZ106IEN1c3RvbU1hdGNoZXJFbnRyeVtdIH07XG50eXBlIEN1c3RvbUVycm9yc01hcCA9IHsgW2ZpZWxkTmFtZTogc3RyaW5nXTogUmVjb3JkPHN0cmluZywgYm9vbGVhbj4gfTtcblxudHlwZSBWYWxpZGF0aW9uQ29udGV4dFZhbHVlID0ge1xuICBnZXRGaWVsZFZhbGlkaXR5KGZpZWxkTmFtZTogc3RyaW5nKTogVmFsaWRpdHlTdGF0ZSB8IHVuZGVmaW5lZDtcbiAgb25GaWVsZFZhbGlkaXR5Q2hhbmdlKGZpZWxkTmFtZTogc3RyaW5nLCB2YWxpZGl0eTogVmFsaWRpdHlTdGF0ZSk6IHZvaWQ7XG5cbiAgZ2V0RmllbGRDdXN0b21NYXRjaGVyRW50cmllcyhmaWVsZE5hbWU6IHN0cmluZyk6IEN1c3RvbU1hdGNoZXJFbnRyeVtdO1xuICBvbkZpZWxkQ3VzdG9tTWF0Y2hlckVudHJ5QWRkKGZpZWxkTmFtZTogc3RyaW5nLCBtYXRjaGVyRW50cnk6IEN1c3RvbU1hdGNoZXJFbnRyeSk6IHZvaWQ7XG4gIG9uRmllbGRDdXN0b21NYXRjaGVyRW50cnlSZW1vdmUoZmllbGROYW1lOiBzdHJpbmcsIG1hdGNoZXJFbnRyeUlkOiBzdHJpbmcpOiB2b2lkO1xuXG4gIGdldEZpZWxkQ3VzdG9tRXJyb3JzKGZpZWxkTmFtZTogc3RyaW5nKTogUmVjb3JkPHN0cmluZywgYm9vbGVhbj47XG4gIG9uRmllbGRDdXN0b21FcnJvcnNDaGFuZ2UoZmllbGROYW1lOiBzdHJpbmcsIGVycm9yczogUmVjb3JkPHN0cmluZywgYm9vbGVhbj4pOiB2b2lkO1xuXG4gIG9uRmllbGRWYWxpZGl0aW9uQ2xlYXIoZmllbGROYW1lOiBzdHJpbmcpOiB2b2lkO1xufTtcbmNvbnN0IFtWYWxpZGF0aW9uUHJvdmlkZXIsIHVzZVZhbGlkYXRpb25Db250ZXh0XSA9XG4gIGNyZWF0ZUZvcm1Db250ZXh0PFZhbGlkYXRpb25Db250ZXh0VmFsdWU+KEZPUk1fTkFNRSk7XG5cbnR5cGUgTWVzc2FnZUlkc01hcCA9IHsgW2ZpZWxkTmFtZTogc3RyaW5nXTogU2V0PHN0cmluZz4gfTtcblxudHlwZSBBcmlhRGVzY3JpcHRpb25Db250ZXh0VmFsdWUgPSB7XG4gIG9uRmllbGRNZXNzYWdlSWRBZGQoZmllbGROYW1lOiBzdHJpbmcsIGlkOiBzdHJpbmcpOiB2b2lkO1xuICBvbkZpZWxkTWVzc2FnZUlkUmVtb3ZlKGZpZWxkTmFtZTogc3RyaW5nLCBpZDogc3RyaW5nKTogdm9pZDtcbiAgZ2V0RmllbGREZXNjcmlwdGlvbihmaWVsZE5hbWU6IHN0cmluZyk6IHN0cmluZyB8IHVuZGVmaW5lZDtcbn07XG5jb25zdCBbQXJpYURlc2NyaXB0aW9uUHJvdmlkZXIsIHVzZUFyaWFEZXNjcmlwdGlvbkNvbnRleHRdID1cbiAgY3JlYXRlRm9ybUNvbnRleHQ8QXJpYURlc2NyaXB0aW9uQ29udGV4dFZhbHVlPihGT1JNX05BTUUpO1xuXG50eXBlIEZvcm1FbGVtZW50ID0gUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgUHJpbWl0aXZlLmZvcm0+O1xudHlwZSBQcmltaXRpdmVGb3JtUHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFByaW1pdGl2ZS5mb3JtPjtcbmludGVyZmFjZSBGb3JtUHJvcHMgZXh0ZW5kcyBQcmltaXRpdmVGb3JtUHJvcHMge1xuICBvbkNsZWFyU2VydmVyRXJyb3JzPygpOiB2b2lkO1xufVxuXG5jb25zdCBGb3JtID0gUmVhY3QuZm9yd2FyZFJlZjxGb3JtRWxlbWVudCwgRm9ybVByb3BzPihcbiAgKHByb3BzOiBTY29wZWRQcm9wczxGb3JtUHJvcHM+LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IF9fc2NvcGVGb3JtLCBvbkNsZWFyU2VydmVyRXJyb3JzID0gKCkgPT4ge30sIC4uLnJvb3RQcm9wcyB9ID0gcHJvcHM7XG4gICAgY29uc3QgZm9ybVJlZiA9IFJlYWN0LnVzZVJlZjxIVE1MRm9ybUVsZW1lbnQ+KG51bGwpO1xuICAgIGNvbnN0IGNvbXBvc2VkRm9ybVJlZiA9IHVzZUNvbXBvc2VkUmVmcyhmb3J3YXJkZWRSZWYsIGZvcm1SZWYpO1xuXG4gICAgLy8gbmF0aXZlIHZhbGlkaXR5IHBlciBmaWVsZFxuICAgIGNvbnN0IFt2YWxpZGl0eU1hcCwgc2V0VmFsaWRpdHlNYXBdID0gUmVhY3QudXNlU3RhdGU8VmFsaWRpdHlNYXA+KHt9KTtcbiAgICBjb25zdCBnZXRGaWVsZFZhbGlkaXR5OiBWYWxpZGF0aW9uQ29udGV4dFZhbHVlWydnZXRGaWVsZFZhbGlkaXR5J10gPSBSZWFjdC51c2VDYWxsYmFjayhcbiAgICAgIChmaWVsZE5hbWUpID0+IHZhbGlkaXR5TWFwW2ZpZWxkTmFtZV0sXG4gICAgICBbdmFsaWRpdHlNYXBdXG4gICAgKTtcbiAgICBjb25zdCBoYW5kbGVGaWVsZFZhbGlkaXR5Q2hhbmdlOiBWYWxpZGF0aW9uQ29udGV4dFZhbHVlWydvbkZpZWxkVmFsaWRpdHlDaGFuZ2UnXSA9XG4gICAgICBSZWFjdC51c2VDYWxsYmFjayhcbiAgICAgICAgKGZpZWxkTmFtZSwgdmFsaWRpdHkpID0+XG4gICAgICAgICAgc2V0VmFsaWRpdHlNYXAoKHByZXZWYWxpZGl0eU1hcCkgPT4gKHtcbiAgICAgICAgICAgIC4uLnByZXZWYWxpZGl0eU1hcCxcbiAgICAgICAgICAgIFtmaWVsZE5hbWVdOiB7IC4uLihwcmV2VmFsaWRpdHlNYXBbZmllbGROYW1lXSA/PyB7fSksIC4uLnZhbGlkaXR5IH0sXG4gICAgICAgICAgfSkpLFxuICAgICAgICBbXVxuICAgICAgKTtcbiAgICBjb25zdCBoYW5kbGVGaWVsZFZhbGlkaXRpb25DbGVhcjogVmFsaWRhdGlvbkNvbnRleHRWYWx1ZVsnb25GaWVsZFZhbGlkaXRpb25DbGVhciddID1cbiAgICAgIFJlYWN0LnVzZUNhbGxiYWNrKChmaWVsZE5hbWUpID0+IHtcbiAgICAgICAgc2V0VmFsaWRpdHlNYXAoKHByZXZWYWxpZGl0eU1hcCkgPT4gKHsgLi4ucHJldlZhbGlkaXR5TWFwLCBbZmllbGROYW1lXTogdW5kZWZpbmVkIH0pKTtcbiAgICAgICAgc2V0Q3VzdG9tRXJyb3JzTWFwKChwcmV2Q3VzdG9tRXJyb3JzTWFwKSA9PiAoeyAuLi5wcmV2Q3VzdG9tRXJyb3JzTWFwLCBbZmllbGROYW1lXToge30gfSkpO1xuICAgICAgfSwgW10pO1xuXG4gICAgLy8gY3VzdG9tIG1hdGNoZXIgZW50cmllcyBwZXIgZmllbGRcbiAgICBjb25zdCBbY3VzdG9tTWF0Y2hlckVudHJpZXNNYXAsIHNldEN1c3RvbU1hdGNoZXJFbnRyaWVzTWFwXSA9XG4gICAgICBSZWFjdC51c2VTdGF0ZTxDdXN0b21NYXRjaGVyRW50cmllc01hcD4oe30pO1xuICAgIGNvbnN0IGdldEZpZWxkQ3VzdG9tTWF0Y2hlckVudHJpZXM6IFZhbGlkYXRpb25Db250ZXh0VmFsdWVbJ2dldEZpZWxkQ3VzdG9tTWF0Y2hlckVudHJpZXMnXSA9XG4gICAgICBSZWFjdC51c2VDYWxsYmFjayhcbiAgICAgICAgKGZpZWxkTmFtZSkgPT4gY3VzdG9tTWF0Y2hlckVudHJpZXNNYXBbZmllbGROYW1lXSA/PyBbXSxcbiAgICAgICAgW2N1c3RvbU1hdGNoZXJFbnRyaWVzTWFwXVxuICAgICAgKTtcbiAgICBjb25zdCBoYW5kbGVGaWVsZEN1c3RvbU1hdGNoZXJBZGQ6IFZhbGlkYXRpb25Db250ZXh0VmFsdWVbJ29uRmllbGRDdXN0b21NYXRjaGVyRW50cnlBZGQnXSA9XG4gICAgICBSZWFjdC51c2VDYWxsYmFjaygoZmllbGROYW1lLCBtYXRjaGVyRW50cnkpID0+IHtcbiAgICAgICAgc2V0Q3VzdG9tTWF0Y2hlckVudHJpZXNNYXAoKHByZXZDdXN0b21NYXRjaGVyRW50cmllc01hcCkgPT4gKHtcbiAgICAgICAgICAuLi5wcmV2Q3VzdG9tTWF0Y2hlckVudHJpZXNNYXAsXG4gICAgICAgICAgW2ZpZWxkTmFtZV06IFsuLi4ocHJldkN1c3RvbU1hdGNoZXJFbnRyaWVzTWFwW2ZpZWxkTmFtZV0gPz8gW10pLCBtYXRjaGVyRW50cnldLFxuICAgICAgICB9KSk7XG4gICAgICB9LCBbXSk7XG4gICAgY29uc3QgaGFuZGxlRmllbGRDdXN0b21NYXRjaGVyUmVtb3ZlOiBWYWxpZGF0aW9uQ29udGV4dFZhbHVlWydvbkZpZWxkQ3VzdG9tTWF0Y2hlckVudHJ5UmVtb3ZlJ10gPVxuICAgICAgUmVhY3QudXNlQ2FsbGJhY2soKGZpZWxkTmFtZSwgbWF0Y2hlckVudHJ5SWQpID0+IHtcbiAgICAgICAgc2V0Q3VzdG9tTWF0Y2hlckVudHJpZXNNYXAoKHByZXZDdXN0b21NYXRjaGVyRW50cmllc01hcCkgPT4gKHtcbiAgICAgICAgICAuLi5wcmV2Q3VzdG9tTWF0Y2hlckVudHJpZXNNYXAsXG4gICAgICAgICAgW2ZpZWxkTmFtZV06IChwcmV2Q3VzdG9tTWF0Y2hlckVudHJpZXNNYXBbZmllbGROYW1lXSA/PyBbXSkuZmlsdGVyKFxuICAgICAgICAgICAgKG1hdGNoZXJFbnRyeSkgPT4gbWF0Y2hlckVudHJ5LmlkICE9PSBtYXRjaGVyRW50cnlJZFxuICAgICAgICAgICksXG4gICAgICAgIH0pKTtcbiAgICAgIH0sIFtdKTtcblxuICAgIC8vIGN1c3RvbSBlcnJvcnMgcGVyIGZpZWxkXG4gICAgY29uc3QgW2N1c3RvbUVycm9yc01hcCwgc2V0Q3VzdG9tRXJyb3JzTWFwXSA9IFJlYWN0LnVzZVN0YXRlPEN1c3RvbUVycm9yc01hcD4oe30pO1xuICAgIGNvbnN0IGdldEZpZWxkQ3VzdG9tRXJyb3JzOiBWYWxpZGF0aW9uQ29udGV4dFZhbHVlWydnZXRGaWVsZEN1c3RvbUVycm9ycyddID0gUmVhY3QudXNlQ2FsbGJhY2soXG4gICAgICAoZmllbGROYW1lKSA9PiBjdXN0b21FcnJvcnNNYXBbZmllbGROYW1lXSA/PyB7fSxcbiAgICAgIFtjdXN0b21FcnJvcnNNYXBdXG4gICAgKTtcbiAgICBjb25zdCBoYW5kbGVGaWVsZEN1c3RvbUVycm9yc0NoYW5nZTogVmFsaWRhdGlvbkNvbnRleHRWYWx1ZVsnb25GaWVsZEN1c3RvbUVycm9yc0NoYW5nZSddID1cbiAgICAgIFJlYWN0LnVzZUNhbGxiYWNrKChmaWVsZE5hbWUsIGN1c3RvbUVycm9ycykgPT4ge1xuICAgICAgICBzZXRDdXN0b21FcnJvcnNNYXAoKHByZXZDdXN0b21FcnJvcnNNYXApID0+ICh7XG4gICAgICAgICAgLi4ucHJldkN1c3RvbUVycm9yc01hcCxcbiAgICAgICAgICBbZmllbGROYW1lXTogeyAuLi4ocHJldkN1c3RvbUVycm9yc01hcFtmaWVsZE5hbWVdID8/IHt9KSwgLi4uY3VzdG9tRXJyb3JzIH0sXG4gICAgICAgIH0pKTtcbiAgICAgIH0sIFtdKTtcblxuICAgIC8vIG1lc3NhZ2VJZHMgcGVyIGZpZWxkXG4gICAgY29uc3QgW21lc3NhZ2VJZHNNYXAsIHNldE1lc3NhZ2VJZHNNYXBdID0gUmVhY3QudXNlU3RhdGU8TWVzc2FnZUlkc01hcD4oe30pO1xuICAgIGNvbnN0IGhhbmRsZUZpZWxkTWVzc2FnZUlkQWRkOiBBcmlhRGVzY3JpcHRpb25Db250ZXh0VmFsdWVbJ29uRmllbGRNZXNzYWdlSWRBZGQnXSA9XG4gICAgICBSZWFjdC51c2VDYWxsYmFjaygoZmllbGROYW1lLCBpZCkgPT4ge1xuICAgICAgICBzZXRNZXNzYWdlSWRzTWFwKChwcmV2TWVzc2FnZUlkc01hcCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGZpZWxkRGVzY3JpcHRpb25JZHMgPSBuZXcgU2V0KHByZXZNZXNzYWdlSWRzTWFwW2ZpZWxkTmFtZV0pLmFkZChpZCk7XG4gICAgICAgICAgcmV0dXJuIHsgLi4ucHJldk1lc3NhZ2VJZHNNYXAsIFtmaWVsZE5hbWVdOiBmaWVsZERlc2NyaXB0aW9uSWRzIH07XG4gICAgICAgIH0pO1xuICAgICAgfSwgW10pO1xuICAgIGNvbnN0IGhhbmRsZUZpZWxkTWVzc2FnZUlkUmVtb3ZlOiBBcmlhRGVzY3JpcHRpb25Db250ZXh0VmFsdWVbJ29uRmllbGRNZXNzYWdlSWRSZW1vdmUnXSA9XG4gICAgICBSZWFjdC51c2VDYWxsYmFjaygoZmllbGROYW1lLCBpZCkgPT4ge1xuICAgICAgICBzZXRNZXNzYWdlSWRzTWFwKChwcmV2TWVzc2FnZUlkc01hcCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGZpZWxkRGVzY3JpcHRpb25JZHMgPSBuZXcgU2V0KHByZXZNZXNzYWdlSWRzTWFwW2ZpZWxkTmFtZV0pO1xuICAgICAgICAgIGZpZWxkRGVzY3JpcHRpb25JZHMuZGVsZXRlKGlkKTtcbiAgICAgICAgICByZXR1cm4geyAuLi5wcmV2TWVzc2FnZUlkc01hcCwgW2ZpZWxkTmFtZV06IGZpZWxkRGVzY3JpcHRpb25JZHMgfTtcbiAgICAgICAgfSk7XG4gICAgICB9LCBbXSk7XG4gICAgY29uc3QgZ2V0RmllbGREZXNjcmlwdGlvbjogQXJpYURlc2NyaXB0aW9uQ29udGV4dFZhbHVlWydnZXRGaWVsZERlc2NyaXB0aW9uJ10gPVxuICAgICAgUmVhY3QudXNlQ2FsbGJhY2soXG4gICAgICAgIChmaWVsZE5hbWUpID0+IEFycmF5LmZyb20obWVzc2FnZUlkc01hcFtmaWVsZE5hbWVdID8/IFtdKS5qb2luKCcgJykgfHwgdW5kZWZpbmVkLFxuICAgICAgICBbbWVzc2FnZUlkc01hcF1cbiAgICAgICk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFZhbGlkYXRpb25Qcm92aWRlclxuICAgICAgICBzY29wZT17X19zY29wZUZvcm19XG4gICAgICAgIGdldEZpZWxkVmFsaWRpdHk9e2dldEZpZWxkVmFsaWRpdHl9XG4gICAgICAgIG9uRmllbGRWYWxpZGl0eUNoYW5nZT17aGFuZGxlRmllbGRWYWxpZGl0eUNoYW5nZX1cbiAgICAgICAgZ2V0RmllbGRDdXN0b21NYXRjaGVyRW50cmllcz17Z2V0RmllbGRDdXN0b21NYXRjaGVyRW50cmllc31cbiAgICAgICAgb25GaWVsZEN1c3RvbU1hdGNoZXJFbnRyeUFkZD17aGFuZGxlRmllbGRDdXN0b21NYXRjaGVyQWRkfVxuICAgICAgICBvbkZpZWxkQ3VzdG9tTWF0Y2hlckVudHJ5UmVtb3ZlPXtoYW5kbGVGaWVsZEN1c3RvbU1hdGNoZXJSZW1vdmV9XG4gICAgICAgIGdldEZpZWxkQ3VzdG9tRXJyb3JzPXtnZXRGaWVsZEN1c3RvbUVycm9yc31cbiAgICAgICAgb25GaWVsZEN1c3RvbUVycm9yc0NoYW5nZT17aGFuZGxlRmllbGRDdXN0b21FcnJvcnNDaGFuZ2V9XG4gICAgICAgIG9uRmllbGRWYWxpZGl0aW9uQ2xlYXI9e2hhbmRsZUZpZWxkVmFsaWRpdGlvbkNsZWFyfVxuICAgICAgPlxuICAgICAgICA8QXJpYURlc2NyaXB0aW9uUHJvdmlkZXJcbiAgICAgICAgICBzY29wZT17X19zY29wZUZvcm19XG4gICAgICAgICAgb25GaWVsZE1lc3NhZ2VJZEFkZD17aGFuZGxlRmllbGRNZXNzYWdlSWRBZGR9XG4gICAgICAgICAgb25GaWVsZE1lc3NhZ2VJZFJlbW92ZT17aGFuZGxlRmllbGRNZXNzYWdlSWRSZW1vdmV9XG4gICAgICAgICAgZ2V0RmllbGREZXNjcmlwdGlvbj17Z2V0RmllbGREZXNjcmlwdGlvbn1cbiAgICAgICAgPlxuICAgICAgICAgIDxQcmltaXRpdmUuZm9ybVxuICAgICAgICAgICAgey4uLnJvb3RQcm9wc31cbiAgICAgICAgICAgIHJlZj17Y29tcG9zZWRGb3JtUmVmfVxuICAgICAgICAgICAgLy8gZm9jdXMgZmlyc3QgaW52YWxpZCBjb250cm9sIHdoZW4gdGhlIGZvcm0gaXMgc3VibWl0dGVkXG4gICAgICAgICAgICBvbkludmFsaWQ9e2NvbXBvc2VFdmVudEhhbmRsZXJzKHByb3BzLm9uSW52YWxpZCwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IGZpcnN0SW52YWxpZENvbnRyb2wgPSBnZXRGaXJzdEludmFsaWRDb250cm9sKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgICAgICAgICAgICBpZiAoZmlyc3RJbnZhbGlkQ29udHJvbCA9PT0gZXZlbnQudGFyZ2V0KSBmaXJzdEludmFsaWRDb250cm9sLmZvY3VzKCk7XG5cbiAgICAgICAgICAgICAgLy8gcHJldmVudCBkZWZhdWx0IGJyb3dzZXIgVUkgZm9yIGZvcm0gdmFsaWRhdGlvblxuICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAvLyBjbGVhciBzZXJ2ZXIgZXJyb3JzIHdoZW4gdGhlIGZvcm0gaXMgcmUtc3VibWl0dGVkXG4gICAgICAgICAgICBvblN1Ym1pdD17Y29tcG9zZUV2ZW50SGFuZGxlcnMocHJvcHMub25TdWJtaXQsIG9uQ2xlYXJTZXJ2ZXJFcnJvcnMsIHtcbiAgICAgICAgICAgICAgY2hlY2tGb3JEZWZhdWx0UHJldmVudGVkOiBmYWxzZSxcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgLy8gY2xlYXIgc2VydmVyIGVycm9ycyB3aGVuIHRoZSBmb3JtIGlzIHJlc2V0XG4gICAgICAgICAgICBvblJlc2V0PXtjb21wb3NlRXZlbnRIYW5kbGVycyhwcm9wcy5vblJlc2V0LCBvbkNsZWFyU2VydmVyRXJyb3JzKX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L0FyaWFEZXNjcmlwdGlvblByb3ZpZGVyPlxuICAgICAgPC9WYWxpZGF0aW9uUHJvdmlkZXI+XG4gICAgKTtcbiAgfVxuKTtcblxuRm9ybS5kaXNwbGF5TmFtZSA9IEZPUk1fTkFNRTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogRm9ybUZpZWxkXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmNvbnN0IEZJRUxEX05BTUUgPSAnRm9ybUZpZWxkJztcblxudHlwZSBGb3JtRmllbGRDb250ZXh0VmFsdWUgPSB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgc2VydmVySW52YWxpZDogYm9vbGVhbjtcbn07XG5jb25zdCBbRm9ybUZpZWxkUHJvdmlkZXIsIHVzZUZvcm1GaWVsZENvbnRleHRdID1cbiAgY3JlYXRlRm9ybUNvbnRleHQ8Rm9ybUZpZWxkQ29udGV4dFZhbHVlPihGSUVMRF9OQU1FKTtcblxudHlwZSBGb3JtRmllbGRFbGVtZW50ID0gUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgUHJpbWl0aXZlLmRpdj47XG50eXBlIFByaW1pdGl2ZURpdlByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBQcmltaXRpdmUuZGl2PjtcbmludGVyZmFjZSBGb3JtRmllbGRQcm9wcyBleHRlbmRzIFByaW1pdGl2ZURpdlByb3BzIHtcbiAgbmFtZTogc3RyaW5nO1xuICBzZXJ2ZXJJbnZhbGlkPzogYm9vbGVhbjtcbn1cblxuY29uc3QgRm9ybUZpZWxkID0gUmVhY3QuZm9yd2FyZFJlZjxGb3JtRmllbGRFbGVtZW50LCBGb3JtRmllbGRQcm9wcz4oXG4gIChwcm9wczogU2NvcGVkUHJvcHM8Rm9ybUZpZWxkUHJvcHM+LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IF9fc2NvcGVGb3JtLCBuYW1lLCBzZXJ2ZXJJbnZhbGlkID0gZmFsc2UsIC4uLmZpZWxkUHJvcHMgfSA9IHByb3BzO1xuICAgIGNvbnN0IHZhbGlkYXRpb25Db250ZXh0ID0gdXNlVmFsaWRhdGlvbkNvbnRleHQoRklFTERfTkFNRSwgX19zY29wZUZvcm0pO1xuICAgIGNvbnN0IHZhbGlkaXR5ID0gdmFsaWRhdGlvbkNvbnRleHQuZ2V0RmllbGRWYWxpZGl0eShuYW1lKTtcbiAgICBjb25zdCBpZCA9IHVzZUlkKCk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPEZvcm1GaWVsZFByb3ZpZGVyIHNjb3BlPXtfX3Njb3BlRm9ybX0gaWQ9e2lkfSBuYW1lPXtuYW1lfSBzZXJ2ZXJJbnZhbGlkPXtzZXJ2ZXJJbnZhbGlkfT5cbiAgICAgICAgPFByaW1pdGl2ZS5kaXZcbiAgICAgICAgICBkYXRhLXZhbGlkPXtnZXRWYWxpZEF0dHJpYnV0ZSh2YWxpZGl0eSwgc2VydmVySW52YWxpZCl9XG4gICAgICAgICAgZGF0YS1pbnZhbGlkPXtnZXRJbnZhbGlkQXR0cmlidXRlKHZhbGlkaXR5LCBzZXJ2ZXJJbnZhbGlkKX1cbiAgICAgICAgICB7Li4uZmllbGRQcm9wc31cbiAgICAgICAgICByZWY9e2ZvcndhcmRlZFJlZn1cbiAgICAgICAgLz5cbiAgICAgIDwvRm9ybUZpZWxkUHJvdmlkZXI+XG4gICAgKTtcbiAgfVxuKTtcblxuRm9ybUZpZWxkLmRpc3BsYXlOYW1lID0gRklFTERfTkFNRTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogRm9ybUxhYmVsXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmNvbnN0IExBQkVMX05BTUUgPSAnRm9ybUxhYmVsJztcblxudHlwZSBGb3JtTGFiZWxFbGVtZW50ID0gUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgTGFiZWxQcmltaXRpdmU+O1xudHlwZSBMYWJlbFByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBMYWJlbFByaW1pdGl2ZT47XG5pbnRlcmZhY2UgRm9ybUxhYmVsUHJvcHMgZXh0ZW5kcyBMYWJlbFByb3BzIHt9XG5cbmNvbnN0IEZvcm1MYWJlbCA9IFJlYWN0LmZvcndhcmRSZWY8Rm9ybUxhYmVsRWxlbWVudCwgRm9ybUxhYmVsUHJvcHM+KFxuICAocHJvcHM6IFNjb3BlZFByb3BzPEZvcm1MYWJlbFByb3BzPiwgZm9yd2FyZGVkUmVmKSA9PiB7XG4gICAgY29uc3QgeyBfX3Njb3BlRm9ybSwgLi4ubGFiZWxQcm9wcyB9ID0gcHJvcHM7XG4gICAgY29uc3QgdmFsaWRhdGlvbkNvbnRleHQgPSB1c2VWYWxpZGF0aW9uQ29udGV4dChMQUJFTF9OQU1FLCBfX3Njb3BlRm9ybSk7XG4gICAgY29uc3QgZmllbGRDb250ZXh0ID0gdXNlRm9ybUZpZWxkQ29udGV4dChMQUJFTF9OQU1FLCBfX3Njb3BlRm9ybSk7XG4gICAgY29uc3QgaHRtbEZvciA9IGxhYmVsUHJvcHMuaHRtbEZvciB8fCBmaWVsZENvbnRleHQuaWQ7XG4gICAgY29uc3QgdmFsaWRpdHkgPSB2YWxpZGF0aW9uQ29udGV4dC5nZXRGaWVsZFZhbGlkaXR5KGZpZWxkQ29udGV4dC5uYW1lKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8TGFiZWxQcmltaXRpdmVcbiAgICAgICAgZGF0YS12YWxpZD17Z2V0VmFsaWRBdHRyaWJ1dGUodmFsaWRpdHksIGZpZWxkQ29udGV4dC5zZXJ2ZXJJbnZhbGlkKX1cbiAgICAgICAgZGF0YS1pbnZhbGlkPXtnZXRJbnZhbGlkQXR0cmlidXRlKHZhbGlkaXR5LCBmaWVsZENvbnRleHQuc2VydmVySW52YWxpZCl9XG4gICAgICAgIHsuLi5sYWJlbFByb3BzfVxuICAgICAgICByZWY9e2ZvcndhcmRlZFJlZn1cbiAgICAgICAgaHRtbEZvcj17aHRtbEZvcn1cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxuKTtcblxuRm9ybUxhYmVsLmRpc3BsYXlOYW1lID0gTEFCRUxfTkFNRTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogRm9ybUNvbnRyb2xcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuY29uc3QgQ09OVFJPTF9OQU1FID0gJ0Zvcm1Db250cm9sJztcblxudHlwZSBGb3JtQ29udHJvbEVsZW1lbnQgPSBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBQcmltaXRpdmUuaW5wdXQ+O1xudHlwZSBQcmltaXRpdmVJbnB1dFByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBQcmltaXRpdmUuaW5wdXQ+O1xuaW50ZXJmYWNlIEZvcm1Db250cm9sUHJvcHMgZXh0ZW5kcyBQcmltaXRpdmVJbnB1dFByb3BzIHt9XG5cbmNvbnN0IEZvcm1Db250cm9sID0gUmVhY3QuZm9yd2FyZFJlZjxGb3JtQ29udHJvbEVsZW1lbnQsIEZvcm1Db250cm9sUHJvcHM+KFxuICAocHJvcHM6IFNjb3BlZFByb3BzPEZvcm1Db250cm9sUHJvcHM+LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IF9fc2NvcGVGb3JtLCAuLi5jb250cm9sUHJvcHMgfSA9IHByb3BzO1xuXG4gICAgY29uc3QgdmFsaWRhdGlvbkNvbnRleHQgPSB1c2VWYWxpZGF0aW9uQ29udGV4dChDT05UUk9MX05BTUUsIF9fc2NvcGVGb3JtKTtcbiAgICBjb25zdCBmaWVsZENvbnRleHQgPSB1c2VGb3JtRmllbGRDb250ZXh0KENPTlRST0xfTkFNRSwgX19zY29wZUZvcm0pO1xuICAgIGNvbnN0IGFyaWFEZXNjcmlwdGlvbkNvbnRleHQgPSB1c2VBcmlhRGVzY3JpcHRpb25Db250ZXh0KENPTlRST0xfTkFNRSwgX19zY29wZUZvcm0pO1xuXG4gICAgY29uc3QgcmVmID0gUmVhY3QudXNlUmVmPEZvcm1Db250cm9sRWxlbWVudD4obnVsbCk7XG4gICAgY29uc3QgY29tcG9zZWRSZWYgPSB1c2VDb21wb3NlZFJlZnMoZm9yd2FyZGVkUmVmLCByZWYpO1xuICAgIGNvbnN0IG5hbWUgPSBjb250cm9sUHJvcHMubmFtZSB8fCBmaWVsZENvbnRleHQubmFtZTtcbiAgICBjb25zdCBpZCA9IGNvbnRyb2xQcm9wcy5pZCB8fCBmaWVsZENvbnRleHQuaWQ7XG4gICAgY29uc3QgY3VzdG9tTWF0Y2hlckVudHJpZXMgPSB2YWxpZGF0aW9uQ29udGV4dC5nZXRGaWVsZEN1c3RvbU1hdGNoZXJFbnRyaWVzKG5hbWUpO1xuXG4gICAgY29uc3QgeyBvbkZpZWxkVmFsaWRpdHlDaGFuZ2UsIG9uRmllbGRDdXN0b21FcnJvcnNDaGFuZ2UsIG9uRmllbGRWYWxpZGl0aW9uQ2xlYXIgfSA9XG4gICAgICB2YWxpZGF0aW9uQ29udGV4dDtcbiAgICBjb25zdCB1cGRhdGVDb250cm9sVmFsaWRpdHkgPSBSZWFjdC51c2VDYWxsYmFjayhcbiAgICAgIGFzeW5jIChjb250cm9sOiBGb3JtQ29udHJvbEVsZW1lbnQpID0+IHtcbiAgICAgICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgLy8gMS4gZmlyc3QsIGlmIHdlIGhhdmUgYnVpbHQtaW4gZXJyb3JzIHdlIHN0b3AgaGVyZVxuXG4gICAgICAgIGlmIChoYXNCdWlsdEluRXJyb3IoY29udHJvbC52YWxpZGl0eSkpIHtcbiAgICAgICAgICBjb25zdCBjb250cm9sVmFsaWRpdHkgPSB2YWxpZGl0eVN0YXRlVG9PYmplY3QoY29udHJvbC52YWxpZGl0eSk7XG4gICAgICAgICAgb25GaWVsZFZhbGlkaXR5Q2hhbmdlKG5hbWUsIGNvbnRyb2xWYWxpZGl0eSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgLy8gMi4gdGhlbiBnYXRoZXIgdGhlIGZvcm0gZGF0YSB0byBnaXZlIHRvIGN1c3RvbSBtYXRjaGVycyBmb3IgY3Jvc3MtY29tcGFyaXNvbnNcblxuICAgICAgICBjb25zdCBmb3JtRGF0YSA9IGNvbnRyb2wuZm9ybSA/IG5ldyBGb3JtRGF0YShjb250cm9sLmZvcm0pIDogbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgIGNvbnN0IG1hdGNoZXJBcmdzOiBDdXN0b21NYXRjaGVyQXJncyA9IFtjb250cm9sLnZhbHVlLCBmb3JtRGF0YV07XG5cbiAgICAgICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgLy8gMy4gc3BsaXQgc3luYyBhbmQgYXN5bmMgY3VzdG9tIG1hdGNoZXIgZW50cmllc1xuXG4gICAgICAgIGNvbnN0IHN5bmNDdXN0b21NYXRjaGVyRW50cmllczogQXJyYXk8U3luY0N1c3RvbU1hdGNoZXJFbnRyeT4gPSBbXTtcbiAgICAgICAgY29uc3QgYXluY0N1c3RvbU1hdGNoZXJFbnRyaWVzOiBBcnJheTxBc3luY0N1c3RvbU1hdGNoZXJFbnRyeT4gPSBbXTtcbiAgICAgICAgY3VzdG9tTWF0Y2hlckVudHJpZXMuZm9yRWFjaCgoY3VzdG9tTWF0Y2hlckVudHJ5KSA9PiB7XG4gICAgICAgICAgaWYgKGlzQXN5bmNDdXN0b21NYXRjaGVyRW50cnkoY3VzdG9tTWF0Y2hlckVudHJ5LCBtYXRjaGVyQXJncykpIHtcbiAgICAgICAgICAgIGF5bmNDdXN0b21NYXRjaGVyRW50cmllcy5wdXNoKGN1c3RvbU1hdGNoZXJFbnRyeSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChpc1N5bmNDdXN0b21NYXRjaGVyRW50cnkoY3VzdG9tTWF0Y2hlckVudHJ5KSkge1xuICAgICAgICAgICAgc3luY0N1c3RvbU1hdGNoZXJFbnRyaWVzLnB1c2goY3VzdG9tTWF0Y2hlckVudHJ5KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgIC8vIDQuIHJ1biBzeW5jIGN1c3RvbSBtYXRjaGVycyBhbmQgdXBkYXRlIGNvbnRyb2wgdmFsaWRpdHkgLyBpbnRlcm5hbCB2YWxpZGl0eSArIGVycm9yc1xuXG4gICAgICAgIGNvbnN0IHN5bmNDdXN0b21FcnJvcnMgPSBzeW5jQ3VzdG9tTWF0Y2hlckVudHJpZXMubWFwKCh7IGlkLCBtYXRjaCB9KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIFtpZCwgbWF0Y2goLi4ubWF0Y2hlckFyZ3MpXSBhcyBjb25zdDtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHN5bmNDdXN0b21FcnJvcnNCeUlkID0gT2JqZWN0LmZyb21FbnRyaWVzKHN5bmNDdXN0b21FcnJvcnMpO1xuICAgICAgICBjb25zdCBoYXNTeW5jQ3VzdG9tRXJyb3JzID0gT2JqZWN0LnZhbHVlcyhzeW5jQ3VzdG9tRXJyb3JzQnlJZCkuc29tZShCb29sZWFuKTtcbiAgICAgICAgY29uc3QgaGFzQ3VzdG9tRXJyb3IgPSBoYXNTeW5jQ3VzdG9tRXJyb3JzO1xuICAgICAgICBjb250cm9sLnNldEN1c3RvbVZhbGlkaXR5KGhhc0N1c3RvbUVycm9yID8gREVGQVVMVF9JTlZBTElEX01FU1NBR0UgOiAnJyk7XG4gICAgICAgIGNvbnN0IGNvbnRyb2xWYWxpZGl0eSA9IHZhbGlkaXR5U3RhdGVUb09iamVjdChjb250cm9sLnZhbGlkaXR5KTtcbiAgICAgICAgb25GaWVsZFZhbGlkaXR5Q2hhbmdlKG5hbWUsIGNvbnRyb2xWYWxpZGl0eSk7XG4gICAgICAgIG9uRmllbGRDdXN0b21FcnJvcnNDaGFuZ2UobmFtZSwgc3luY0N1c3RvbUVycm9yc0J5SWQpO1xuXG4gICAgICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgIC8vIDUuIHJ1biBhc3luYyBjdXN0b20gbWF0Y2hlcnMgYW5kIHVwZGF0ZSBjb250cm9sIHZhbGlkaXR5IC8gaW50ZXJuYWwgdmFsaWRpdHkgKyBlcnJvcnNcblxuICAgICAgICBpZiAoIWhhc1N5bmNDdXN0b21FcnJvcnMgJiYgYXluY0N1c3RvbU1hdGNoZXJFbnRyaWVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBjb25zdCBwcm9taXNlZEN1c3RvbUVycm9ycyA9IGF5bmNDdXN0b21NYXRjaGVyRW50cmllcy5tYXAoKHsgaWQsIG1hdGNoIH0pID0+XG4gICAgICAgICAgICBtYXRjaCguLi5tYXRjaGVyQXJncykudGhlbigobWF0Y2hlcykgPT4gW2lkLCBtYXRjaGVzXSBhcyBjb25zdClcbiAgICAgICAgICApO1xuICAgICAgICAgIGNvbnN0IGFzeW5jQ3VzdG9tRXJyb3JzID0gYXdhaXQgUHJvbWlzZS5hbGwocHJvbWlzZWRDdXN0b21FcnJvcnMpO1xuICAgICAgICAgIGNvbnN0IGFzeW5jQ3VzdG9tRXJyb3JzQnlJZCA9IE9iamVjdC5mcm9tRW50cmllcyhhc3luY0N1c3RvbUVycm9ycyk7XG4gICAgICAgICAgY29uc3QgaGFzQXN5bmNDdXN0b21FcnJvcnMgPSBPYmplY3QudmFsdWVzKGFzeW5jQ3VzdG9tRXJyb3JzQnlJZCkuc29tZShCb29sZWFuKTtcbiAgICAgICAgICBjb25zdCBoYXNDdXN0b21FcnJvciA9IGhhc0FzeW5jQ3VzdG9tRXJyb3JzO1xuICAgICAgICAgIGNvbnRyb2wuc2V0Q3VzdG9tVmFsaWRpdHkoaGFzQ3VzdG9tRXJyb3IgPyBERUZBVUxUX0lOVkFMSURfTUVTU0FHRSA6ICcnKTtcbiAgICAgICAgICBjb25zdCBjb250cm9sVmFsaWRpdHkgPSB2YWxpZGl0eVN0YXRlVG9PYmplY3QoY29udHJvbC52YWxpZGl0eSk7XG4gICAgICAgICAgb25GaWVsZFZhbGlkaXR5Q2hhbmdlKG5hbWUsIGNvbnRyb2xWYWxpZGl0eSk7XG4gICAgICAgICAgb25GaWVsZEN1c3RvbUVycm9yc0NoYW5nZShuYW1lLCBhc3luY0N1c3RvbUVycm9yc0J5SWQpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgW2N1c3RvbU1hdGNoZXJFbnRyaWVzLCBuYW1lLCBvbkZpZWxkQ3VzdG9tRXJyb3JzQ2hhbmdlLCBvbkZpZWxkVmFsaWRpdHlDaGFuZ2VdXG4gICAgKTtcblxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCBjb250cm9sID0gcmVmLmN1cnJlbnQ7XG4gICAgICBpZiAoY29udHJvbCkge1xuICAgICAgICAvLyBXZSBvbmx5IHdhbnQgdmFsaWRhdGUgb24gY2hhbmdlIChuYXRpdmUgYGNoYW5nZWAgZXZlbnQsIG5vdCBSZWFjdCdzIGBvbkNoYW5nZWApLiBUaGlzIGlzIHByaW1hcmlseVxuICAgICAgICAvLyBhIFVYIGRlY2lzaW9uLCB3ZSBkb24ndCB3YW50IHRvIHZhbGlkYXRlIG9uIGV2ZXJ5IGtleXN0cm9rZSBhbmQgUmVhY3QncyBgb25DaGFuZ2VgIGlzIHRoZSBgaW5wdXRgIGV2ZW50LlxuICAgICAgICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoKSA9PiB1cGRhdGVDb250cm9sVmFsaWRpdHkoY29udHJvbCk7XG4gICAgICAgIGNvbnRyb2wuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgaGFuZGxlQ2hhbmdlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IGNvbnRyb2wucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgaGFuZGxlQ2hhbmdlKTtcbiAgICAgIH1cbiAgICB9LCBbdXBkYXRlQ29udHJvbFZhbGlkaXR5XSk7XG5cbiAgICBjb25zdCByZXNldENvbnRyb2xWYWxpZGl0eSA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgIGNvbnN0IGNvbnRyb2wgPSByZWYuY3VycmVudDtcbiAgICAgIGlmIChjb250cm9sKSB7XG4gICAgICAgIGNvbnRyb2wuc2V0Q3VzdG9tVmFsaWRpdHkoJycpO1xuICAgICAgICBvbkZpZWxkVmFsaWRpdGlvbkNsZWFyKG5hbWUpO1xuICAgICAgfVxuICAgIH0sIFtuYW1lLCBvbkZpZWxkVmFsaWRpdGlvbkNsZWFyXSk7XG5cbiAgICAvLyByZXNldCB2YWxpZGl0eSBhbmQgZXJyb3JzIHdoZW4gdGhlIGZvcm0gaXMgcmVzZXRcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgY29uc3QgZm9ybSA9IHJlZi5jdXJyZW50Py5mb3JtO1xuICAgICAgaWYgKGZvcm0pIHtcbiAgICAgICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdyZXNldCcsIHJlc2V0Q29udHJvbFZhbGlkaXR5KTtcbiAgICAgICAgcmV0dXJuICgpID0+IGZvcm0ucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzZXQnLCByZXNldENvbnRyb2xWYWxpZGl0eSk7XG4gICAgICB9XG4gICAgfSwgW3Jlc2V0Q29udHJvbFZhbGlkaXR5XSk7XG5cbiAgICAvLyBmb2N1cyBmaXJzdCBpbnZhbGlkIGNvbnRyb2wgd2hlbiBmaWVsZHMgYXJlIHNldCBhcyBpbnZhbGlkIGJ5IHNlcnZlclxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCBjb250cm9sID0gcmVmLmN1cnJlbnQ7XG4gICAgICBjb25zdCBmb3JtID0gY29udHJvbD8uY2xvc2VzdCgnZm9ybScpO1xuICAgICAgaWYgKGZvcm0gJiYgZmllbGRDb250ZXh0LnNlcnZlckludmFsaWQpIHtcbiAgICAgICAgY29uc3QgZmlyc3RJbnZhbGlkQ29udHJvbCA9IGdldEZpcnN0SW52YWxpZENvbnRyb2woZm9ybSk7XG4gICAgICAgIGlmIChmaXJzdEludmFsaWRDb250cm9sID09PSBjb250cm9sKSBmaXJzdEludmFsaWRDb250cm9sLmZvY3VzKCk7XG4gICAgICB9XG4gICAgfSwgW2ZpZWxkQ29udGV4dC5zZXJ2ZXJJbnZhbGlkXSk7XG5cbiAgICBjb25zdCB2YWxpZGl0eSA9IHZhbGlkYXRpb25Db250ZXh0LmdldEZpZWxkVmFsaWRpdHkobmFtZSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFByaW1pdGl2ZS5pbnB1dFxuICAgICAgICBkYXRhLXZhbGlkPXtnZXRWYWxpZEF0dHJpYnV0ZSh2YWxpZGl0eSwgZmllbGRDb250ZXh0LnNlcnZlckludmFsaWQpfVxuICAgICAgICBkYXRhLWludmFsaWQ9e2dldEludmFsaWRBdHRyaWJ1dGUodmFsaWRpdHksIGZpZWxkQ29udGV4dC5zZXJ2ZXJJbnZhbGlkKX1cbiAgICAgICAgYXJpYS1pbnZhbGlkPXtmaWVsZENvbnRleHQuc2VydmVySW52YWxpZCA/IHRydWUgOiB1bmRlZmluZWR9XG4gICAgICAgIGFyaWEtZGVzY3JpYmVkYnk9e2FyaWFEZXNjcmlwdGlvbkNvbnRleHQuZ2V0RmllbGREZXNjcmlwdGlvbihuYW1lKX1cbiAgICAgICAgLy8gZGlzYWJsZSBkZWZhdWx0IGJyb3dzZXIgYmVoYXZpb3VyIG9mIHNob3dpbmcgYnVpbHQtaW4gZXJyb3IgbWVzc2FnZSBvbiBob3ZlclxuICAgICAgICB0aXRsZT1cIlwiXG4gICAgICAgIHsuLi5jb250cm9sUHJvcHN9XG4gICAgICAgIHJlZj17Y29tcG9zZWRSZWZ9XG4gICAgICAgIGlkPXtpZH1cbiAgICAgICAgbmFtZT17bmFtZX1cbiAgICAgICAgb25JbnZhbGlkPXtjb21wb3NlRXZlbnRIYW5kbGVycyhwcm9wcy5vbkludmFsaWQsIChldmVudCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGNvbnRyb2wgPSBldmVudC5jdXJyZW50VGFyZ2V0O1xuICAgICAgICAgIHVwZGF0ZUNvbnRyb2xWYWxpZGl0eShjb250cm9sKTtcbiAgICAgICAgfSl9XG4gICAgICAgIG9uQ2hhbmdlPXtjb21wb3NlRXZlbnRIYW5kbGVycyhwcm9wcy5vbkNoYW5nZSwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgLy8gcmVzZXQgdmFsaWRpdHkgd2hlbiB1c2VyIGNoYW5nZXMgdmFsdWVcbiAgICAgICAgICByZXNldENvbnRyb2xWYWxpZGl0eSgpO1xuICAgICAgICB9KX1cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxuKTtcblxuRm9ybUNvbnRyb2wuZGlzcGxheU5hbWUgPSBDT05UUk9MX05BTUU7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEZvcm1NZXNzYWdlXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmNvbnN0IHZhbGlkaXR5TWF0Y2hlcnMgPSBbXG4gICdiYWRJbnB1dCcsXG4gICdwYXR0ZXJuTWlzbWF0Y2gnLFxuICAncmFuZ2VPdmVyZmxvdycsXG4gICdyYW5nZVVuZGVyZmxvdycsXG4gICdzdGVwTWlzbWF0Y2gnLFxuICAndG9vTG9uZycsXG4gICd0b29TaG9ydCcsXG4gICd0eXBlTWlzbWF0Y2gnLFxuICAndmFsaWQnLFxuICAndmFsdWVNaXNzaW5nJyxcbl0gYXMgY29uc3Q7XG50eXBlIFZhbGlkaXR5TWF0Y2hlciA9ICh0eXBlb2YgdmFsaWRpdHlNYXRjaGVycylbbnVtYmVyXTtcblxuY29uc3QgREVGQVVMVF9JTlZBTElEX01FU1NBR0UgPSAnVGhpcyB2YWx1ZSBpcyBub3QgdmFsaWQnO1xuY29uc3QgREVGQVVMVF9CVUlMVF9JTl9NRVNTQUdFUzogUmVjb3JkPFZhbGlkaXR5TWF0Y2hlciwgc3RyaW5nIHwgdW5kZWZpbmVkPiA9IHtcbiAgYmFkSW5wdXQ6IERFRkFVTFRfSU5WQUxJRF9NRVNTQUdFLFxuICBwYXR0ZXJuTWlzbWF0Y2g6ICdUaGlzIHZhbHVlIGRvZXMgbm90IG1hdGNoIHRoZSByZXF1aXJlZCBwYXR0ZXJuJyxcbiAgcmFuZ2VPdmVyZmxvdzogJ1RoaXMgdmFsdWUgaXMgdG9vIGxhcmdlJyxcbiAgcmFuZ2VVbmRlcmZsb3c6ICdUaGlzIHZhbHVlIGlzIHRvbyBzbWFsbCcsXG4gIHN0ZXBNaXNtYXRjaDogJ1RoaXMgdmFsdWUgZG9lcyBub3QgbWF0Y2ggdGhlIHJlcXVpcmVkIHN0ZXAnLFxuICB0b29Mb25nOiAnVGhpcyB2YWx1ZSBpcyB0b28gbG9uZycsXG4gIHRvb1Nob3J0OiAnVGhpcyB2YWx1ZSBpcyB0b28gc2hvcnQnLFxuICB0eXBlTWlzbWF0Y2g6ICdUaGlzIHZhbHVlIGRvZXMgbm90IG1hdGNoIHRoZSByZXF1aXJlZCB0eXBlJyxcbiAgdmFsaWQ6IHVuZGVmaW5lZCxcbiAgdmFsdWVNaXNzaW5nOiAnVGhpcyB2YWx1ZSBpcyBtaXNzaW5nJyxcbn07XG5cbmNvbnN0IE1FU1NBR0VfTkFNRSA9ICdGb3JtTWVzc2FnZSc7XG5cbnR5cGUgRm9ybU1lc3NhZ2VFbGVtZW50ID0gRm9ybU1lc3NhZ2VJbXBsRWxlbWVudDtcbmludGVyZmFjZSBGb3JtTWVzc2FnZVByb3BzIGV4dGVuZHMgT21pdDxGb3JtTWVzc2FnZUltcGxQcm9wcywgJ25hbWUnPiB7XG4gIG1hdGNoPzogVmFsaWRpdHlNYXRjaGVyIHwgQ3VzdG9tTWF0Y2hlcjtcbiAgZm9yY2VNYXRjaD86IGJvb2xlYW47XG4gIG5hbWU/OiBzdHJpbmc7XG59XG5cbmNvbnN0IEZvcm1NZXNzYWdlID0gUmVhY3QuZm9yd2FyZFJlZjxGb3JtTWVzc2FnZUVsZW1lbnQsIEZvcm1NZXNzYWdlUHJvcHM+KFxuICAocHJvcHM6IFNjb3BlZFByb3BzPEZvcm1NZXNzYWdlUHJvcHM+LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IG1hdGNoLCBuYW1lOiBuYW1lUHJvcCwgLi4ubWVzc2FnZVByb3BzIH0gPSBwcm9wcztcbiAgICBjb25zdCBmaWVsZENvbnRleHQgPSB1c2VGb3JtRmllbGRDb250ZXh0KE1FU1NBR0VfTkFNRSwgcHJvcHMuX19zY29wZUZvcm0pO1xuICAgIGNvbnN0IG5hbWUgPSBuYW1lUHJvcCA/PyBmaWVsZENvbnRleHQubmFtZTtcblxuICAgIGlmIChtYXRjaCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Rm9ybU1lc3NhZ2VJbXBsIHsuLi5tZXNzYWdlUHJvcHN9IHJlZj17Zm9yd2FyZGVkUmVmfSBuYW1lPXtuYW1lfT5cbiAgICAgICAgICB7cHJvcHMuY2hpbGRyZW4gfHwgREVGQVVMVF9JTlZBTElEX01FU1NBR0V9XG4gICAgICAgIDwvRm9ybU1lc3NhZ2VJbXBsPlxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBtYXRjaCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIDxGb3JtQ3VzdG9tTWVzc2FnZSBtYXRjaD17bWF0Y2h9IHsuLi5tZXNzYWdlUHJvcHN9IHJlZj17Zm9yd2FyZGVkUmVmfSBuYW1lPXtuYW1lfSAvPjtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIDxGb3JtQnVpbHRJbk1lc3NhZ2UgbWF0Y2g9e21hdGNofSB7Li4ubWVzc2FnZVByb3BzfSByZWY9e2ZvcndhcmRlZFJlZn0gbmFtZT17bmFtZX0gLz47XG4gICAgfVxuICB9XG4pO1xuXG5Gb3JtTWVzc2FnZS5kaXNwbGF5TmFtZSA9IE1FU1NBR0VfTkFNRTtcblxudHlwZSBGb3JtQnVpbHRJbk1lc3NhZ2VFbGVtZW50ID0gRm9ybU1lc3NhZ2VJbXBsRWxlbWVudDtcbmludGVyZmFjZSBGb3JtQnVpbHRJbk1lc3NhZ2VQcm9wcyBleHRlbmRzIEZvcm1NZXNzYWdlSW1wbFByb3BzIHtcbiAgbWF0Y2g6IFZhbGlkaXR5TWF0Y2hlcjtcbiAgZm9yY2VNYXRjaD86IGJvb2xlYW47XG4gIG5hbWU6IHN0cmluZztcbn1cblxuY29uc3QgRm9ybUJ1aWx0SW5NZXNzYWdlID0gUmVhY3QuZm9yd2FyZFJlZjxGb3JtQnVpbHRJbk1lc3NhZ2VFbGVtZW50LCBGb3JtQnVpbHRJbk1lc3NhZ2VQcm9wcz4oXG4gIChwcm9wczogU2NvcGVkUHJvcHM8Rm9ybUJ1aWx0SW5NZXNzYWdlUHJvcHM+LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IG1hdGNoLCBmb3JjZU1hdGNoID0gZmFsc2UsIG5hbWUsIGNoaWxkcmVuLCAuLi5tZXNzYWdlUHJvcHMgfSA9IHByb3BzO1xuICAgIGNvbnN0IHZhbGlkYXRpb25Db250ZXh0ID0gdXNlVmFsaWRhdGlvbkNvbnRleHQoTUVTU0FHRV9OQU1FLCBtZXNzYWdlUHJvcHMuX19zY29wZUZvcm0pO1xuICAgIGNvbnN0IHZhbGlkaXR5ID0gdmFsaWRhdGlvbkNvbnRleHQuZ2V0RmllbGRWYWxpZGl0eShuYW1lKTtcbiAgICBjb25zdCBtYXRjaGVzID0gZm9yY2VNYXRjaCB8fCB2YWxpZGl0eT8uW21hdGNoXTtcblxuICAgIGlmIChtYXRjaGVzKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Rm9ybU1lc3NhZ2VJbXBsIHJlZj17Zm9yd2FyZGVkUmVmfSB7Li4ubWVzc2FnZVByb3BzfSBuYW1lPXtuYW1lfT5cbiAgICAgICAgICB7Y2hpbGRyZW4gPz8gREVGQVVMVF9CVUlMVF9JTl9NRVNTQUdFU1ttYXRjaF19XG4gICAgICAgIDwvRm9ybU1lc3NhZ2VJbXBsPlxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuKTtcblxudHlwZSBGb3JtQ3VzdG9tTWVzc2FnZUVsZW1lbnQgPSBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBGb3JtTWVzc2FnZUltcGw+O1xuaW50ZXJmYWNlIEZvcm1DdXN0b21NZXNzYWdlUHJvcHMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIEZvcm1NZXNzYWdlSW1wbD4ge1xuICBtYXRjaDogQ3VzdG9tTWF0Y2hlcjtcbiAgZm9yY2VNYXRjaD86IGJvb2xlYW47XG4gIG5hbWU6IHN0cmluZztcbn1cblxuY29uc3QgRm9ybUN1c3RvbU1lc3NhZ2UgPSBSZWFjdC5mb3J3YXJkUmVmPEZvcm1DdXN0b21NZXNzYWdlRWxlbWVudCwgRm9ybUN1c3RvbU1lc3NhZ2VQcm9wcz4oXG4gIChwcm9wczogU2NvcGVkUHJvcHM8Rm9ybUN1c3RvbU1lc3NhZ2VQcm9wcz4sIGZvcndhcmRlZFJlZikgPT4ge1xuICAgIGNvbnN0IHsgbWF0Y2gsIGZvcmNlTWF0Y2ggPSBmYWxzZSwgbmFtZSwgaWQ6IGlkUHJvcCwgY2hpbGRyZW4sIC4uLm1lc3NhZ2VQcm9wcyB9ID0gcHJvcHM7XG4gICAgY29uc3QgdmFsaWRhdGlvbkNvbnRleHQgPSB1c2VWYWxpZGF0aW9uQ29udGV4dChNRVNTQUdFX05BTUUsIG1lc3NhZ2VQcm9wcy5fX3Njb3BlRm9ybSk7XG4gICAgY29uc3QgcmVmID0gUmVhY3QudXNlUmVmPEZvcm1DdXN0b21NZXNzYWdlRWxlbWVudD4obnVsbCk7XG4gICAgY29uc3QgY29tcG9zZWRSZWYgPSB1c2VDb21wb3NlZFJlZnMoZm9yd2FyZGVkUmVmLCByZWYpO1xuICAgIGNvbnN0IF9pZCA9IHVzZUlkKCk7XG4gICAgY29uc3QgaWQgPSBpZFByb3AgPz8gX2lkO1xuXG4gICAgY29uc3QgY3VzdG9tTWF0Y2hlckVudHJ5ID0gUmVhY3QudXNlTWVtbygoKSA9PiAoeyBpZCwgbWF0Y2ggfSksIFtpZCwgbWF0Y2hdKTtcbiAgICBjb25zdCB7IG9uRmllbGRDdXN0b21NYXRjaGVyRW50cnlBZGQsIG9uRmllbGRDdXN0b21NYXRjaGVyRW50cnlSZW1vdmUgfSA9IHZhbGlkYXRpb25Db250ZXh0O1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBvbkZpZWxkQ3VzdG9tTWF0Y2hlckVudHJ5QWRkKG5hbWUsIGN1c3RvbU1hdGNoZXJFbnRyeSk7XG4gICAgICByZXR1cm4gKCkgPT4gb25GaWVsZEN1c3RvbU1hdGNoZXJFbnRyeVJlbW92ZShuYW1lLCBjdXN0b21NYXRjaGVyRW50cnkuaWQpO1xuICAgIH0sIFtjdXN0b21NYXRjaGVyRW50cnksIG5hbWUsIG9uRmllbGRDdXN0b21NYXRjaGVyRW50cnlBZGQsIG9uRmllbGRDdXN0b21NYXRjaGVyRW50cnlSZW1vdmVdKTtcblxuICAgIGNvbnN0IHZhbGlkaXR5ID0gdmFsaWRhdGlvbkNvbnRleHQuZ2V0RmllbGRWYWxpZGl0eShuYW1lKTtcbiAgICBjb25zdCBjdXN0b21FcnJvcnMgPSB2YWxpZGF0aW9uQ29udGV4dC5nZXRGaWVsZEN1c3RvbUVycm9ycyhuYW1lKTtcbiAgICBjb25zdCBoYXNNYXRjaGluZ0N1c3RvbUVycm9yID0gY3VzdG9tRXJyb3JzW2lkXTtcbiAgICBjb25zdCBtYXRjaGVzID1cbiAgICAgIGZvcmNlTWF0Y2ggfHwgKHZhbGlkaXR5ICYmICFoYXNCdWlsdEluRXJyb3IodmFsaWRpdHkpICYmIGhhc01hdGNoaW5nQ3VzdG9tRXJyb3IpO1xuXG4gICAgaWYgKG1hdGNoZXMpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxGb3JtTWVzc2FnZUltcGwgaWQ9e2lkfSByZWY9e2NvbXBvc2VkUmVmfSB7Li4ubWVzc2FnZVByb3BzfSBuYW1lPXtuYW1lfT5cbiAgICAgICAgICB7Y2hpbGRyZW4gPz8gREVGQVVMVF9JTlZBTElEX01FU1NBR0V9XG4gICAgICAgIDwvRm9ybU1lc3NhZ2VJbXBsPlxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuKTtcblxudHlwZSBGb3JtTWVzc2FnZUltcGxFbGVtZW50ID0gUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgUHJpbWl0aXZlLnNwYW4+O1xudHlwZSBQcmltaXRpdmVTcGFuUHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFByaW1pdGl2ZS5zcGFuPjtcbmludGVyZmFjZSBGb3JtTWVzc2FnZUltcGxQcm9wcyBleHRlbmRzIFByaW1pdGl2ZVNwYW5Qcm9wcyB7XG4gIG5hbWU6IHN0cmluZztcbn1cblxuY29uc3QgRm9ybU1lc3NhZ2VJbXBsID0gUmVhY3QuZm9yd2FyZFJlZjxGb3JtTWVzc2FnZUltcGxFbGVtZW50LCBGb3JtTWVzc2FnZUltcGxQcm9wcz4oXG4gIChwcm9wczogU2NvcGVkUHJvcHM8Rm9ybU1lc3NhZ2VJbXBsUHJvcHM+LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IF9fc2NvcGVGb3JtLCBpZDogaWRQcm9wLCBuYW1lLCAuLi5tZXNzYWdlUHJvcHMgfSA9IHByb3BzO1xuICAgIGNvbnN0IGFyaWFEZXNjcmlwdGlvbkNvbnRleHQgPSB1c2VBcmlhRGVzY3JpcHRpb25Db250ZXh0KE1FU1NBR0VfTkFNRSwgX19zY29wZUZvcm0pO1xuICAgIGNvbnN0IF9pZCA9IHVzZUlkKCk7XG4gICAgY29uc3QgaWQgPSBpZFByb3AgPz8gX2lkO1xuXG4gICAgY29uc3QgeyBvbkZpZWxkTWVzc2FnZUlkQWRkLCBvbkZpZWxkTWVzc2FnZUlkUmVtb3ZlIH0gPSBhcmlhRGVzY3JpcHRpb25Db250ZXh0O1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBvbkZpZWxkTWVzc2FnZUlkQWRkKG5hbWUsIGlkKTtcbiAgICAgIHJldHVybiAoKSA9PiBvbkZpZWxkTWVzc2FnZUlkUmVtb3ZlKG5hbWUsIGlkKTtcbiAgICB9LCBbbmFtZSwgaWQsIG9uRmllbGRNZXNzYWdlSWRBZGQsIG9uRmllbGRNZXNzYWdlSWRSZW1vdmVdKTtcblxuICAgIHJldHVybiA8UHJpbWl0aXZlLnNwYW4gaWQ9e2lkfSB7Li4ubWVzc2FnZVByb3BzfSByZWY9e2ZvcndhcmRlZFJlZn0gLz47XG4gIH1cbik7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEZvcm1WYWxpZGl0eVN0YXRlXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmNvbnN0IFZBTElESVRZX1NUQVRFX05BTUUgPSAnRm9ybVZhbGlkaXR5U3RhdGUnO1xuXG5pbnRlcmZhY2UgRm9ybVZhbGlkaXR5U3RhdGVQcm9wcyB7XG4gIGNoaWxkcmVuKHZhbGlkaXR5OiBWYWxpZGl0eVN0YXRlIHwgdW5kZWZpbmVkKTogUmVhY3QuUmVhY3ROb2RlO1xuICBuYW1lPzogc3RyaW5nO1xufVxuXG5jb25zdCBGb3JtVmFsaWRpdHlTdGF0ZSA9IChwcm9wczogU2NvcGVkUHJvcHM8Rm9ybVZhbGlkaXR5U3RhdGVQcm9wcz4pID0+IHtcbiAgY29uc3QgeyBfX3Njb3BlRm9ybSwgbmFtZTogbmFtZVByb3AsIGNoaWxkcmVuIH0gPSBwcm9wcztcbiAgY29uc3QgdmFsaWRhdGlvbkNvbnRleHQgPSB1c2VWYWxpZGF0aW9uQ29udGV4dChWQUxJRElUWV9TVEFURV9OQU1FLCBfX3Njb3BlRm9ybSk7XG4gIGNvbnN0IGZpZWxkQ29udGV4dCA9IHVzZUZvcm1GaWVsZENvbnRleHQoVkFMSURJVFlfU1RBVEVfTkFNRSwgX19zY29wZUZvcm0pO1xuICBjb25zdCBuYW1lID0gbmFtZVByb3AgPz8gZmllbGRDb250ZXh0Lm5hbWU7XG4gIGNvbnN0IHZhbGlkaXR5ID0gdmFsaWRhdGlvbkNvbnRleHQuZ2V0RmllbGRWYWxpZGl0eShuYW1lKTtcbiAgcmV0dXJuIDw+e2NoaWxkcmVuKHZhbGlkaXR5KX08Lz47XG59O1xuXG5Gb3JtVmFsaWRpdHlTdGF0ZS5kaXNwbGF5TmFtZSA9IFZBTElESVRZX1NUQVRFX05BTUU7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEZvcm1TdWJtaXRcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuY29uc3QgU1VCTUlUX05BTUUgPSAnRm9ybVN1Ym1pdCc7XG5cbnR5cGUgRm9ybVN1Ym1pdEVsZW1lbnQgPSBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBQcmltaXRpdmUuYnV0dG9uPjtcbnR5cGUgUHJpbWl0aXZlQnV0dG9uUHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFByaW1pdGl2ZS5idXR0b24+O1xuaW50ZXJmYWNlIEZvcm1TdWJtaXRQcm9wcyBleHRlbmRzIFByaW1pdGl2ZUJ1dHRvblByb3BzIHt9XG5cbmNvbnN0IEZvcm1TdWJtaXQgPSBSZWFjdC5mb3J3YXJkUmVmPEZvcm1TdWJtaXRFbGVtZW50LCBGb3JtU3VibWl0UHJvcHM+KFxuICAocHJvcHM6IFNjb3BlZFByb3BzPEZvcm1TdWJtaXRQcm9wcz4sIGZvcndhcmRlZFJlZikgPT4ge1xuICAgIGNvbnN0IHsgX19zY29wZUZvcm0sIC4uLnN1Ym1pdFByb3BzIH0gPSBwcm9wcztcbiAgICByZXR1cm4gPFByaW1pdGl2ZS5idXR0b24gdHlwZT1cInN1Ym1pdFwiIHsuLi5zdWJtaXRQcm9wc30gcmVmPXtmb3J3YXJkZWRSZWZ9IC8+O1xuICB9XG4pO1xuXG5Gb3JtU3VibWl0LmRpc3BsYXlOYW1lID0gU1VCTUlUX05BTUU7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxudHlwZSBWYWxpZGl0eVN0YXRlS2V5ID0ga2V5b2YgVmFsaWRpdHlTdGF0ZTtcbnR5cGUgU3luY0N1c3RvbU1hdGNoZXIgPSAodmFsdWU6IHN0cmluZywgZm9ybURhdGE6IEZvcm1EYXRhKSA9PiBib29sZWFuO1xudHlwZSBBc3luY0N1c3RvbU1hdGNoZXIgPSAodmFsdWU6IHN0cmluZywgZm9ybURhdGE6IEZvcm1EYXRhKSA9PiBQcm9taXNlPGJvb2xlYW4+O1xudHlwZSBDdXN0b21NYXRjaGVyID0gU3luY0N1c3RvbU1hdGNoZXIgfCBBc3luY0N1c3RvbU1hdGNoZXI7XG50eXBlIEN1c3RvbU1hdGNoZXJFbnRyeSA9IHsgaWQ6IHN0cmluZzsgbWF0Y2g6IEN1c3RvbU1hdGNoZXIgfTtcbnR5cGUgU3luY0N1c3RvbU1hdGNoZXJFbnRyeSA9IHsgaWQ6IHN0cmluZzsgbWF0Y2g6IFN5bmNDdXN0b21NYXRjaGVyIH07XG50eXBlIEFzeW5jQ3VzdG9tTWF0Y2hlckVudHJ5ID0geyBpZDogc3RyaW5nOyBtYXRjaDogQXN5bmNDdXN0b21NYXRjaGVyIH07XG50eXBlIEN1c3RvbU1hdGNoZXJBcmdzID0gW3N0cmluZywgRm9ybURhdGFdO1xuXG5mdW5jdGlvbiB2YWxpZGl0eVN0YXRlVG9PYmplY3QodmFsaWRpdHk6IFZhbGlkaXR5U3RhdGUpIHtcbiAgY29uc3Qgb2JqZWN0OiBhbnkgPSB7fTtcbiAgZm9yIChjb25zdCBrZXkgaW4gdmFsaWRpdHkpIHtcbiAgICBvYmplY3Rba2V5XSA9IHZhbGlkaXR5W2tleSBhcyBWYWxpZGl0eVN0YXRlS2V5XTtcbiAgfVxuICByZXR1cm4gb2JqZWN0IGFzIFJlY29yZDxWYWxpZGl0eVN0YXRlS2V5LCBib29sZWFuPjtcbn1cblxuZnVuY3Rpb24gaXNIVE1MRWxlbWVudChlbGVtZW50OiBhbnkpOiBlbGVtZW50IGlzIEhUTUxFbGVtZW50IHtcbiAgcmV0dXJuIGVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudDtcbn1cblxuZnVuY3Rpb24gaXNGb3JtQ29udHJvbChlbGVtZW50OiBhbnkpOiBlbGVtZW50IGlzIHsgdmFsaWRpdHk6IFZhbGlkaXR5U3RhdGUgfSB7XG4gIHJldHVybiAndmFsaWRpdHknIGluIGVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGlzSW52YWxpZChjb250cm9sOiBIVE1MRWxlbWVudCkge1xuICByZXR1cm4gKFxuICAgIGlzRm9ybUNvbnRyb2woY29udHJvbCkgJiZcbiAgICAoY29udHJvbC52YWxpZGl0eS52YWxpZCA9PT0gZmFsc2UgfHwgY29udHJvbC5nZXRBdHRyaWJ1dGUoJ2FyaWEtaW52YWxpZCcpID09PSAndHJ1ZScpXG4gICk7XG59XG5cbmZ1bmN0aW9uIGdldEZpcnN0SW52YWxpZENvbnRyb2woZm9ybTogSFRNTEZvcm1FbGVtZW50KTogSFRNTEVsZW1lbnQgfCB1bmRlZmluZWQge1xuICBjb25zdCBlbGVtZW50cyA9IGZvcm0uZWxlbWVudHM7XG4gIGNvbnN0IFtmaXJzdEludmFsaWRDb250cm9sXSA9IEFycmF5LmZyb20oZWxlbWVudHMpLmZpbHRlcihpc0hUTUxFbGVtZW50KS5maWx0ZXIoaXNJbnZhbGlkKTtcbiAgcmV0dXJuIGZpcnN0SW52YWxpZENvbnRyb2w7XG59XG5cbmZ1bmN0aW9uIGlzQXN5bmNDdXN0b21NYXRjaGVyRW50cnkoXG4gIGVudHJ5OiBDdXN0b21NYXRjaGVyRW50cnksXG4gIGFyZ3M6IEN1c3RvbU1hdGNoZXJBcmdzXG4pOiBlbnRyeSBpcyBBc3luY0N1c3RvbU1hdGNoZXJFbnRyeSB7XG4gIHJldHVybiBlbnRyeS5tYXRjaC5jb25zdHJ1Y3Rvci5uYW1lID09PSAnQXN5bmNGdW5jdGlvbicgfHwgcmV0dXJuc1Byb21pc2UoZW50cnkubWF0Y2gsIGFyZ3MpO1xufVxuXG5mdW5jdGlvbiBpc1N5bmNDdXN0b21NYXRjaGVyRW50cnkoZW50cnk6IEN1c3RvbU1hdGNoZXJFbnRyeSk6IGVudHJ5IGlzIFN5bmNDdXN0b21NYXRjaGVyRW50cnkge1xuICByZXR1cm4gZW50cnkubWF0Y2guY29uc3RydWN0b3IubmFtZSA9PT0gJ0Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gcmV0dXJuc1Byb21pc2UoZnVuYzogRnVuY3Rpb24sIGFyZ3M6IEFycmF5PHVua25vd24+KSB7XG4gIHJldHVybiBmdW5jKC4uLmFyZ3MpIGluc3RhbmNlb2YgUHJvbWlzZTtcbn1cblxuZnVuY3Rpb24gaGFzQnVpbHRJbkVycm9yKHZhbGlkaXR5OiBWYWxpZGl0eVN0YXRlKSB7XG4gIGxldCBlcnJvciA9IGZhbHNlO1xuICBmb3IgKGNvbnN0IHZhbGlkaXR5S2V5IGluIHZhbGlkaXR5KSB7XG4gICAgY29uc3Qga2V5ID0gdmFsaWRpdHlLZXkgYXMgVmFsaWRpdHlTdGF0ZUtleTtcbiAgICBpZiAoa2V5ICE9PSAndmFsaWQnICYmIGtleSAhPT0gJ2N1c3RvbUVycm9yJyAmJiB2YWxpZGl0eVtrZXldKSB7XG4gICAgICBlcnJvciA9IHRydWU7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGVycm9yO1xufVxuXG5mdW5jdGlvbiBnZXRWYWxpZEF0dHJpYnV0ZSh2YWxpZGl0eTogVmFsaWRpdHlTdGF0ZSB8IHVuZGVmaW5lZCwgc2VydmVySW52YWxpZDogYm9vbGVhbikge1xuICBpZiAodmFsaWRpdHk/LnZhbGlkID09PSB0cnVlICYmICFzZXJ2ZXJJbnZhbGlkKSByZXR1cm4gdHJ1ZTtcbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbmZ1bmN0aW9uIGdldEludmFsaWRBdHRyaWJ1dGUodmFsaWRpdHk6IFZhbGlkaXR5U3RhdGUgfCB1bmRlZmluZWQsIHNlcnZlckludmFsaWQ6IGJvb2xlYW4pIHtcbiAgaWYgKHZhbGlkaXR5Py52YWxpZCA9PT0gZmFsc2UgfHwgc2VydmVySW52YWxpZCkgcmV0dXJuIHRydWU7XG4gIHJldHVybiB1bmRlZmluZWQ7XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuY29uc3QgUm9vdCA9IEZvcm07XG5jb25zdCBGaWVsZCA9IEZvcm1GaWVsZDtcbmNvbnN0IExhYmVsID0gRm9ybUxhYmVsO1xuY29uc3QgQ29udHJvbCA9IEZvcm1Db250cm9sO1xuY29uc3QgTWVzc2FnZSA9IEZvcm1NZXNzYWdlO1xuY29uc3QgVmFsaWRpdHlTdGF0ZSA9IEZvcm1WYWxpZGl0eVN0YXRlO1xuY29uc3QgU3VibWl0ID0gRm9ybVN1Ym1pdDtcblxuZXhwb3J0IHtcbiAgY3JlYXRlRm9ybVNjb3BlLFxuICAvL1xuICBGb3JtLFxuICBGb3JtRmllbGQsXG4gIEZvcm1MYWJlbCxcbiAgRm9ybUNvbnRyb2wsXG4gIEZvcm1NZXNzYWdlLFxuICBGb3JtVmFsaWRpdHlTdGF0ZSxcbiAgRm9ybVN1Ym1pdCxcbiAgLy9cbiAgUm9vdCxcbiAgRmllbGQsXG4gIExhYmVsLFxuICBDb250cm9sLFxuICBNZXNzYWdlLFxuICBWYWxpZGl0eVN0YXRlLFxuICBTdWJtaXQsXG59O1xuXG5leHBvcnQgdHlwZSB7XG4gIEZvcm1Qcm9wcyxcbiAgRm9ybUZpZWxkUHJvcHMsXG4gIEZvcm1MYWJlbFByb3BzLFxuICBGb3JtQ29udHJvbFByb3BzLFxuICBGb3JtTWVzc2FnZVByb3BzLFxuICBGb3JtVmFsaWRpdHlTdGF0ZVByb3BzLFxuICBGb3JtU3VibWl0UHJvcHMsXG59O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiY29tcG9zZUV2ZW50SGFuZGxlcnMiLCJ1c2VDb21wb3NlZFJlZnMiLCJjcmVhdGVDb250ZXh0U2NvcGUiLCJ1c2VJZCIsIkxhYmVsIiwiTGFiZWxQcmltaXRpdmUiLCJQcmltaXRpdmUiLCJGcmFnbWVudCIsImpzeCIsImNyZWF0ZUZvcm1Db250ZXh0IiwiY3JlYXRlRm9ybVNjb3BlIiwiRk9STV9OQU1FIiwiVmFsaWRhdGlvblByb3ZpZGVyIiwidXNlVmFsaWRhdGlvbkNvbnRleHQiLCJBcmlhRGVzY3JpcHRpb25Qcm92aWRlciIsInVzZUFyaWFEZXNjcmlwdGlvbkNvbnRleHQiLCJGb3JtIiwiZm9yd2FyZFJlZiIsInByb3BzIiwiZm9yd2FyZGVkUmVmIiwiX19zY29wZUZvcm0iLCJvbkNsZWFyU2VydmVyRXJyb3JzIiwicm9vdFByb3BzIiwiZm9ybVJlZiIsInVzZVJlZiIsImNvbXBvc2VkRm9ybVJlZiIsInZhbGlkaXR5TWFwIiwic2V0VmFsaWRpdHlNYXAiLCJ1c2VTdGF0ZSIsImdldEZpZWxkVmFsaWRpdHkiLCJ1c2VDYWxsYmFjayIsImZpZWxkTmFtZSIsImhhbmRsZUZpZWxkVmFsaWRpdHlDaGFuZ2UiLCJ2YWxpZGl0eSIsInByZXZWYWxpZGl0eU1hcCIsImhhbmRsZUZpZWxkVmFsaWRpdGlvbkNsZWFyIiwic2V0Q3VzdG9tRXJyb3JzTWFwIiwicHJldkN1c3RvbUVycm9yc01hcCIsImN1c3RvbU1hdGNoZXJFbnRyaWVzTWFwIiwic2V0Q3VzdG9tTWF0Y2hlckVudHJpZXNNYXAiLCJnZXRGaWVsZEN1c3RvbU1hdGNoZXJFbnRyaWVzIiwiaGFuZGxlRmllbGRDdXN0b21NYXRjaGVyQWRkIiwibWF0Y2hlckVudHJ5IiwicHJldkN1c3RvbU1hdGNoZXJFbnRyaWVzTWFwIiwiaGFuZGxlRmllbGRDdXN0b21NYXRjaGVyUmVtb3ZlIiwibWF0Y2hlckVudHJ5SWQiLCJmaWx0ZXIiLCJpZCIsImN1c3RvbUVycm9yc01hcCIsImdldEZpZWxkQ3VzdG9tRXJyb3JzIiwiaGFuZGxlRmllbGRDdXN0b21FcnJvcnNDaGFuZ2UiLCJjdXN0b21FcnJvcnMiLCJtZXNzYWdlSWRzTWFwIiwic2V0TWVzc2FnZUlkc01hcCIsImhhbmRsZUZpZWxkTWVzc2FnZUlkQWRkIiwicHJldk1lc3NhZ2VJZHNNYXAiLCJmaWVsZERlc2NyaXB0aW9uSWRzIiwiU2V0IiwiYWRkIiwiaGFuZGxlRmllbGRNZXNzYWdlSWRSZW1vdmUiLCJkZWxldGUiLCJnZXRGaWVsZERlc2NyaXB0aW9uIiwiQXJyYXkiLCJmcm9tIiwiam9pbiIsInNjb3BlIiwib25GaWVsZFZhbGlkaXR5Q2hhbmdlIiwib25GaWVsZEN1c3RvbU1hdGNoZXJFbnRyeUFkZCIsIm9uRmllbGRDdXN0b21NYXRjaGVyRW50cnlSZW1vdmUiLCJvbkZpZWxkQ3VzdG9tRXJyb3JzQ2hhbmdlIiwib25GaWVsZFZhbGlkaXRpb25DbGVhciIsImNoaWxkcmVuIiwib25GaWVsZE1lc3NhZ2VJZEFkZCIsIm9uRmllbGRNZXNzYWdlSWRSZW1vdmUiLCJmb3JtIiwicmVmIiwib25JbnZhbGlkIiwiZXZlbnQiLCJmaXJzdEludmFsaWRDb250cm9sIiwiZ2V0Rmlyc3RJbnZhbGlkQ29udHJvbCIsImN1cnJlbnRUYXJnZXQiLCJ0YXJnZXQiLCJmb2N1cyIsInByZXZlbnREZWZhdWx0Iiwib25TdWJtaXQiLCJjaGVja0ZvckRlZmF1bHRQcmV2ZW50ZWQiLCJvblJlc2V0IiwiZGlzcGxheU5hbWUiLCJGSUVMRF9OQU1FIiwiRm9ybUZpZWxkUHJvdmlkZXIiLCJ1c2VGb3JtRmllbGRDb250ZXh0IiwiRm9ybUZpZWxkIiwibmFtZSIsInNlcnZlckludmFsaWQiLCJmaWVsZFByb3BzIiwidmFsaWRhdGlvbkNvbnRleHQiLCJkaXYiLCJnZXRWYWxpZEF0dHJpYnV0ZSIsImdldEludmFsaWRBdHRyaWJ1dGUiLCJMQUJFTF9OQU1FIiwiRm9ybUxhYmVsIiwibGFiZWxQcm9wcyIsImZpZWxkQ29udGV4dCIsImh0bWxGb3IiLCJDT05UUk9MX05BTUUiLCJGb3JtQ29udHJvbCIsImNvbnRyb2xQcm9wcyIsImFyaWFEZXNjcmlwdGlvbkNvbnRleHQiLCJjb21wb3NlZFJlZiIsImN1c3RvbU1hdGNoZXJFbnRyaWVzIiwidXBkYXRlQ29udHJvbFZhbGlkaXR5IiwiY29udHJvbCIsImhhc0J1aWx0SW5FcnJvciIsImNvbnRyb2xWYWxpZGl0eSIsInZhbGlkaXR5U3RhdGVUb09iamVjdCIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJtYXRjaGVyQXJncyIsInZhbHVlIiwic3luY0N1c3RvbU1hdGNoZXJFbnRyaWVzIiwiYXluY0N1c3RvbU1hdGNoZXJFbnRyaWVzIiwiZm9yRWFjaCIsImN1c3RvbU1hdGNoZXJFbnRyeSIsImlzQXN5bmNDdXN0b21NYXRjaGVyRW50cnkiLCJwdXNoIiwiaXNTeW5jQ3VzdG9tTWF0Y2hlckVudHJ5Iiwic3luY0N1c3RvbUVycm9ycyIsIm1hcCIsIm1hdGNoIiwic3luY0N1c3RvbUVycm9yc0J5SWQiLCJPYmplY3QiLCJmcm9tRW50cmllcyIsImhhc1N5bmNDdXN0b21FcnJvcnMiLCJ2YWx1ZXMiLCJzb21lIiwiQm9vbGVhbiIsImhhc0N1c3RvbUVycm9yIiwic2V0Q3VzdG9tVmFsaWRpdHkiLCJERUZBVUxUX0lOVkFMSURfTUVTU0FHRSIsImxlbmd0aCIsInByb21pc2VkQ3VzdG9tRXJyb3JzIiwidGhlbiIsIm1hdGNoZXMiLCJhc3luY0N1c3RvbUVycm9ycyIsIlByb21pc2UiLCJhbGwiLCJhc3luY0N1c3RvbUVycm9yc0J5SWQiLCJoYXNBc3luY0N1c3RvbUVycm9ycyIsInVzZUVmZmVjdCIsImN1cnJlbnQiLCJoYW5kbGVDaGFuZ2UiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlc2V0Q29udHJvbFZhbGlkaXR5IiwiY2xvc2VzdCIsImlucHV0IiwidGl0bGUiLCJvbkNoYW5nZSIsIkRFRkFVTFRfQlVJTFRfSU5fTUVTU0FHRVMiLCJiYWRJbnB1dCIsInBhdHRlcm5NaXNtYXRjaCIsInJhbmdlT3ZlcmZsb3ciLCJyYW5nZVVuZGVyZmxvdyIsInN0ZXBNaXNtYXRjaCIsInRvb0xvbmciLCJ0b29TaG9ydCIsInR5cGVNaXNtYXRjaCIsInZhbGlkIiwidmFsdWVNaXNzaW5nIiwiTUVTU0FHRV9OQU1FIiwiRm9ybU1lc3NhZ2UiLCJuYW1lUHJvcCIsIm1lc3NhZ2VQcm9wcyIsIkZvcm1NZXNzYWdlSW1wbCIsIkZvcm1DdXN0b21NZXNzYWdlIiwiRm9ybUJ1aWx0SW5NZXNzYWdlIiwiZm9yY2VNYXRjaCIsImlkUHJvcCIsIl9pZCIsInVzZU1lbW8iLCJoYXNNYXRjaGluZ0N1c3RvbUVycm9yIiwic3BhbiIsIlZBTElESVRZX1NUQVRFX05BTUUiLCJGb3JtVmFsaWRpdHlTdGF0ZSIsIlNVQk1JVF9OQU1FIiwiRm9ybVN1Ym1pdCIsInN1Ym1pdFByb3BzIiwiYnV0dG9uIiwidHlwZSIsIm9iamVjdCIsImtleSIsImlzSFRNTEVsZW1lbnQiLCJlbGVtZW50IiwiSFRNTEVsZW1lbnQiLCJpc0Zvcm1Db250cm9sIiwiaXNJbnZhbGlkIiwiZ2V0QXR0cmlidXRlIiwiZWxlbWVudHMiLCJlbnRyeSIsImFyZ3MiLCJjb25zdHJ1Y3RvciIsInJldHVybnNQcm9taXNlIiwiZnVuYyIsImVycm9yIiwidmFsaWRpdHlLZXkiLCJSb290IiwiRmllbGQiLCJDb250cm9sIiwiTWVzc2FnZSIsIlZhbGlkaXR5U3RhdGUiLCJTdWJtaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-form/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-id/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@radix-ui/react-id/dist/index.mjs ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useId: function() { return /* binding */ useId; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n// packages/react/id/src/id.tsx\n\n\nvar useReactId = /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))[\"useId\".toString()] || (() => void 0);\nvar count = 0;\nfunction useId(deterministicId) {\n  const [id, setId] = react__WEBPACK_IMPORTED_MODULE_0__.useState(useReactId());\n  (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : \"\");\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtaWQvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQytCO0FBQ3FDO0FBQ3BFLGlCQUFpQix5TEFBSztBQUN0QjtBQUNBO0FBQ0Esc0JBQXNCLDJDQUFjO0FBQ3BDLEVBQUUsa0ZBQWU7QUFDakI7QUFDQSxHQUFHO0FBQ0gsMkNBQTJDLEdBQUc7QUFDOUM7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtaWQvZGlzdC9pbmRleC5tanM/MzcyNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC9pZC9zcmMvaWQudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUxheW91dEVmZmVjdCB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtdXNlLWxheW91dC1lZmZlY3RcIjtcbnZhciB1c2VSZWFjdElkID0gUmVhY3RbXCJ1c2VJZFwiLnRvU3RyaW5nKCldIHx8ICgoKSA9PiB2b2lkIDApO1xudmFyIGNvdW50ID0gMDtcbmZ1bmN0aW9uIHVzZUlkKGRldGVybWluaXN0aWNJZCkge1xuICBjb25zdCBbaWQsIHNldElkXSA9IFJlYWN0LnVzZVN0YXRlKHVzZVJlYWN0SWQoKSk7XG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFkZXRlcm1pbmlzdGljSWQpIHNldElkKChyZWFjdElkKSA9PiByZWFjdElkID8/IFN0cmluZyhjb3VudCsrKSk7XG4gIH0sIFtkZXRlcm1pbmlzdGljSWRdKTtcbiAgcmV0dXJuIGRldGVybWluaXN0aWNJZCB8fCAoaWQgPyBgcmFkaXgtJHtpZH1gIDogXCJcIik7XG59XG5leHBvcnQge1xuICB1c2VJZFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-id/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-label/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@radix-ui/react-label/dist/index.mjs ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Label: function() { return /* binding */ Label; },\n/* harmony export */   Root: function() { return /* binding */ Root; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Label,Root auto */ // packages/react/label/src/Label.tsx\n\n\n\nvar NAME = \"Label\";\nvar Label = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = (props, forwardedRef)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__.Primitive.label, {\n        ...props,\n        ref: forwardedRef,\n        onMouseDown: (event)=>{\n            var _props_onMouseDown;\n            const target = event.target;\n            if (target.closest(\"button, input, select, textarea\")) return;\n            (_props_onMouseDown = props.onMouseDown) === null || _props_onMouseDown === void 0 ? void 0 : _props_onMouseDown.call(props, event);\n            if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n        }\n    });\n});\n_c1 = Label;\nLabel.displayName = NAME;\nvar Root = Label;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Label$React.forwardRef\");\n$RefreshReg$(_c1, \"Label\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtbGFiZWwvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVCO0FBQ0c7QUFjdEI7QUFSSixJQUFNRyxPQUFPO0FBTWIsSUFBTUMsc0JBQWNKLDZDQUFBLE1BQXFDLENBQUNNLE9BQU9DO0lBQy9ELE9BQ0UsZ0JBQUFMLHNEQUFBQSxDQUFDRCxnRUFBU0EsQ0FBQ08sS0FBQSxFQUFWO1FBQ0UsR0FBR0YsS0FBQTtRQUNKRyxLQUFLRjtRQUNMRyxhQUFhLENBQUNDO2dCQUtaTDtZQUhBLE1BQU1NLFNBQVNELE1BQU1DLE1BQUE7WUFDckIsSUFBSUEsT0FBT0MsT0FBQSxDQUFRLG9DQUFvQzthQUV2RFAscUJBQUFBLE1BQU1JLFdBQUEsY0FBTkoseUNBQUFBLHdCQUFBQSxPQUFvQks7WUFFcEIsSUFBSSxDQUFDQSxNQUFNRyxnQkFBQSxJQUFvQkgsTUFBTUksTUFBQSxHQUFTLEdBQUdKLE1BQU1LLGNBQUE7UUFDekQ7SUFBQTtBQUdOOztBQUVBWixNQUFNYSxXQUFBLEdBQWNkO0FBSXBCLElBQU1lLE9BQU9kIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvTGFiZWwudHN4PzhiYWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUHJpbWl0aXZlIH0gZnJvbSAnQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZSc7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIExhYmVsXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmNvbnN0IE5BTUUgPSAnTGFiZWwnO1xuXG50eXBlIExhYmVsRWxlbWVudCA9IFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFByaW1pdGl2ZS5sYWJlbD47XG50eXBlIFByaW1pdGl2ZUxhYmVsUHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFByaW1pdGl2ZS5sYWJlbD47XG5pbnRlcmZhY2UgTGFiZWxQcm9wcyBleHRlbmRzIFByaW1pdGl2ZUxhYmVsUHJvcHMge31cblxuY29uc3QgTGFiZWwgPSBSZWFjdC5mb3J3YXJkUmVmPExhYmVsRWxlbWVudCwgTGFiZWxQcm9wcz4oKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8UHJpbWl0aXZlLmxhYmVsXG4gICAgICB7Li4ucHJvcHN9XG4gICAgICByZWY9e2ZvcndhcmRlZFJlZn1cbiAgICAgIG9uTW91c2VEb3duPXsoZXZlbnQpID0+IHtcbiAgICAgICAgLy8gb25seSBwcmV2ZW50IHRleHQgc2VsZWN0aW9uIGlmIGNsaWNraW5nIGluc2lkZSB0aGUgbGFiZWwgaXRzZWxmXG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldCBhcyBIVE1MRWxlbWVudDtcbiAgICAgICAgaWYgKHRhcmdldC5jbG9zZXN0KCdidXR0b24sIGlucHV0LCBzZWxlY3QsIHRleHRhcmVhJykpIHJldHVybjtcblxuICAgICAgICBwcm9wcy5vbk1vdXNlRG93bj8uKGV2ZW50KTtcbiAgICAgICAgLy8gcHJldmVudCB0ZXh0IHNlbGVjdGlvbiB3aGVuIGRvdWJsZSBjbGlja2luZyBsYWJlbFxuICAgICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgZXZlbnQuZGV0YWlsID4gMSkgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH19XG4gICAgLz5cbiAgKTtcbn0pO1xuXG5MYWJlbC5kaXNwbGF5TmFtZSA9IE5BTUU7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuY29uc3QgUm9vdCA9IExhYmVsO1xuXG5leHBvcnQge1xuICBMYWJlbCxcbiAgLy9cbiAgUm9vdCxcbn07XG5leHBvcnQgdHlwZSB7IExhYmVsUHJvcHMgfTtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlByaW1pdGl2ZSIsImpzeCIsIk5BTUUiLCJMYWJlbCIsImZvcndhcmRSZWYiLCJwcm9wcyIsImZvcndhcmRlZFJlZiIsImxhYmVsIiwicmVmIiwib25Nb3VzZURvd24iLCJldmVudCIsInRhcmdldCIsImNsb3Nlc3QiLCJkZWZhdWx0UHJldmVudGVkIiwiZGV0YWlsIiwicHJldmVudERlZmF1bHQiLCJkaXNwbGF5TmFtZSIsIlJvb3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-label/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@radix-ui/react-primitive/dist/index.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Primitive: function() { return /* binding */ Primitive; },\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   dispatchDiscreteCustomEvent: function() { return /* binding */ dispatchDiscreteCustomEvent; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/primitive/src/Primitive.tsx\n\n\n\n\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Node = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__.Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUNPO0FBQ007QUFDSjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkNBQWdCO0FBQy9CLFlBQVksNkJBQTZCO0FBQ3pDLDJCQUEyQixzREFBSTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsc0RBQUcsU0FBUyxzQ0FBc0M7QUFDN0UsR0FBRztBQUNILGtDQUFrQyxLQUFLO0FBQ3ZDLFdBQVc7QUFDWCxDQUFDLElBQUk7QUFDTDtBQUNBLGNBQWMsZ0RBQWtCO0FBQ2hDO0FBQ0E7QUFLRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzPzEzYTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvcHJpbWl0aXZlL3NyYy9QcmltaXRpdmUudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcbmltcG9ydCB7IFNsb3QgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXNsb3RcIjtcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xudmFyIE5PREVTID0gW1xuICBcImFcIixcbiAgXCJidXR0b25cIixcbiAgXCJkaXZcIixcbiAgXCJmb3JtXCIsXG4gIFwiaDJcIixcbiAgXCJoM1wiLFxuICBcImltZ1wiLFxuICBcImlucHV0XCIsXG4gIFwibGFiZWxcIixcbiAgXCJsaVwiLFxuICBcIm5hdlwiLFxuICBcIm9sXCIsXG4gIFwicFwiLFxuICBcInNwYW5cIixcbiAgXCJzdmdcIixcbiAgXCJ1bFwiXG5dO1xudmFyIFByaW1pdGl2ZSA9IE5PREVTLnJlZHVjZSgocHJpbWl0aXZlLCBub2RlKSA9PiB7XG4gIGNvbnN0IE5vZGUgPSBSZWFjdC5mb3J3YXJkUmVmKChwcm9wcywgZm9yd2FyZGVkUmVmKSA9PiB7XG4gICAgY29uc3QgeyBhc0NoaWxkLCAuLi5wcmltaXRpdmVQcm9wcyB9ID0gcHJvcHM7XG4gICAgY29uc3QgQ29tcCA9IGFzQ2hpbGQgPyBTbG90IDogbm9kZTtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgd2luZG93W1N5bWJvbC5mb3IoXCJyYWRpeC11aVwiKV0gPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChDb21wLCB7IC4uLnByaW1pdGl2ZVByb3BzLCByZWY6IGZvcndhcmRlZFJlZiB9KTtcbiAgfSk7XG4gIE5vZGUuZGlzcGxheU5hbWUgPSBgUHJpbWl0aXZlLiR7bm9kZX1gO1xuICByZXR1cm4geyAuLi5wcmltaXRpdmUsIFtub2RlXTogTm9kZSB9O1xufSwge30pO1xuZnVuY3Rpb24gZGlzcGF0Y2hEaXNjcmV0ZUN1c3RvbUV2ZW50KHRhcmdldCwgZXZlbnQpIHtcbiAgaWYgKHRhcmdldCkgUmVhY3RET00uZmx1c2hTeW5jKCgpID0+IHRhcmdldC5kaXNwYXRjaEV2ZW50KGV2ZW50KSk7XG59XG52YXIgUm9vdCA9IFByaW1pdGl2ZTtcbmV4cG9ydCB7XG4gIFByaW1pdGl2ZSxcbiAgUm9vdCxcbiAgZGlzcGF0Y2hEaXNjcmV0ZUN1c3RvbUV2ZW50XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@radix-ui/react-slot/dist/index.mjs ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   Slot: function() { return /* binding */ Slot; },\n/* harmony export */   Slottable: function() { return /* binding */ Slottable; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/slot/src/Slot.tsx\n\n\n\nvar Slot = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (react__WEBPACK_IMPORTED_MODULE_0__.Children.count(newElement) > 1) return react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null);\n        return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children: react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(forwardedRef, childrenRef) : childrenRef\n    });\n  }\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) > 1 ? react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children });\n};\nfunction isSlottable(child) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3Qtc2xvdC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUM0QjtBQUNUO0FBQ2xELFdBQVcsNkNBQWdCO0FBQzNCLFVBQVUseUJBQXlCO0FBQ25DLHdCQUF3QiwyQ0FBYztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQ0FBYywrQkFBK0IsMkNBQWM7QUFDdkUsZUFBZSxpREFBb0I7QUFDbkMsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMkJBQTJCLHNEQUFHLGNBQWMsMkNBQTJDLGlEQUFvQixlQUFlLCtDQUFrQiwwQ0FBMEM7QUFDdEw7QUFDQSx5QkFBeUIsc0RBQUcsY0FBYywyQ0FBMkM7QUFDckYsQ0FBQztBQUNEO0FBQ0EsZ0JBQWdCLDZDQUFnQjtBQUNoQyxVQUFVLHlCQUF5QjtBQUNuQyxNQUFNLGlEQUFvQjtBQUMxQjtBQUNBLFdBQVcsK0NBQWtCO0FBQzdCO0FBQ0E7QUFDQSwwQkFBMEIseUVBQVc7QUFDckMsS0FBSztBQUNMO0FBQ0EsU0FBUywyQ0FBYyx1QkFBdUIsMkNBQWM7QUFDNUQsQ0FBQztBQUNEO0FBQ0EsbUJBQW1CLFVBQVU7QUFDN0IseUJBQXlCLHNEQUFHLENBQUMsdURBQVEsSUFBSSxVQUFVO0FBQ25EO0FBQ0E7QUFDQSxTQUFTLGlEQUFvQjtBQUM3QjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ04sa0NBQWtDO0FBQ2xDLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LXNsb3QvZGlzdC9pbmRleC5tanM/NjUzZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC9zbG90L3NyYy9TbG90LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb21wb3NlUmVmcyB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzXCI7XG5pbXBvcnQgeyBGcmFnbWVudCwganN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG52YXIgU2xvdCA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgY29uc3QgeyBjaGlsZHJlbiwgLi4uc2xvdFByb3BzIH0gPSBwcm9wcztcbiAgY29uc3QgY2hpbGRyZW5BcnJheSA9IFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoY2hpbGRyZW4pO1xuICBjb25zdCBzbG90dGFibGUgPSBjaGlsZHJlbkFycmF5LmZpbmQoaXNTbG90dGFibGUpO1xuICBpZiAoc2xvdHRhYmxlKSB7XG4gICAgY29uc3QgbmV3RWxlbWVudCA9IHNsb3R0YWJsZS5wcm9wcy5jaGlsZHJlbjtcbiAgICBjb25zdCBuZXdDaGlsZHJlbiA9IGNoaWxkcmVuQXJyYXkubWFwKChjaGlsZCkgPT4ge1xuICAgICAgaWYgKGNoaWxkID09PSBzbG90dGFibGUpIHtcbiAgICAgICAgaWYgKFJlYWN0LkNoaWxkcmVuLmNvdW50KG5ld0VsZW1lbnQpID4gMSkgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLm9ubHkobnVsbCk7XG4gICAgICAgIHJldHVybiBSZWFjdC5pc1ZhbGlkRWxlbWVudChuZXdFbGVtZW50KSA/IG5ld0VsZW1lbnQucHJvcHMuY2hpbGRyZW4gOiBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFNsb3RDbG9uZSwgeyAuLi5zbG90UHJvcHMsIHJlZjogZm9yd2FyZGVkUmVmLCBjaGlsZHJlbjogUmVhY3QuaXNWYWxpZEVsZW1lbnQobmV3RWxlbWVudCkgPyBSZWFjdC5jbG9uZUVsZW1lbnQobmV3RWxlbWVudCwgdm9pZCAwLCBuZXdDaGlsZHJlbikgOiBudWxsIH0pO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFNsb3RDbG9uZSwgeyAuLi5zbG90UHJvcHMsIHJlZjogZm9yd2FyZGVkUmVmLCBjaGlsZHJlbiB9KTtcbn0pO1xuU2xvdC5kaXNwbGF5TmFtZSA9IFwiU2xvdFwiO1xudmFyIFNsb3RDbG9uZSA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgY29uc3QgeyBjaGlsZHJlbiwgLi4uc2xvdFByb3BzIH0gPSBwcm9wcztcbiAgaWYgKFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkcmVuKSkge1xuICAgIGNvbnN0IGNoaWxkcmVuUmVmID0gZ2V0RWxlbWVudFJlZihjaGlsZHJlbik7XG4gICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZHJlbiwge1xuICAgICAgLi4ubWVyZ2VQcm9wcyhzbG90UHJvcHMsIGNoaWxkcmVuLnByb3BzKSxcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHJlZjogZm9yd2FyZGVkUmVmID8gY29tcG9zZVJlZnMoZm9yd2FyZGVkUmVmLCBjaGlsZHJlblJlZikgOiBjaGlsZHJlblJlZlxuICAgIH0pO1xuICB9XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPiAxID8gUmVhY3QuQ2hpbGRyZW4ub25seShudWxsKSA6IG51bGw7XG59KTtcblNsb3RDbG9uZS5kaXNwbGF5TmFtZSA9IFwiU2xvdENsb25lXCI7XG52YXIgU2xvdHRhYmxlID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChGcmFnbWVudCwgeyBjaGlsZHJlbiB9KTtcbn07XG5mdW5jdGlvbiBpc1Nsb3R0YWJsZShjaGlsZCkge1xuICByZXR1cm4gUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpICYmIGNoaWxkLnR5cGUgPT09IFNsb3R0YWJsZTtcbn1cbmZ1bmN0aW9uIG1lcmdlUHJvcHMoc2xvdFByb3BzLCBjaGlsZFByb3BzKSB7XG4gIGNvbnN0IG92ZXJyaWRlUHJvcHMgPSB7IC4uLmNoaWxkUHJvcHMgfTtcbiAgZm9yIChjb25zdCBwcm9wTmFtZSBpbiBjaGlsZFByb3BzKSB7XG4gICAgY29uc3Qgc2xvdFByb3BWYWx1ZSA9IHNsb3RQcm9wc1twcm9wTmFtZV07XG4gICAgY29uc3QgY2hpbGRQcm9wVmFsdWUgPSBjaGlsZFByb3BzW3Byb3BOYW1lXTtcbiAgICBjb25zdCBpc0hhbmRsZXIgPSAvXm9uW0EtWl0vLnRlc3QocHJvcE5hbWUpO1xuICAgIGlmIChpc0hhbmRsZXIpIHtcbiAgICAgIGlmIChzbG90UHJvcFZhbHVlICYmIGNoaWxkUHJvcFZhbHVlKSB7XG4gICAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICBjaGlsZFByb3BWYWx1ZSguLi5hcmdzKTtcbiAgICAgICAgICBzbG90UHJvcFZhbHVlKC4uLmFyZ3MpO1xuICAgICAgICB9O1xuICAgICAgfSBlbHNlIGlmIChzbG90UHJvcFZhbHVlKSB7XG4gICAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gc2xvdFByb3BWYWx1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHByb3BOYW1lID09PSBcInN0eWxlXCIpIHtcbiAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0geyAuLi5zbG90UHJvcFZhbHVlLCAuLi5jaGlsZFByb3BWYWx1ZSB9O1xuICAgIH0gZWxzZSBpZiAocHJvcE5hbWUgPT09IFwiY2xhc3NOYW1lXCIpIHtcbiAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gW3Nsb3RQcm9wVmFsdWUsIGNoaWxkUHJvcFZhbHVlXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG4gICAgfVxuICB9XG4gIHJldHVybiB7IC4uLnNsb3RQcm9wcywgLi4ub3ZlcnJpZGVQcm9wcyB9O1xufVxuZnVuY3Rpb24gZ2V0RWxlbWVudFJlZihlbGVtZW50KSB7XG4gIGxldCBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGVsZW1lbnQucHJvcHMsIFwicmVmXCIpPy5nZXQ7XG4gIGxldCBtYXlXYXJuID0gZ2V0dGVyICYmIFwiaXNSZWFjdFdhcm5pbmdcIiBpbiBnZXR0ZXIgJiYgZ2V0dGVyLmlzUmVhY3RXYXJuaW5nO1xuICBpZiAobWF5V2Fybikge1xuICAgIHJldHVybiBlbGVtZW50LnJlZjtcbiAgfVxuICBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGVsZW1lbnQsIFwicmVmXCIpPy5nZXQ7XG4gIG1heVdhcm4gPSBnZXR0ZXIgJiYgXCJpc1JlYWN0V2FybmluZ1wiIGluIGdldHRlciAmJiBnZXR0ZXIuaXNSZWFjdFdhcm5pbmc7XG4gIGlmIChtYXlXYXJuKSB7XG4gICAgcmV0dXJuIGVsZW1lbnQucHJvcHMucmVmO1xuICB9XG4gIHJldHVybiBlbGVtZW50LnByb3BzLnJlZiB8fCBlbGVtZW50LnJlZjtcbn1cbnZhciBSb290ID0gU2xvdDtcbmV4cG9ydCB7XG4gIFJvb3QsXG4gIFNsb3QsXG4gIFNsb3R0YWJsZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLayoutEffect: function() { return /* binding */ useLayoutEffect2; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/use-layout-effect/src/useLayoutEffect.tsx\n\nvar useLayoutEffect2 = Boolean(globalThis?.document) ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : () => {\n};\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWxheW91dC1lZmZlY3QvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUMrQjtBQUMvQix1REFBdUQsa0RBQXFCO0FBQzVFO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LXVzZS1sYXlvdXQtZWZmZWN0L2Rpc3QvaW5kZXgubWpzP2M0ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvdXNlLWxheW91dC1lZmZlY3Qvc3JjL3VzZUxheW91dEVmZmVjdC50c3hcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xudmFyIHVzZUxheW91dEVmZmVjdDIgPSBCb29sZWFuKGdsb2JhbFRoaXM/LmRvY3VtZW50KSA/IFJlYWN0LnVzZUxheW91dEVmZmVjdCA6ICgpID0+IHtcbn07XG5leHBvcnQge1xuICB1c2VMYXlvdXRFZmZlY3QyIGFzIHVzZUxheW91dEVmZmVjdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/dist/_internal/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/swr/dist/_internal/index.mjs ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INFINITE_PREFIX: function() { return /* binding */ INFINITE_PREFIX; },\n/* harmony export */   IS_REACT_LEGACY: function() { return /* binding */ IS_REACT_LEGACY; },\n/* harmony export */   IS_SERVER: function() { return /* binding */ IS_SERVER; },\n/* harmony export */   OBJECT: function() { return /* binding */ OBJECT; },\n/* harmony export */   SWRConfig: function() { return /* binding */ SWRConfig; },\n/* harmony export */   SWRGlobalState: function() { return /* binding */ SWRGlobalState; },\n/* harmony export */   UNDEFINED: function() { return /* binding */ UNDEFINED; },\n/* harmony export */   cache: function() { return /* binding */ cache; },\n/* harmony export */   compare: function() { return /* binding */ compare; },\n/* harmony export */   createCacheHelper: function() { return /* binding */ createCacheHelper; },\n/* harmony export */   defaultConfig: function() { return /* binding */ defaultConfig; },\n/* harmony export */   defaultConfigOptions: function() { return /* binding */ defaultConfigOptions; },\n/* harmony export */   getTimestamp: function() { return /* binding */ getTimestamp; },\n/* harmony export */   hasRequestAnimationFrame: function() { return /* binding */ hasRequestAnimationFrame; },\n/* harmony export */   initCache: function() { return /* binding */ initCache; },\n/* harmony export */   internalMutate: function() { return /* binding */ internalMutate; },\n/* harmony export */   isDocumentDefined: function() { return /* binding */ isDocumentDefined; },\n/* harmony export */   isFunction: function() { return /* binding */ isFunction; },\n/* harmony export */   isPromiseLike: function() { return /* binding */ isPromiseLike; },\n/* harmony export */   isUndefined: function() { return /* binding */ isUndefined; },\n/* harmony export */   isWindowDefined: function() { return /* binding */ isWindowDefined; },\n/* harmony export */   mergeConfigs: function() { return /* binding */ mergeConfigs; },\n/* harmony export */   mergeObjects: function() { return /* binding */ mergeObjects; },\n/* harmony export */   mutate: function() { return /* binding */ mutate; },\n/* harmony export */   noop: function() { return /* binding */ noop; },\n/* harmony export */   normalize: function() { return /* binding */ normalize; },\n/* harmony export */   preload: function() { return /* binding */ preload; },\n/* harmony export */   preset: function() { return /* binding */ preset; },\n/* harmony export */   rAF: function() { return /* binding */ rAF; },\n/* harmony export */   revalidateEvents: function() { return /* binding */ events; },\n/* harmony export */   serialize: function() { return /* binding */ serialize; },\n/* harmony export */   slowConnection: function() { return /* binding */ slowConnection; },\n/* harmony export */   stableHash: function() { return /* binding */ stableHash; },\n/* harmony export */   subscribeCallback: function() { return /* binding */ subscribeCallback; },\n/* harmony export */   useIsomorphicLayoutEffect: function() { return /* binding */ useIsomorphicLayoutEffect; },\n/* harmony export */   useSWRConfig: function() { return /* binding */ useSWRConfig; },\n/* harmony export */   withArgs: function() { return /* binding */ withArgs; },\n/* harmony export */   withMiddleware: function() { return /* binding */ withMiddleware; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n\n// Shared state between server components and client components\nconst noop = ()=>{};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nconst UNDEFINED = /*#__NOINLINE__*/ noop();\nconst OBJECT = Object;\nconst isUndefined = (v)=>v === UNDEFINED;\nconst isFunction = (v)=>typeof v == 'function';\nconst mergeObjects = (a, b)=>({\n        ...a,\n        ...b\n    });\nconst isPromiseLike = (x)=>isFunction(x.then);\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\n// counter of the key\nlet counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nconst stableHash = (arg)=>{\n    const type = typeof arg;\n    const constructor = arg && arg.constructor;\n    const isDate = constructor == Date;\n    let result;\n    let index;\n    if (OBJECT(arg) === arg && !isDate && constructor != RegExp) {\n        // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n        // If it's already hashed, directly return the result.\n        result = table.get(arg);\n        if (result) return result;\n        // Store the hash first for circular reference detection before entering the\n        // recursive `stableHash` calls.\n        // For other objects like set and map, we use this id directly as the hash.\n        result = ++counter + '~';\n        table.set(arg, result);\n        if (constructor == Array) {\n            // Array.\n            result = '@';\n            for(index = 0; index < arg.length; index++){\n                result += stableHash(arg[index]) + ',';\n            }\n            table.set(arg, result);\n        }\n        if (constructor == OBJECT) {\n            // Object, sort keys.\n            result = '#';\n            const keys = OBJECT.keys(arg).sort();\n            while(!isUndefined(index = keys.pop())){\n                if (!isUndefined(arg[index])) {\n                    result += index + ':' + stableHash(arg[index]) + ',';\n                }\n            }\n            table.set(arg, result);\n        }\n    } else {\n        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n    }\n    return result;\n};\n\n// Global state used to deduplicate requests and store listeners\nconst SWRGlobalState = new WeakMap();\n\nconst EMPTY_CACHE = {};\nconst INITIAL_CACHE = {};\nconst STR_UNDEFINED = 'undefined';\n// NOTE: Use the function to guarantee it's re-evaluated between jsdom and node runtime for tests.\nconst isWindowDefined = typeof window != STR_UNDEFINED;\nconst isDocumentDefined = typeof document != STR_UNDEFINED;\nconst hasRequestAnimationFrame = ()=>isWindowDefined && typeof window['requestAnimationFrame'] != STR_UNDEFINED;\nconst createCacheHelper = (cache, key)=>{\n    const state = SWRGlobalState.get(cache);\n    return [\n        // Getter\n        ()=>!isUndefined(key) && cache.get(key) || EMPTY_CACHE,\n        // Setter\n        (info)=>{\n            if (!isUndefined(key)) {\n                const prev = cache.get(key);\n                // Before writing to the store, we keep the value in the initial cache\n                // if it's not there yet.\n                if (!(key in INITIAL_CACHE)) {\n                    INITIAL_CACHE[key] = prev;\n                }\n                state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE);\n            }\n        },\n        // Subscriber\n        state[6],\n        // Get server cache snapshot\n        ()=>{\n            if (!isUndefined(key)) {\n                // If the cache was updated on the client, we return the stored initial value.\n                if (key in INITIAL_CACHE) return INITIAL_CACHE[key];\n            }\n            // If we haven't done any client-side updates, we return the current value.\n            return !isUndefined(key) && cache.get(key) || EMPTY_CACHE;\n        }\n    ];\n} // export { UNDEFINED, OBJECT, isUndefined, isFunction, mergeObjects, isPromiseLike }\n;\n\n/**\n * Due to the bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a workaround, we always assume it's online on the first load, and change\n * the status upon `online` or `offline` events.\n */ let online = true;\nconst isOnline = ()=>online;\n// For node and React Native, `add/removeEventListener` doesn't exist on window.\nconst [onWindowEvent, offWindowEvent] = isWindowDefined && window.addEventListener ? [\n    window.addEventListener.bind(window),\n    window.removeEventListener.bind(window)\n] : [\n    noop,\n    noop\n];\nconst isVisible = ()=>{\n    const visibilityState = isDocumentDefined && document.visibilityState;\n    return isUndefined(visibilityState) || visibilityState !== 'hidden';\n};\nconst initFocus = (callback)=>{\n    // focus revalidate\n    if (isDocumentDefined) {\n        document.addEventListener('visibilitychange', callback);\n    }\n    onWindowEvent('focus', callback);\n    return ()=>{\n        if (isDocumentDefined) {\n            document.removeEventListener('visibilitychange', callback);\n        }\n        offWindowEvent('focus', callback);\n    };\n};\nconst initReconnect = (callback)=>{\n    // revalidate on reconnected\n    const onOnline = ()=>{\n        online = true;\n        callback();\n    };\n    // nothing to revalidate, just update the status\n    const onOffline = ()=>{\n        online = false;\n    };\n    onWindowEvent('online', onOnline);\n    onWindowEvent('offline', onOffline);\n    return ()=>{\n        offWindowEvent('online', onOnline);\n        offWindowEvent('offline', onOffline);\n    };\n};\nconst preset = {\n    isOnline,\n    isVisible\n};\nconst defaultConfigOptions = {\n    initFocus,\n    initReconnect\n};\n\nconst IS_REACT_LEGACY = !react__WEBPACK_IMPORTED_MODULE_0__.useId;\nconst IS_SERVER = !isWindowDefined || 'Deno' in window;\n// Polyfill requestAnimationFrame\nconst rAF = (f)=>hasRequestAnimationFrame() ? window['requestAnimationFrame'](f) : setTimeout(f, 1);\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? react__WEBPACK_IMPORTED_MODULE_0__.useEffect : react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;\n// This assignment is to extend the Navigator type to use effectiveType.\nconst navigatorConnection = typeof navigator !== 'undefined' && navigator.connection;\n// Adjust the config based on slow connection status (<= 70Kbps).\nconst slowConnection = !IS_SERVER && navigatorConnection && ([\n    'slow-2g',\n    '2g'\n].includes(navigatorConnection.effectiveType) || navigatorConnection.saveData);\n\nconst serialize = (key)=>{\n    if (isFunction(key)) {\n        try {\n            key = key();\n        } catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    // Use the original key as the argument of fetcher. This can be a string or an\n    // array of values.\n    const args = key;\n    // If key is not falsy, or not an empty array, hash it.\n    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n    return [\n        key,\n        args\n    ];\n};\n\n// Global timestamp.\nlet __timestamp = 0;\nconst getTimestamp = ()=>++__timestamp;\n\nconst FOCUS_EVENT = 0;\nconst RECONNECT_EVENT = 1;\nconst MUTATE_EVENT = 2;\nconst ERROR_REVALIDATE_EVENT = 3;\n\nvar events = {\n  __proto__: null,\n  ERROR_REVALIDATE_EVENT: ERROR_REVALIDATE_EVENT,\n  FOCUS_EVENT: FOCUS_EVENT,\n  MUTATE_EVENT: MUTATE_EVENT,\n  RECONNECT_EVENT: RECONNECT_EVENT\n};\n\nasync function internalMutate(...args) {\n    const [cache, _key, _data, _opts] = args;\n    // When passing as a boolean, it's explicitly used to disable/enable\n    // revalidation.\n    const options = mergeObjects({\n        populateCache: true,\n        throwOnError: true\n    }, typeof _opts === 'boolean' ? {\n        revalidate: _opts\n    } : _opts || {});\n    let populateCache = options.populateCache;\n    const rollbackOnErrorOption = options.rollbackOnError;\n    let optimisticData = options.optimisticData;\n    const rollbackOnError = (error)=>{\n        return typeof rollbackOnErrorOption === 'function' ? rollbackOnErrorOption(error) : rollbackOnErrorOption !== false;\n    };\n    const throwOnError = options.throwOnError;\n    // If the second argument is a key filter, return the mutation results for all\n    // filtered keys.\n    if (isFunction(_key)) {\n        const keyFilter = _key;\n        const matchedKeys = [];\n        const it = cache.keys();\n        for (const key of it){\n            if (// Skip the special useSWRInfinite and useSWRSubscription keys.\n            !/^\\$(inf|sub)\\$/.test(key) && keyFilter(cache.get(key)._k)) {\n                matchedKeys.push(key);\n            }\n        }\n        return Promise.all(matchedKeys.map(mutateByKey));\n    }\n    return mutateByKey(_key);\n    async function mutateByKey(_k) {\n        // Serialize key\n        const [key] = serialize(_k);\n        if (!key) return;\n        const [get, set] = createCacheHelper(cache, key);\n        const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n        const startRevalidate = ()=>{\n            const revalidators = EVENT_REVALIDATORS[key];\n            const revalidate = isFunction(options.revalidate) ? options.revalidate(get().data, _k) : options.revalidate !== false;\n            if (revalidate) {\n                // Invalidate the key by deleting the concurrent request markers so new\n                // requests will not be deduped.\n                delete FETCH[key];\n                delete PRELOAD[key];\n                if (revalidators && revalidators[0]) {\n                    return revalidators[0](MUTATE_EVENT).then(()=>get().data);\n                }\n            }\n            return get().data;\n        };\n        // If there is no new data provided, revalidate the key with current state.\n        if (args.length < 3) {\n            // Revalidate and broadcast state.\n            return startRevalidate();\n        }\n        let data = _data;\n        let error;\n        // Update global timestamps.\n        const beforeMutationTs = getTimestamp();\n        MUTATION[key] = [\n            beforeMutationTs,\n            0\n        ];\n        const hasOptimisticData = !isUndefined(optimisticData);\n        const state = get();\n        // `displayedData` is the current value on screen. It could be the optimistic value\n        // that is going to be overridden by a `committedData`, or get reverted back.\n        // `committedData` is the validated value that comes from a fetch or mutation.\n        const displayedData = state.data;\n        const currentData = state._c;\n        const committedData = isUndefined(currentData) ? displayedData : currentData;\n        // Do optimistic data update.\n        if (hasOptimisticData) {\n            optimisticData = isFunction(optimisticData) ? optimisticData(committedData, displayedData) : optimisticData;\n            // When we set optimistic data, backup the current committedData data in `_c`.\n            set({\n                data: optimisticData,\n                _c: committedData\n            });\n        }\n        if (isFunction(data)) {\n            // `data` is a function, call it passing current cache value.\n            try {\n                data = data(committedData);\n            } catch (err) {\n                // If it throws an error synchronously, we shouldn't update the cache.\n                error = err;\n            }\n        }\n        // `data` is a promise/thenable, resolve the final data first.\n        if (data && isPromiseLike(data)) {\n            // This means that the mutation is async, we need to check timestamps to\n            // avoid race conditions.\n            data = await data.catch((err)=>{\n                error = err;\n            });\n            // Check if other mutations have occurred since we've started this mutation.\n            // If there's a race we don't update cache or broadcast the change,\n            // just return the data.\n            if (beforeMutationTs !== MUTATION[key][0]) {\n                if (error) throw error;\n                return data;\n            } else if (error && hasOptimisticData && rollbackOnError(error)) {\n                // Rollback. Always populate the cache in this case but without\n                // transforming the data.\n                populateCache = true;\n                // Reset data to be the latest committed data, and clear the `_c` value.\n                set({\n                    data: committedData,\n                    _c: UNDEFINED\n                });\n            }\n        }\n        // If we should write back the cache after request.\n        if (populateCache) {\n            if (!error) {\n                // Transform the result into data.\n                if (isFunction(populateCache)) {\n                    const populateCachedData = populateCache(data, committedData);\n                    set({\n                        data: populateCachedData,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                } else {\n                    // Only update cached data and reset the error if there's no error. Data can be `undefined` here.\n                    set({\n                        data,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                }\n            }\n        }\n        // Reset the timestamp to mark the mutation has ended.\n        MUTATION[key][1] = getTimestamp();\n        // Update existing SWR Hooks' internal states:\n        Promise.resolve(startRevalidate()).then(()=>{\n            // The mutation and revalidation are ended, we can clear it since the data is\n            // not an optimistic value anymore.\n            set({\n                _c: UNDEFINED\n            });\n        });\n        // Throw error or return data\n        if (error) {\n            if (throwOnError) throw error;\n            return;\n        }\n        return data;\n    }\n}\n\nconst revalidateAllKeys = (revalidators, type)=>{\n    for(const key in revalidators){\n        if (revalidators[key][0]) revalidators[key][0](type);\n    }\n};\nconst initCache = (provider, options)=>{\n    // The global state for a specific provider will be used to deduplicate\n    // requests and store listeners. As well as a mutate function that is bound to\n    // the cache.\n    // The provider's global state might be already initialized. Let's try to get the\n    // global state associated with the provider first.\n    if (!SWRGlobalState.has(provider)) {\n        const opts = mergeObjects(defaultConfigOptions, options);\n        // If there's no global state bound to the provider, create a new one with the\n        // new mutate function.\n        const EVENT_REVALIDATORS = {};\n        const mutate = internalMutate.bind(UNDEFINED, provider);\n        let unmount = noop;\n        const subscriptions = {};\n        const subscribe = (key, callback)=>{\n            const subs = subscriptions[key] || [];\n            subscriptions[key] = subs;\n            subs.push(callback);\n            return ()=>subs.splice(subs.indexOf(callback), 1);\n        };\n        const setter = (key, value, prev)=>{\n            provider.set(key, value);\n            const subs = subscriptions[key];\n            if (subs) {\n                for (const fn of subs){\n                    fn(value, prev);\n                }\n            }\n        };\n        const initProvider = ()=>{\n            if (!SWRGlobalState.has(provider)) {\n                // Update the state if it's new, or if the provider has been extended.\n                SWRGlobalState.set(provider, [\n                    EVENT_REVALIDATORS,\n                    {},\n                    {},\n                    {},\n                    mutate,\n                    setter,\n                    subscribe\n                ]);\n                if (!IS_SERVER) {\n                    // When listening to the native events for auto revalidations,\n                    // we intentionally put a delay (setTimeout) here to make sure they are\n                    // fired after immediate JavaScript executions, which can be\n                    // React's state updates.\n                    // This avoids some unnecessary revalidations such as\n                    // https://github.com/vercel/swr/issues/1680.\n                    const releaseFocus = opts.initFocus(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, FOCUS_EVENT)));\n                    const releaseReconnect = opts.initReconnect(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, RECONNECT_EVENT)));\n                    unmount = ()=>{\n                        releaseFocus && releaseFocus();\n                        releaseReconnect && releaseReconnect();\n                        // When un-mounting, we need to remove the cache provider from the state\n                        // storage too because it's a side-effect. Otherwise, when re-mounting we\n                        // will not re-register those event listeners.\n                        SWRGlobalState.delete(provider);\n                    };\n                }\n            }\n        };\n        initProvider();\n        // This is a new provider, we need to initialize it and setup DOM events\n        // listeners for `focus` and `reconnect` actions.\n        // We might want to inject an extra layer on top of `provider` in the future,\n        // such as key serialization, auto GC, etc.\n        // For now, it's just a `Map` interface without any modifications.\n        return [\n            provider,\n            mutate,\n            initProvider,\n            unmount\n        ];\n    }\n    return [\n        provider,\n        SWRGlobalState.get(provider)[4]\n    ];\n};\n\n// error retry\nconst onErrorRetry = (_, __, config, revalidate, opts)=>{\n    const maxRetryCount = config.errorRetryCount;\n    const currentRetryCount = opts.retryCount;\n    // Exponential backoff\n    const timeout = ~~((Math.random() + 0.5) * (1 << (currentRetryCount < 8 ? currentRetryCount : 8))) * config.errorRetryInterval;\n    if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {\n        return;\n    }\n    setTimeout(revalidate, timeout, opts);\n};\nconst compare = (currentData, newData)=>stableHash(currentData) == stableHash(newData);\n// Default cache provider\nconst [cache, mutate] = initCache(new Map());\n// Default config\nconst defaultConfig = mergeObjects({\n    // events\n    onLoadingSlow: noop,\n    onSuccess: noop,\n    onError: noop,\n    onErrorRetry,\n    onDiscarded: noop,\n    // switches\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    revalidateIfStale: true,\n    shouldRetryOnError: true,\n    // timeouts\n    errorRetryInterval: slowConnection ? 10000 : 5000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: slowConnection ? 5000 : 3000,\n    // providers\n    compare,\n    isPaused: ()=>false,\n    cache,\n    mutate,\n    fallback: {}\n}, // use web preset by default\npreset);\n\nconst mergeConfigs = (a, b)=>{\n    // Need to create a new object to avoid mutating the original here.\n    const v = mergeObjects(a, b);\n    // If two configs are provided, merge their `use` and `fallback` options.\n    if (b) {\n        const { use: u1, fallback: f1 } = a;\n        const { use: u2, fallback: f2 } = b;\n        if (u1 && u2) {\n            v.use = u1.concat(u2);\n        }\n        if (f1 && f2) {\n            v.fallback = mergeObjects(f1, f2);\n        }\n    }\n    return v;\n};\n\nconst SWRConfigContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nconst SWRConfig = (props)=>{\n    const { value } = props;\n    const parentConfig = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SWRConfigContext);\n    const isFunctionalConfig = isFunction(value);\n    const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>isFunctionalConfig ? value(parentConfig) : value, [\n        isFunctionalConfig,\n        parentConfig,\n        value\n    ]);\n    // Extend parent context values and middleware.\n    const extendedConfig = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>isFunctionalConfig ? config : mergeConfigs(parentConfig, config), [\n        isFunctionalConfig,\n        parentConfig,\n        config\n    ]);\n    // Should not use the inherited provider.\n    const provider = config && config.provider;\n    // initialize the cache only on first access.\n    const cacheContextRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(UNDEFINED);\n    if (provider && !cacheContextRef.current) {\n        cacheContextRef.current = initCache(provider(extendedConfig.cache || cache), config);\n    }\n    const cacheContext = cacheContextRef.current;\n    // Override the cache if a new provider is given.\n    if (cacheContext) {\n        extendedConfig.cache = cacheContext[0];\n        extendedConfig.mutate = cacheContext[1];\n    }\n    // Unsubscribe events.\n    useIsomorphicLayoutEffect(()=>{\n        if (cacheContext) {\n            cacheContext[2] && cacheContext[2]();\n            return cacheContext[3];\n        }\n    }, []);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SWRConfigContext.Provider, mergeObjects(props, {\n        value: extendedConfig\n    }));\n};\n\nconst INFINITE_PREFIX = '$inf$';\n\n// @ts-expect-error\nconst enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;\nconst use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nconst setupDevTools = ()=>{\n    if (enableDevtools) {\n        // @ts-expect-error\n        window.__SWR_DEVTOOLS_REACT__ = react__WEBPACK_IMPORTED_MODULE_0__;\n    }\n};\n\nconst normalize = (args)=>{\n    return isFunction(args[1]) ? [\n        args[0],\n        args[1],\n        args[2] || {}\n    ] : [\n        args[0],\n        null,\n        (args[1] === null ? args[2] : args[1]) || {}\n    ];\n};\n\nconst useSWRConfig = ()=>{\n    return mergeObjects(defaultConfig, (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SWRConfigContext));\n};\n\nconst preload = (key_, fetcher)=>{\n    const [key, fnArg] = serialize(key_);\n    const [, , , PRELOAD] = SWRGlobalState.get(cache);\n    // Prevent preload to be called multiple times before used.\n    if (PRELOAD[key]) return PRELOAD[key];\n    const req = fetcher(fnArg);\n    PRELOAD[key] = req;\n    return req;\n};\nconst middleware = (useSWRNext)=>(key_, fetcher_, config)=>{\n        // fetcher might be a sync function, so this should not be an async function\n        const fetcher = fetcher_ && ((...args)=>{\n            const [key] = serialize(key_);\n            const [, , , PRELOAD] = SWRGlobalState.get(cache);\n            if (key.startsWith(INFINITE_PREFIX)) {\n                // we want the infinite fetcher to be called.\n                // handling of the PRELOAD cache happens there.\n                return fetcher_(...args);\n            }\n            const req = PRELOAD[key];\n            if (isUndefined(req)) return fetcher_(...args);\n            delete PRELOAD[key];\n            return req;\n        });\n        return useSWRNext(key_, fetcher, config);\n    };\n\nconst BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nconst withArgs = (hook)=>{\n    return function useSWRArgs(...args) {\n        // Get the default and inherited configuration.\n        const fallbackConfig = useSWRConfig();\n        // Normalize arguments.\n        const [key, fn, _config] = normalize(args);\n        // Merge configurations.\n        const config = mergeConfigs(fallbackConfig, _config);\n        // Apply middleware\n        let next = hook;\n        const { use } = config;\n        const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n        for(let i = middleware.length; i--;){\n            next = middleware[i](next);\n        }\n        return next(key, fn || config.fetcher || null, config);\n    };\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nconst subscribeCallback = (key, callbacks, callback)=>{\n    const keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n    keyedRevalidators.push(callback);\n    return ()=>{\n        const index = keyedRevalidators.indexOf(callback);\n        if (index >= 0) {\n            // O(1): faster than splice\n            keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n            keyedRevalidators.pop();\n        }\n    };\n};\n\n// Create a custom hook with a middleware\nconst withMiddleware = (useSWR, middleware)=>{\n    return (...args)=>{\n        const [key, fn, config] = normalize(args);\n        const uses = (config.use || []).concat(middleware);\n        return useSWR(key, fn, {\n            ...config,\n            use: uses\n        });\n    };\n};\n\nsetupDevTools();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/dist/_internal/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/dist/core/index.mjs":
/*!**********************************************!*\
  !*** ./node_modules/swr/dist/core/index.mjs ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SWRConfig: function() { return /* binding */ SWRConfig; },\n/* harmony export */   \"default\": function() { return /* binding */ useSWR; },\n/* harmony export */   mutate: function() { return /* reexport safe */ swr_internal__WEBPACK_IMPORTED_MODULE_3__.mutate; },\n/* harmony export */   preload: function() { return /* reexport safe */ swr_internal__WEBPACK_IMPORTED_MODULE_3__.preload; },\n/* harmony export */   unstable_serialize: function() { return /* binding */ unstable_serialize; },\n/* harmony export */   useSWRConfig: function() { return /* reexport safe */ swr_internal__WEBPACK_IMPORTED_MODULE_3__.useSWRConfig; }\n/* harmony export */ });\n/* harmony import */ var client_only__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! client-only */ \"(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-sync-external-store/shim/index.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n/* harmony import */ var swr_internal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! swr/_internal */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/index.mjs\");\n\n\n\n\n\n\nconst unstable_serialize = (key)=>(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.serialize)(key)[0];\n\n/// <reference types=\"react/experimental\" />\nconst use = react__WEBPACK_IMPORTED_MODULE_1__.use || ((promise)=>{\n    if (promise.status === 'pending') {\n        throw promise;\n    } else if (promise.status === 'fulfilled') {\n        return promise.value;\n    } else if (promise.status === 'rejected') {\n        throw promise.reason;\n    } else {\n        promise.status = 'pending';\n        promise.then((v)=>{\n            promise.status = 'fulfilled';\n            promise.value = v;\n        }, (e)=>{\n            promise.status = 'rejected';\n            promise.reason = e;\n        });\n        throw promise;\n    }\n});\nconst WITH_DEDUPE = {\n    dedupe: true\n};\nconst useSWRHandler = (_key, fetcher, config)=>{\n    const { cache, compare, suspense, fallbackData, revalidateOnMount, revalidateIfStale, refreshInterval, refreshWhenHidden, refreshWhenOffline, keepPreviousData } = config;\n    const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = swr_internal__WEBPACK_IMPORTED_MODULE_3__.SWRGlobalState.get(cache);\n    // `key` is the identifier of the SWR internal state,\n    // `fnArg` is the argument/arguments parsed from the key, which will be passed\n    // to the fetcher.\n    // All of them are derived from `_key`.\n    const [key, fnArg] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.serialize)(_key);\n    // If it's the initial render of this hook.\n    const initialMountedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // If the hook is unmounted already. This will be used to prevent some effects\n    // to be called after unmounting.\n    const unmountedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // Refs to keep the key and config.\n    const keyRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(key);\n    const fetcherRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(fetcher);\n    const configRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(config);\n    const getConfig = ()=>configRef.current;\n    const isActive = ()=>getConfig().isVisible() && getConfig().isOnline();\n    const [getCache, setCache, subscribeCache, getInitialCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.createCacheHelper)(cache, key);\n    const stateDependencies = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({}).current;\n    const fallback = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(fallbackData) ? config.fallback[key] : fallbackData;\n    const isEqual = (prev, current)=>{\n        for(const _ in stateDependencies){\n            const t = _;\n            if (t === 'data') {\n                if (!compare(prev[t], current[t])) {\n                    if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(prev[t])) {\n                        return false;\n                    }\n                    if (!compare(returnedData, current[t])) {\n                        return false;\n                    }\n                }\n            } else {\n                if (current[t] !== prev[t]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const shouldStartRequest = (()=>{\n            if (!key) return false;\n            if (!fetcher) return false;\n            // If `revalidateOnMount` is set, we take the value directly.\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(revalidateOnMount)) return revalidateOnMount;\n            // If it's paused, we skip revalidation.\n            if (getConfig().isPaused()) return false;\n            if (suspense) return false;\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(revalidateIfStale)) return revalidateIfStale;\n            return true;\n        })();\n        // Get the cache and merge it with expected states.\n        const getSelectedCache = (state)=>{\n            // We only select the needed fields from the state.\n            const snapshot = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.mergeObjects)(state);\n            delete snapshot._k;\n            if (!shouldStartRequest) {\n                return snapshot;\n            }\n            return {\n                isValidating: true,\n                isLoading: true,\n                ...snapshot\n            };\n        };\n        const cachedData = getCache();\n        const initialData = getInitialCache();\n        const clientSnapshot = getSelectedCache(cachedData);\n        const serverSnapshot = cachedData === initialData ? clientSnapshot : getSelectedCache(initialData);\n        // To make sure that we are returning the same object reference to avoid\n        // unnecessary re-renders, we keep the previous snapshot and use deep\n        // comparison to check if we need to return a new one.\n        let memorizedSnapshot = clientSnapshot;\n        return [\n            ()=>{\n                const newSnapshot = getSelectedCache(getCache());\n                const compareResult = isEqual(newSnapshot, memorizedSnapshot);\n                if (compareResult) {\n                    // Mentally, we should always return the `memorizedSnapshot` here\n                    // as there's no change between the new and old snapshots.\n                    // However, since the `isEqual` function only compares selected fields,\n                    // the values of the unselected fields might be changed. That's\n                    // simply because we didn't track them.\n                    // To support the case in https://github.com/vercel/swr/pull/2576,\n                    // we need to update these fields in the `memorizedSnapshot` too\n                    // with direct mutations to ensure the snapshot is always up-to-date\n                    // even for the unselected fields, but only trigger re-renders when\n                    // the selected fields are changed.\n                    memorizedSnapshot.data = newSnapshot.data;\n                    memorizedSnapshot.isLoading = newSnapshot.isLoading;\n                    memorizedSnapshot.isValidating = newSnapshot.isValidating;\n                    memorizedSnapshot.error = newSnapshot.error;\n                    return memorizedSnapshot;\n                } else {\n                    memorizedSnapshot = newSnapshot;\n                    return newSnapshot;\n                }\n            },\n            ()=>serverSnapshot\n        ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        cache,\n        key\n    ]);\n    // Get the current state that SWR should return.\n    const cached = (0,use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((callback)=>subscribeCache(key, (current, prev)=>{\n            if (!isEqual(prev, current)) callback();\n        }), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        cache,\n        key\n    ]), getSnapshot[0], getSnapshot[1]);\n    const isInitialMount = !initialMountedRef.current;\n    const hasRevalidator = EVENT_REVALIDATORS[key] && EVENT_REVALIDATORS[key].length > 0;\n    const cachedData = cached.data;\n    const data = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cachedData) ? fallback : cachedData;\n    const error = cached.error;\n    // Use a ref to store previously returned data. Use the initial data as its initial value.\n    const laggyDataRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(data);\n    const returnedData = keepPreviousData ? (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cachedData) ? laggyDataRef.current : cachedData : data;\n    // - Suspense mode and there's stale data for the initial render.\n    // - Not suspense mode and there is no fallback data and `revalidateIfStale` is enabled.\n    // - `revalidateIfStale` is enabled but `data` is not defined.\n    const shouldDoInitialRevalidation = (()=>{\n        // if a key already has revalidators and also has error, we should not trigger revalidation\n        if (hasRevalidator && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(error)) return false;\n        // If `revalidateOnMount` is set, we take the value directly.\n        if (isInitialMount && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(revalidateOnMount)) return revalidateOnMount;\n        // If it's paused, we skip revalidation.\n        if (getConfig().isPaused()) return false;\n        // Under suspense mode, it will always fetch on render if there is no\n        // stale data so no need to revalidate immediately mount it again.\n        // If data exists, only revalidate if `revalidateIfStale` is true.\n        if (suspense) return (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) ? false : revalidateIfStale;\n        // If there is no stale data, we need to revalidate when mount;\n        // If `revalidateIfStale` is set to true, we will always revalidate.\n        return (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) || revalidateIfStale;\n    })();\n    // Resolve the default validating state:\n    // If it's able to validate, and it should revalidate when mount, this will be true.\n    const defaultValidatingState = !!(key && fetcher && isInitialMount && shouldDoInitialRevalidation);\n    const isValidating = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cached.isValidating) ? defaultValidatingState : cached.isValidating;\n    const isLoading = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cached.isLoading) ? defaultValidatingState : cached.isLoading;\n    // The revalidation function is a carefully crafted wrapper of the original\n    // `fetcher`, to correctly handle the many edge cases.\n    const revalidate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (revalidateOpts)=>{\n        const currentFetcher = fetcherRef.current;\n        if (!key || !currentFetcher || unmountedRef.current || getConfig().isPaused()) {\n            return false;\n        }\n        let newData;\n        let startAt;\n        let loading = true;\n        const opts = revalidateOpts || {};\n        // If there is no ongoing concurrent request, or `dedupe` is not set, a\n        // new request should be initiated.\n        const shouldStartNewRequest = !FETCH[key] || !opts.dedupe;\n        /*\n         For React 17\n         Do unmount check for calls:\n         If key has changed during the revalidation, or the component has been\n         unmounted, old dispatch and old event callbacks should not take any\n         effect\n\n        For React 18\n        only check if key has changed\n        https://github.com/reactwg/react-18/discussions/82\n      */ const callbackSafeguard = ()=>{\n            if (swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_REACT_LEGACY) {\n                return !unmountedRef.current && key === keyRef.current && initialMountedRef.current;\n            }\n            return key === keyRef.current;\n        };\n        // The final state object when the request finishes.\n        const finalState = {\n            isValidating: false,\n            isLoading: false\n        };\n        const finishRequestAndUpdateState = ()=>{\n            setCache(finalState);\n        };\n        const cleanupState = ()=>{\n            // Check if it's still the same request before deleting it.\n            const requestInfo = FETCH[key];\n            if (requestInfo && requestInfo[1] === startAt) {\n                delete FETCH[key];\n            }\n        };\n        // Start fetching. Change the `isValidating` state, update the cache.\n        const initialState = {\n            isValidating: true\n        };\n        // It is in the `isLoading` state, if and only if there is no cached data.\n        // This bypasses fallback data and laggy data.\n        if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(getCache().data)) {\n            initialState.isLoading = true;\n        }\n        try {\n            if (shouldStartNewRequest) {\n                setCache(initialState);\n                // If no cache is being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(getCache().data)) {\n                    setTimeout(()=>{\n                        if (loading && callbackSafeguard()) {\n                            getConfig().onLoadingSlow(key, config);\n                        }\n                    }, config.loadingTimeout);\n                }\n                // Start the request and save the timestamp.\n                // Key must be truthy if entering here.\n                FETCH[key] = [\n                    currentFetcher(fnArg),\n                    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.getTimestamp)()\n                ];\n            }\n            [newData, startAt] = FETCH[key];\n            newData = await newData;\n            if (shouldStartNewRequest) {\n                // If the request isn't interrupted, clean it up after the\n                // deduplication interval.\n                setTimeout(cleanupState, config.dedupingInterval);\n            }\n            // If there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            // The timestamp maybe be `undefined` or a number\n            if (!FETCH[key] || FETCH[key][1] !== startAt) {\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Clear error.\n            finalState.error = swr_internal__WEBPACK_IMPORTED_MODULE_3__.UNDEFINED;\n            // If there're other mutations(s), that overlapped with the current revalidation:\n            // case 1:\n            //   req------------------>res\n            //       mutate------>end\n            // case 2:\n            //         req------------>res\n            //   mutate------>end\n            // case 3:\n            //   req------------------>res\n            //       mutate-------...---------->\n            // we have to ignore the revalidation result (res) because it's no longer fresh.\n            // meanwhile, a new revalidation should be triggered when the mutation ends.\n            const mutationInfo = MUTATION[key];\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(mutationInfo) && // case 1\n            (startAt <= mutationInfo[0] || // case 2\n            startAt <= mutationInfo[1] || // case 3\n            mutationInfo[1] === 0)) {\n                finishRequestAndUpdateState();\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Deep compare with the latest state to avoid extra re-renders.\n            // For local state, compare and assign.\n            const cacheData = getCache().data;\n            // Since the compare fn could be custom fn\n            // cacheData might be different from newData even when compare fn returns True\n            finalState.data = compare(cacheData, newData) ? cacheData : newData;\n            // Trigger the successful callback if it's the original request.\n            if (shouldStartNewRequest) {\n                if (callbackSafeguard()) {\n                    getConfig().onSuccess(newData, key, config);\n                }\n            }\n        } catch (err) {\n            cleanupState();\n            const currentConfig = getConfig();\n            const { shouldRetryOnError } = currentConfig;\n            // Not paused, we continue handling the error. Otherwise, discard it.\n            if (!currentConfig.isPaused()) {\n                // Get a new error, don't use deep comparison for errors.\n                finalState.error = err;\n                // Error event and retry logic. Only for the actual request, not\n                // deduped ones.\n                if (shouldStartNewRequest && callbackSafeguard()) {\n                    currentConfig.onError(err, key, currentConfig);\n                    if (shouldRetryOnError === true || (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isFunction)(shouldRetryOnError) && shouldRetryOnError(err)) {\n                        if (!getConfig().revalidateOnFocus || !getConfig().revalidateOnReconnect || isActive()) {\n                            // If it's inactive, stop. It will auto-revalidate when\n                            // refocusing or reconnecting.\n                            // When retrying, deduplication is always enabled.\n                            currentConfig.onErrorRetry(err, key, currentConfig, (_opts)=>{\n                                const revalidators = EVENT_REVALIDATORS[key];\n                                if (revalidators && revalidators[0]) {\n                                    revalidators[0](swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.ERROR_REVALIDATE_EVENT, _opts);\n                                }\n                            }, {\n                                retryCount: (opts.retryCount || 0) + 1,\n                                dedupe: true\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        // Mark loading as stopped.\n        loading = false;\n        // Update the current hook's state.\n        finishRequestAndUpdateState();\n        return true;\n    }, // `setState` is immutable, and `eventsCallback`, `fnArg`, and\n    // `keyValidating` are depending on `key`, so we can exclude them from\n    // the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // `useSWR('key', () => fetch('/api/'), { suspense: true })`\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        key,\n        cache\n    ]);\n    // Similar to the global mutate but bound to the current cache and key.\n    // `cache` isn't allowed to change during the lifecycle.\n    const boundMutate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(// Use callback to make sure `keyRef.current` returns latest result every time\n    (...args)=>{\n        return (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.internalMutate)(cache, keyRef.current, ...args);\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // The logic for updating refs.\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(()=>{\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        // Handle laggy data updates. If there's cached data of the current key,\n        // it'll be the correct reference.\n        if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cachedData)) {\n            laggyDataRef.current = cachedData;\n        }\n    });\n    // After mounted or key changed.\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(()=>{\n        if (!key) return;\n        const softRevalidate = revalidate.bind(swr_internal__WEBPACK_IMPORTED_MODULE_3__.UNDEFINED, WITH_DEDUPE);\n        // Expose revalidators to global event listeners. So we can trigger\n        // revalidation from the outside.\n        let nextFocusRevalidatedAt = 0;\n        const onRevalidate = (type, opts = {})=>{\n            if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.FOCUS_EVENT) {\n                const now = Date.now();\n                if (getConfig().revalidateOnFocus && now > nextFocusRevalidatedAt && isActive()) {\n                    nextFocusRevalidatedAt = now + getConfig().focusThrottleInterval;\n                    softRevalidate();\n                }\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.RECONNECT_EVENT) {\n                if (getConfig().revalidateOnReconnect && isActive()) {\n                    softRevalidate();\n                }\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.MUTATE_EVENT) {\n                return revalidate();\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.ERROR_REVALIDATE_EVENT) {\n                return revalidate(opts);\n            }\n            return;\n        };\n        const unsubEvents = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.subscribeCallback)(key, EVENT_REVALIDATORS, onRevalidate);\n        // Mark the component as mounted and update corresponding refs.\n        unmountedRef.current = false;\n        keyRef.current = key;\n        initialMountedRef.current = true;\n        // Keep the original key in the cache.\n        setCache({\n            _k: fnArg\n        });\n        // Trigger a revalidation\n        if (shouldDoInitialRevalidation) {\n            if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) || swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_SERVER) {\n                // Revalidate immediately.\n                softRevalidate();\n            } else {\n                // Delay the revalidate if we have data to return so we won't block\n                // rendering.\n                (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.rAF)(softRevalidate);\n            }\n        }\n        return ()=>{\n            // Mark it as unmounted.\n            unmountedRef.current = true;\n            unsubEvents();\n        };\n    }, [\n        key\n    ]);\n    // Polling\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(()=>{\n        let timer;\n        function next() {\n            // Use the passed interval\n            // ...or invoke the function with the updated data to get the interval\n            const interval = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isFunction)(refreshInterval) ? refreshInterval(getCache().data) : refreshInterval;\n            // We only start the next interval if `refreshInterval` is not 0, and:\n            // - `force` is true, which is the start of polling\n            // - or `timer` is not 0, which means the effect wasn't canceled\n            if (interval && timer !== -1) {\n                timer = setTimeout(execute, interval);\n            }\n        }\n        function execute() {\n            // Check if it's OK to execute:\n            // Only revalidate when the page is visible, online, and not errored.\n            if (!getCache().error && (refreshWhenHidden || getConfig().isVisible()) && (refreshWhenOffline || getConfig().isOnline())) {\n                revalidate(WITH_DEDUPE).then(next);\n            } else {\n                // Schedule the next interval to check again.\n                next();\n            }\n        }\n        next();\n        return ()=>{\n            if (timer) {\n                clearTimeout(timer);\n                timer = -1;\n            }\n        };\n    }, [\n        refreshInterval,\n        refreshWhenHidden,\n        refreshWhenOffline,\n        key\n    ]);\n    // Display debug info in React DevTools.\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useDebugValue)(returnedData);\n    // In Suspense mode, we can't return the empty `data` state.\n    // If there is an `error`, the `error` needs to be thrown to the error boundary.\n    // If there is no `error`, the `revalidation` promise needs to be thrown to\n    // the suspense boundary.\n    if (suspense && (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) && key) {\n        // SWR should throw when trying to use Suspense on the server with React 18,\n        // without providing any initial data. See:\n        // https://github.com/vercel/swr/issues/1832\n        if (!swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_REACT_LEGACY && swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_SERVER) {\n            throw new Error('Fallback data is required when using suspense in SSR.');\n        }\n        // Always update fetcher and config refs even with the Suspense mode.\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        unmountedRef.current = false;\n        const req = PRELOAD[key];\n        if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(req)) {\n            const promise = boundMutate(req);\n            use(promise);\n        }\n        if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(error)) {\n            const promise = revalidate(WITH_DEDUPE);\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(returnedData)) {\n                promise.status = 'fulfilled';\n                promise.value = true;\n            }\n            use(promise);\n        } else {\n            throw error;\n        }\n    }\n    return {\n        mutate: boundMutate,\n        get data () {\n            stateDependencies.data = true;\n            return returnedData;\n        },\n        get error () {\n            stateDependencies.error = true;\n            return error;\n        },\n        get isValidating () {\n            stateDependencies.isValidating = true;\n            return isValidating;\n        },\n        get isLoading () {\n            stateDependencies.isLoading = true;\n            return isLoading;\n        }\n    };\n};\nconst SWRConfig = swr_internal__WEBPACK_IMPORTED_MODULE_3__.OBJECT.defineProperty(swr_internal__WEBPACK_IMPORTED_MODULE_3__.SWRConfig, 'defaultValue', {\n    value: swr_internal__WEBPACK_IMPORTED_MODULE_3__.defaultConfig\n});\n/**\n * A hook to fetch data.\n *\n * @link https://swr.vercel.app\n * @example\n * ```jsx\n * import useSWR from 'swr'\n * function Profile() {\n *   const { data, error, isLoading } = useSWR('/api/user', fetcher)\n *   if (error) return <div>failed to load</div>\n *   if (isLoading) return <div>loading...</div>\n *   return <div>hello {data.name}!</div>\n * }\n * ```\n */ const useSWR = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.withArgs)(useSWRHandler);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/dist/core/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/dist/infinite/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/swr/dist/infinite/index.mjs ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ useSWRInfinite; },\n/* harmony export */   infinite: function() { return /* binding */ infinite; },\n/* harmony export */   unstable_serialize: function() { return /* binding */ unstable_serialize; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var client_only__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! client-only */ \"(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\n/* harmony import */ var use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-sync-external-store/shim/index.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n/* harmony import */ var swr_internal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! swr/_internal */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/index.mjs\");\n\n\n\n\n\n/// <reference types=\"react/experimental\" />\nconst use = react__WEBPACK_IMPORTED_MODULE_0__.use || ((promise)=>{\n    if (promise.status === 'pending') {\n        throw promise;\n    } else if (promise.status === 'fulfilled') {\n        return promise.value;\n    } else if (promise.status === 'rejected') {\n        throw promise.reason;\n    } else {\n        promise.status = 'pending';\n        promise.then((v)=>{\n            promise.status = 'fulfilled';\n            promise.value = v;\n        }, (e)=>{\n            promise.status = 'rejected';\n            promise.reason = e;\n        });\n        throw promise;\n    }\n});\nconst WITH_DEDUPE = {\n    dedupe: true\n};\nconst useSWRHandler = (_key, fetcher, config)=>{\n    const { cache, compare, suspense, fallbackData, revalidateOnMount, revalidateIfStale, refreshInterval, refreshWhenHidden, refreshWhenOffline, keepPreviousData } = config;\n    const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = swr_internal__WEBPACK_IMPORTED_MODULE_3__.SWRGlobalState.get(cache);\n    // `key` is the identifier of the SWR internal state,\n    // `fnArg` is the argument/arguments parsed from the key, which will be passed\n    // to the fetcher.\n    // All of them are derived from `_key`.\n    const [key, fnArg] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.serialize)(_key);\n    // If it's the initial render of this hook.\n    const initialMountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    // If the hook is unmounted already. This will be used to prevent some effects\n    // to be called after unmounting.\n    const unmountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    // Refs to keep the key and config.\n    const keyRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(key);\n    const fetcherRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(fetcher);\n    const configRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(config);\n    const getConfig = ()=>configRef.current;\n    const isActive = ()=>getConfig().isVisible() && getConfig().isOnline();\n    const [getCache, setCache, subscribeCache, getInitialCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.createCacheHelper)(cache, key);\n    const stateDependencies = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({}).current;\n    const fallback = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(fallbackData) ? config.fallback[key] : fallbackData;\n    const isEqual = (prev, current)=>{\n        for(const _ in stateDependencies){\n            const t = _;\n            if (t === 'data') {\n                if (!compare(prev[t], current[t])) {\n                    if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(prev[t])) {\n                        return false;\n                    }\n                    if (!compare(returnedData, current[t])) {\n                        return false;\n                    }\n                }\n            } else {\n                if (current[t] !== prev[t]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const shouldStartRequest = (()=>{\n            if (!key) return false;\n            if (!fetcher) return false;\n            // If `revalidateOnMount` is set, we take the value directly.\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(revalidateOnMount)) return revalidateOnMount;\n            // If it's paused, we skip revalidation.\n            if (getConfig().isPaused()) return false;\n            if (suspense) return false;\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(revalidateIfStale)) return revalidateIfStale;\n            return true;\n        })();\n        // Get the cache and merge it with expected states.\n        const getSelectedCache = (state)=>{\n            // We only select the needed fields from the state.\n            const snapshot = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.mergeObjects)(state);\n            delete snapshot._k;\n            if (!shouldStartRequest) {\n                return snapshot;\n            }\n            return {\n                isValidating: true,\n                isLoading: true,\n                ...snapshot\n            };\n        };\n        const cachedData = getCache();\n        const initialData = getInitialCache();\n        const clientSnapshot = getSelectedCache(cachedData);\n        const serverSnapshot = cachedData === initialData ? clientSnapshot : getSelectedCache(initialData);\n        // To make sure that we are returning the same object reference to avoid\n        // unnecessary re-renders, we keep the previous snapshot and use deep\n        // comparison to check if we need to return a new one.\n        let memorizedSnapshot = clientSnapshot;\n        return [\n            ()=>{\n                const newSnapshot = getSelectedCache(getCache());\n                const compareResult = isEqual(newSnapshot, memorizedSnapshot);\n                if (compareResult) {\n                    // Mentally, we should always return the `memorizedSnapshot` here\n                    // as there's no change between the new and old snapshots.\n                    // However, since the `isEqual` function only compares selected fields,\n                    // the values of the unselected fields might be changed. That's\n                    // simply because we didn't track them.\n                    // To support the case in https://github.com/vercel/swr/pull/2576,\n                    // we need to update these fields in the `memorizedSnapshot` too\n                    // with direct mutations to ensure the snapshot is always up-to-date\n                    // even for the unselected fields, but only trigger re-renders when\n                    // the selected fields are changed.\n                    memorizedSnapshot.data = newSnapshot.data;\n                    memorizedSnapshot.isLoading = newSnapshot.isLoading;\n                    memorizedSnapshot.isValidating = newSnapshot.isValidating;\n                    memorizedSnapshot.error = newSnapshot.error;\n                    return memorizedSnapshot;\n                } else {\n                    memorizedSnapshot = newSnapshot;\n                    return newSnapshot;\n                }\n            },\n            ()=>serverSnapshot\n        ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        cache,\n        key\n    ]);\n    // Get the current state that SWR should return.\n    const cached = (0,use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((callback)=>subscribeCache(key, (current, prev)=>{\n            if (!isEqual(prev, current)) callback();\n        }), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        cache,\n        key\n    ]), getSnapshot[0], getSnapshot[1]);\n    const isInitialMount = !initialMountedRef.current;\n    const hasRevalidator = EVENT_REVALIDATORS[key] && EVENT_REVALIDATORS[key].length > 0;\n    const cachedData = cached.data;\n    const data = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cachedData) ? fallback : cachedData;\n    const error = cached.error;\n    // Use a ref to store previously returned data. Use the initial data as its initial value.\n    const laggyDataRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(data);\n    const returnedData = keepPreviousData ? (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cachedData) ? laggyDataRef.current : cachedData : data;\n    // - Suspense mode and there's stale data for the initial render.\n    // - Not suspense mode and there is no fallback data and `revalidateIfStale` is enabled.\n    // - `revalidateIfStale` is enabled but `data` is not defined.\n    const shouldDoInitialRevalidation = (()=>{\n        // if a key already has revalidators and also has error, we should not trigger revalidation\n        if (hasRevalidator && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(error)) return false;\n        // If `revalidateOnMount` is set, we take the value directly.\n        if (isInitialMount && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(revalidateOnMount)) return revalidateOnMount;\n        // If it's paused, we skip revalidation.\n        if (getConfig().isPaused()) return false;\n        // Under suspense mode, it will always fetch on render if there is no\n        // stale data so no need to revalidate immediately mount it again.\n        // If data exists, only revalidate if `revalidateIfStale` is true.\n        if (suspense) return (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) ? false : revalidateIfStale;\n        // If there is no stale data, we need to revalidate when mount;\n        // If `revalidateIfStale` is set to true, we will always revalidate.\n        return (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) || revalidateIfStale;\n    })();\n    // Resolve the default validating state:\n    // If it's able to validate, and it should revalidate when mount, this will be true.\n    const defaultValidatingState = !!(key && fetcher && isInitialMount && shouldDoInitialRevalidation);\n    const isValidating = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cached.isValidating) ? defaultValidatingState : cached.isValidating;\n    const isLoading = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cached.isLoading) ? defaultValidatingState : cached.isLoading;\n    // The revalidation function is a carefully crafted wrapper of the original\n    // `fetcher`, to correctly handle the many edge cases.\n    const revalidate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (revalidateOpts)=>{\n        const currentFetcher = fetcherRef.current;\n        if (!key || !currentFetcher || unmountedRef.current || getConfig().isPaused()) {\n            return false;\n        }\n        let newData;\n        let startAt;\n        let loading = true;\n        const opts = revalidateOpts || {};\n        // If there is no ongoing concurrent request, or `dedupe` is not set, a\n        // new request should be initiated.\n        const shouldStartNewRequest = !FETCH[key] || !opts.dedupe;\n        /*\n         For React 17\n         Do unmount check for calls:\n         If key has changed during the revalidation, or the component has been\n         unmounted, old dispatch and old event callbacks should not take any\n         effect\n\n        For React 18\n        only check if key has changed\n        https://github.com/reactwg/react-18/discussions/82\n      */ const callbackSafeguard = ()=>{\n            if (swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_REACT_LEGACY) {\n                return !unmountedRef.current && key === keyRef.current && initialMountedRef.current;\n            }\n            return key === keyRef.current;\n        };\n        // The final state object when the request finishes.\n        const finalState = {\n            isValidating: false,\n            isLoading: false\n        };\n        const finishRequestAndUpdateState = ()=>{\n            setCache(finalState);\n        };\n        const cleanupState = ()=>{\n            // Check if it's still the same request before deleting it.\n            const requestInfo = FETCH[key];\n            if (requestInfo && requestInfo[1] === startAt) {\n                delete FETCH[key];\n            }\n        };\n        // Start fetching. Change the `isValidating` state, update the cache.\n        const initialState = {\n            isValidating: true\n        };\n        // It is in the `isLoading` state, if and only if there is no cached data.\n        // This bypasses fallback data and laggy data.\n        if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(getCache().data)) {\n            initialState.isLoading = true;\n        }\n        try {\n            if (shouldStartNewRequest) {\n                setCache(initialState);\n                // If no cache is being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(getCache().data)) {\n                    setTimeout(()=>{\n                        if (loading && callbackSafeguard()) {\n                            getConfig().onLoadingSlow(key, config);\n                        }\n                    }, config.loadingTimeout);\n                }\n                // Start the request and save the timestamp.\n                // Key must be truthy if entering here.\n                FETCH[key] = [\n                    currentFetcher(fnArg),\n                    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.getTimestamp)()\n                ];\n            }\n            [newData, startAt] = FETCH[key];\n            newData = await newData;\n            if (shouldStartNewRequest) {\n                // If the request isn't interrupted, clean it up after the\n                // deduplication interval.\n                setTimeout(cleanupState, config.dedupingInterval);\n            }\n            // If there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            // The timestamp maybe be `undefined` or a number\n            if (!FETCH[key] || FETCH[key][1] !== startAt) {\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Clear error.\n            finalState.error = swr_internal__WEBPACK_IMPORTED_MODULE_3__.UNDEFINED;\n            // If there're other mutations(s), that overlapped with the current revalidation:\n            // case 1:\n            //   req------------------>res\n            //       mutate------>end\n            // case 2:\n            //         req------------>res\n            //   mutate------>end\n            // case 3:\n            //   req------------------>res\n            //       mutate-------...---------->\n            // we have to ignore the revalidation result (res) because it's no longer fresh.\n            // meanwhile, a new revalidation should be triggered when the mutation ends.\n            const mutationInfo = MUTATION[key];\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(mutationInfo) && // case 1\n            (startAt <= mutationInfo[0] || // case 2\n            startAt <= mutationInfo[1] || // case 3\n            mutationInfo[1] === 0)) {\n                finishRequestAndUpdateState();\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Deep compare with the latest state to avoid extra re-renders.\n            // For local state, compare and assign.\n            const cacheData = getCache().data;\n            // Since the compare fn could be custom fn\n            // cacheData might be different from newData even when compare fn returns True\n            finalState.data = compare(cacheData, newData) ? cacheData : newData;\n            // Trigger the successful callback if it's the original request.\n            if (shouldStartNewRequest) {\n                if (callbackSafeguard()) {\n                    getConfig().onSuccess(newData, key, config);\n                }\n            }\n        } catch (err) {\n            cleanupState();\n            const currentConfig = getConfig();\n            const { shouldRetryOnError } = currentConfig;\n            // Not paused, we continue handling the error. Otherwise, discard it.\n            if (!currentConfig.isPaused()) {\n                // Get a new error, don't use deep comparison for errors.\n                finalState.error = err;\n                // Error event and retry logic. Only for the actual request, not\n                // deduped ones.\n                if (shouldStartNewRequest && callbackSafeguard()) {\n                    currentConfig.onError(err, key, currentConfig);\n                    if (shouldRetryOnError === true || (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isFunction)(shouldRetryOnError) && shouldRetryOnError(err)) {\n                        if (!getConfig().revalidateOnFocus || !getConfig().revalidateOnReconnect || isActive()) {\n                            // If it's inactive, stop. It will auto-revalidate when\n                            // refocusing or reconnecting.\n                            // When retrying, deduplication is always enabled.\n                            currentConfig.onErrorRetry(err, key, currentConfig, (_opts)=>{\n                                const revalidators = EVENT_REVALIDATORS[key];\n                                if (revalidators && revalidators[0]) {\n                                    revalidators[0](swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.ERROR_REVALIDATE_EVENT, _opts);\n                                }\n                            }, {\n                                retryCount: (opts.retryCount || 0) + 1,\n                                dedupe: true\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        // Mark loading as stopped.\n        loading = false;\n        // Update the current hook's state.\n        finishRequestAndUpdateState();\n        return true;\n    }, // `setState` is immutable, and `eventsCallback`, `fnArg`, and\n    // `keyValidating` are depending on `key`, so we can exclude them from\n    // the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // `useSWR('key', () => fetch('/api/'), { suspense: true })`\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        key,\n        cache\n    ]);\n    // Similar to the global mutate but bound to the current cache and key.\n    // `cache` isn't allowed to change during the lifecycle.\n    const boundMutate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(// Use callback to make sure `keyRef.current` returns latest result every time\n    (...args)=>{\n        return (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.internalMutate)(cache, keyRef.current, ...args);\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // The logic for updating refs.\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(()=>{\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        // Handle laggy data updates. If there's cached data of the current key,\n        // it'll be the correct reference.\n        if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cachedData)) {\n            laggyDataRef.current = cachedData;\n        }\n    });\n    // After mounted or key changed.\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(()=>{\n        if (!key) return;\n        const softRevalidate = revalidate.bind(swr_internal__WEBPACK_IMPORTED_MODULE_3__.UNDEFINED, WITH_DEDUPE);\n        // Expose revalidators to global event listeners. So we can trigger\n        // revalidation from the outside.\n        let nextFocusRevalidatedAt = 0;\n        const onRevalidate = (type, opts = {})=>{\n            if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.FOCUS_EVENT) {\n                const now = Date.now();\n                if (getConfig().revalidateOnFocus && now > nextFocusRevalidatedAt && isActive()) {\n                    nextFocusRevalidatedAt = now + getConfig().focusThrottleInterval;\n                    softRevalidate();\n                }\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.RECONNECT_EVENT) {\n                if (getConfig().revalidateOnReconnect && isActive()) {\n                    softRevalidate();\n                }\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.MUTATE_EVENT) {\n                return revalidate();\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.ERROR_REVALIDATE_EVENT) {\n                return revalidate(opts);\n            }\n            return;\n        };\n        const unsubEvents = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.subscribeCallback)(key, EVENT_REVALIDATORS, onRevalidate);\n        // Mark the component as mounted and update corresponding refs.\n        unmountedRef.current = false;\n        keyRef.current = key;\n        initialMountedRef.current = true;\n        // Keep the original key in the cache.\n        setCache({\n            _k: fnArg\n        });\n        // Trigger a revalidation\n        if (shouldDoInitialRevalidation) {\n            if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) || swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_SERVER) {\n                // Revalidate immediately.\n                softRevalidate();\n            } else {\n                // Delay the revalidate if we have data to return so we won't block\n                // rendering.\n                (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.rAF)(softRevalidate);\n            }\n        }\n        return ()=>{\n            // Mark it as unmounted.\n            unmountedRef.current = true;\n            unsubEvents();\n        };\n    }, [\n        key\n    ]);\n    // Polling\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(()=>{\n        let timer;\n        function next() {\n            // Use the passed interval\n            // ...or invoke the function with the updated data to get the interval\n            const interval = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isFunction)(refreshInterval) ? refreshInterval(getCache().data) : refreshInterval;\n            // We only start the next interval if `refreshInterval` is not 0, and:\n            // - `force` is true, which is the start of polling\n            // - or `timer` is not 0, which means the effect wasn't canceled\n            if (interval && timer !== -1) {\n                timer = setTimeout(execute, interval);\n            }\n        }\n        function execute() {\n            // Check if it's OK to execute:\n            // Only revalidate when the page is visible, online, and not errored.\n            if (!getCache().error && (refreshWhenHidden || getConfig().isVisible()) && (refreshWhenOffline || getConfig().isOnline())) {\n                revalidate(WITH_DEDUPE).then(next);\n            } else {\n                // Schedule the next interval to check again.\n                next();\n            }\n        }\n        next();\n        return ()=>{\n            if (timer) {\n                clearTimeout(timer);\n                timer = -1;\n            }\n        };\n    }, [\n        refreshInterval,\n        refreshWhenHidden,\n        refreshWhenOffline,\n        key\n    ]);\n    // Display debug info in React DevTools.\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(returnedData);\n    // In Suspense mode, we can't return the empty `data` state.\n    // If there is an `error`, the `error` needs to be thrown to the error boundary.\n    // If there is no `error`, the `revalidation` promise needs to be thrown to\n    // the suspense boundary.\n    if (suspense && (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) && key) {\n        // SWR should throw when trying to use Suspense on the server with React 18,\n        // without providing any initial data. See:\n        // https://github.com/vercel/swr/issues/1832\n        if (!swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_REACT_LEGACY && swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_SERVER) {\n            throw new Error('Fallback data is required when using suspense in SSR.');\n        }\n        // Always update fetcher and config refs even with the Suspense mode.\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        unmountedRef.current = false;\n        const req = PRELOAD[key];\n        if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(req)) {\n            const promise = boundMutate(req);\n            use(promise);\n        }\n        if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(error)) {\n            const promise = revalidate(WITH_DEDUPE);\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(returnedData)) {\n                promise.status = 'fulfilled';\n                promise.value = true;\n            }\n            use(promise);\n        } else {\n            throw error;\n        }\n    }\n    return {\n        mutate: boundMutate,\n        get data () {\n            stateDependencies.data = true;\n            return returnedData;\n        },\n        get error () {\n            stateDependencies.error = true;\n            return error;\n        },\n        get isValidating () {\n            stateDependencies.isValidating = true;\n            return isValidating;\n        },\n        get isLoading () {\n            stateDependencies.isLoading = true;\n            return isLoading;\n        }\n    };\n};\nswr_internal__WEBPACK_IMPORTED_MODULE_3__.OBJECT.defineProperty(swr_internal__WEBPACK_IMPORTED_MODULE_3__.SWRConfig, 'defaultValue', {\n    value: swr_internal__WEBPACK_IMPORTED_MODULE_3__.defaultConfig\n});\n/**\n * A hook to fetch data.\n *\n * @link https://swr.vercel.app\n * @example\n * ```jsx\n * import useSWR from 'swr'\n * function Profile() {\n *   const { data, error, isLoading } = useSWR('/api/user', fetcher)\n *   if (error) return <div>failed to load</div>\n *   if (isLoading) return <div>loading...</div>\n *   return <div>hello {data.name}!</div>\n * }\n * ```\n */ const useSWR = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.withArgs)(useSWRHandler);\n\nconst getFirstPageKey = (getKey)=>{\n    return (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.serialize)(getKey ? getKey(0, null) : null)[0];\n};\nconst unstable_serialize = (getKey)=>{\n    return swr_internal__WEBPACK_IMPORTED_MODULE_3__.INFINITE_PREFIX + getFirstPageKey(getKey);\n};\n\n// We have to several type castings here because `useSWRInfinite` is a special\n// hook where `key` and return type are not like the normal `useSWR` types.\n// const INFINITE_PREFIX = '$inf$'\nconst EMPTY_PROMISE = Promise.resolve();\n// export const unstable_serialize = (getKey: SWRInfiniteKeyLoader) => {\n//   return INFINITE_PREFIX + getFirstPageKey(getKey)\n// }\nconst infinite = (useSWRNext)=>(getKey, fn, config)=>{\n        const didMountRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n        const { cache: cache$1, initialSize = 1, revalidateAll = false, persistSize = false, revalidateFirstPage = true, revalidateOnMount = false, parallel = false } = config;\n        const [, , , PRELOAD] = swr_internal__WEBPACK_IMPORTED_MODULE_3__.SWRGlobalState.get(swr_internal__WEBPACK_IMPORTED_MODULE_3__.cache);\n        // The serialized key of the first page. This key will be used to store\n        // metadata of this SWR infinite hook.\n        let infiniteKey;\n        try {\n            infiniteKey = getFirstPageKey(getKey);\n            if (infiniteKey) infiniteKey = swr_internal__WEBPACK_IMPORTED_MODULE_3__.INFINITE_PREFIX + infiniteKey;\n        } catch (err) {\n        // Not ready yet.\n        }\n        const [get, set, subscribeCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.createCacheHelper)(cache$1, infiniteKey);\n        const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n            const size = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(get()._l) ? initialSize : get()._l;\n            return size;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            cache$1,\n            infiniteKey,\n            initialSize\n        ]);\n        (0,use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((callback)=>{\n            if (infiniteKey) return subscribeCache(infiniteKey, ()=>{\n                callback();\n            });\n            return ()=>{};\n        }, // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            cache$1,\n            infiniteKey\n        ]), getSnapshot, getSnapshot);\n        const resolvePageSize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n            const cachedPageSize = get()._l;\n            return (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cachedPageSize) ? initialSize : cachedPageSize;\n        // `cache` isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            infiniteKey,\n            initialSize\n        ]);\n        // keep the last page size to restore it with the persistSize option\n        const lastPageSizeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(resolvePageSize());\n        // When the page key changes, we reset the page size if it's not persisted\n        (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(()=>{\n            if (!didMountRef.current) {\n                didMountRef.current = true;\n                return;\n            }\n            if (infiniteKey) {\n                // If the key has been changed, we keep the current page size if persistSize is enabled\n                // Otherwise, we reset the page size to cached pageSize\n                set({\n                    _l: persistSize ? lastPageSizeRef.current : resolvePageSize()\n                });\n            }\n        // `initialSize` isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            infiniteKey,\n            cache$1\n        ]);\n        // Needs to check didMountRef during mounting, not in the fetcher\n        const shouldRevalidateOnMount = revalidateOnMount && !didMountRef.current;\n        // Actual SWR hook to load all pages in one fetcher.\n        const swr = useSWRNext(infiniteKey, async (key)=>{\n            // get the revalidate context\n            const forceRevalidateAll = get()._i;\n            const shouldRevalidatePage = get()._r;\n            set({\n                _r: swr_internal__WEBPACK_IMPORTED_MODULE_3__.UNDEFINED\n            });\n            // return an array of page data\n            const data = [];\n            const pageSize = resolvePageSize();\n            const [getCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.createCacheHelper)(cache$1, key);\n            const cacheData = getCache().data;\n            const revalidators = [];\n            let previousPageData = null;\n            for(let i = 0; i < pageSize; ++i){\n                const [pageKey, pageArg] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.serialize)(getKey(i, parallel ? null : previousPageData));\n                if (!pageKey) {\n                    break;\n                }\n                const [getSWRCache, setSWRCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.createCacheHelper)(cache$1, pageKey);\n                // Get the cached page data.\n                let pageData = getSWRCache().data;\n                // should fetch (or revalidate) if:\n                // - `revalidateAll` is enabled\n                // - `mutate()` called\n                // - the cache is missing\n                // - it's the first page and it's not the initial render\n                // - `revalidateOnMount` is enabled and it's on mount\n                // - cache for that page has changed\n                const shouldFetchPage = revalidateAll || forceRevalidateAll || (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(pageData) || revalidateFirstPage && !i && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cacheData) || shouldRevalidateOnMount || cacheData && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cacheData[i]) && !config.compare(cacheData[i], pageData);\n                if (fn && (typeof shouldRevalidatePage === 'function' ? shouldRevalidatePage(pageData, pageArg) : shouldFetchPage)) {\n                    const revalidate = async ()=>{\n                        const hasPreloadedRequest = pageKey in PRELOAD;\n                        if (!hasPreloadedRequest) {\n                            pageData = await fn(pageArg);\n                        } else {\n                            const req = PRELOAD[pageKey];\n                            // delete the preload cache key before resolving it\n                            // in case there's an error\n                            delete PRELOAD[pageKey];\n                            // get the page data from the preload cache\n                            pageData = await req;\n                        }\n                        setSWRCache({\n                            data: pageData,\n                            _k: pageArg\n                        });\n                        data[i] = pageData;\n                    };\n                    if (parallel) {\n                        revalidators.push(revalidate);\n                    } else {\n                        await revalidate();\n                    }\n                } else {\n                    data[i] = pageData;\n                }\n                if (!parallel) {\n                    previousPageData = pageData;\n                }\n            }\n            // flush all revalidateions in parallel\n            if (parallel) {\n                await Promise.all(revalidators.map((r)=>r()));\n            }\n            // once we executed the data fetching based on the context, clear the context\n            set({\n                _i: swr_internal__WEBPACK_IMPORTED_MODULE_3__.UNDEFINED\n            });\n            // return the data\n            return data;\n        }, config);\n        const mutate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(// eslint-disable-next-line func-names\n        function(data, opts) {\n            // When passing as a boolean, it's explicitly used to disable/enable\n            // revalidation.\n            const options = typeof opts === 'boolean' ? {\n                revalidate: opts\n            } : opts || {};\n            // Default to true.\n            const shouldRevalidate = options.revalidate !== false;\n            // It is possible that the key is still falsy.\n            if (!infiniteKey) return EMPTY_PROMISE;\n            if (shouldRevalidate) {\n                if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data)) {\n                    // We only revalidate the pages that are changed\n                    set({\n                        _i: false,\n                        _r: options.revalidate\n                    });\n                } else {\n                    // Calling `mutate()`, we revalidate all pages\n                    set({\n                        _i: true,\n                        _r: options.revalidate\n                    });\n                }\n            }\n            return arguments.length ? swr.mutate(data, {\n                ...options,\n                revalidate: shouldRevalidate\n            }) : swr.mutate();\n        }, // swr.mutate is always the same reference\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            infiniteKey,\n            cache$1\n        ]);\n        // Extend the SWR API\n        const setSize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((arg)=>{\n            // It is possible that the key is still falsy.\n            if (!infiniteKey) return EMPTY_PROMISE;\n            const [, changeSize] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.createCacheHelper)(cache$1, infiniteKey);\n            let size;\n            if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isFunction)(arg)) {\n                size = arg(resolvePageSize());\n            } else if (typeof arg == 'number') {\n                size = arg;\n            }\n            if (typeof size != 'number') return EMPTY_PROMISE;\n            changeSize({\n                _l: size\n            });\n            lastPageSizeRef.current = size;\n            // Calculate the page data after the size change.\n            const data = [];\n            const [getInfiniteCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.createCacheHelper)(cache$1, infiniteKey);\n            let previousPageData = null;\n            for(let i = 0; i < size; ++i){\n                const [pageKey] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.serialize)(getKey(i, previousPageData));\n                const [getCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.createCacheHelper)(cache$1, pageKey);\n                // Get the cached page data.\n                const pageData = pageKey ? getCache().data : swr_internal__WEBPACK_IMPORTED_MODULE_3__.UNDEFINED;\n                // Call `mutate` with infinte cache data if we can't get it from the page cache.\n                if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(pageData)) {\n                    return mutate(getInfiniteCache().data);\n                }\n                data.push(pageData);\n                previousPageData = pageData;\n            }\n            return mutate(data);\n        }, // exclude getKey from the dependencies, which isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            infiniteKey,\n            cache$1,\n            mutate,\n            resolvePageSize\n        ]);\n        // Use getter functions to avoid unnecessary re-renders caused by triggering\n        // all the getters of the returned swr object.\n        return {\n            size: resolvePageSize(),\n            setSize,\n            mutate,\n            get data () {\n                return swr.data;\n            },\n            get error () {\n                return swr.error;\n            },\n            get isValidating () {\n                return swr.isValidating;\n            },\n            get isLoading () {\n                return swr.isLoading;\n            }\n        };\n    };\nconst useSWRInfinite = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.withMiddleware)(useSWR, infinite);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/dist/infinite/index.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmihirpradhan%2FDesktop%2Ftest%2Fsrc%2Fapp%2F%5B%5B...sign-in%5D%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);